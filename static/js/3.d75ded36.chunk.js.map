{"version":3,"sources":["../node_modules/bodymovin/build/player/bodymovin.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","root","factory","window","svgNS","locationHref","subframeEnabled","expressionsPlugin","isSafari","test","navigator","userAgent","cachedColors","bm_rounder","Math","round","bm_rnd","bm_pow","pow","bm_sqrt","sqrt","bm_abs","abs","bm_floor","floor","bm_max","max","bm_min","min","blitter","BMMath","ProjectInterface","i","propertyNames","Object","getOwnPropertyNames","len","length","random","val","absArr","Array","apply","defaultCurveSegments","degToRads","PI","roundCorner","roundValues","flag","roundTo2Decimals","roundTo3Decimals","styleDiv","element","style","position","top","left","display","transformOrigin","webkitTransformOrigin","backfaceVisibility","webkitBackfaceVisibility","transformStyle","webkitTransformStyle","mozTransformStyle","styleUnselectableDiv","userSelect","MozUserSelect","webkitUserSelect","oUserSelect","BMEnterFrameEvent","n","c","t","d","this","type","currentTime","totalTime","direction","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","totalFrames","BMDestroyEvent","target","_addEventListener","eventName","callback","_cbs","push","removeEventListener","bind","_removeEventListener","splice","_triggerEvent","args","randomString","chars","undefined","result","HSVtoRGB","h","s","v","r","g","b","p","q","arguments","RGBtoHSV","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","componentToHex","hex","toString","rgbToHex","colorMap","fillToRgba","alpha","exec","parseInt","fillColorToString","colorArr","join","RenderedFrame","tr","o","iterateDynamicProperties","num","dynamicProperties","getValue","reversePath","paths","newI","newO","newV","newPaths","init","cnt","Matrix","reset","props","rotate","angle","mCos","cos","mSin","sin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","tan","skewFromAxis","scale","sz","isNaN","setTransform","a","e","j","k","l","m","translate","tx","ty","tz","transform","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","clone","matr","cloneFromProps","applyToPoint","x","y","z","applyToX","applyToY","applyToZ","inversePoint","pt","determinant","inversePoints","pts","retPts","applyToPointArray","dimensions","arr","point_pool","newPoint","applyToPointStringified","toArray","toCSS","cssParts","to2dCSS","pool","math","nodecrypto","global","width","chunks","rngname","startdenom","significance","overflow","mask","ARC4","key","keylen","me","S","count","copy","slice","mixkey","seed","smear","stringseed","charCodeAt","tostring","String","fromCharCode","options","shortseed","flatten","obj","depth","prop","typ","entropy","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","autoseed","arc4","prng","int32","quick","double","pass","is_math_call","state","BezierFactory","ob","getBezierEasing","nm","str","replace","beziers","bezEasing","BezierEasing","NEWTON_ITERATIONS","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","Float32Array","A","aA1","aA2","B","C","calcBezier","aT","getSlope","points","_p","_mSampleValues","_precomputed","get","prototype","mX1","mY1","mX2","mY2","_precompute","_getTForX","_calcSampleValues","aX","mSampleValues","intervalStart","currentSample","lastSample","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","binarySubdivide","createElement","parent","child","params","instance","create","call","constructor","_parent","extendPrototype","source","destination","attr","hasOwnProperty","bezFunction","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","getBezierLength","Segment","pt1","pt2","pt3","pt4","ptCoord","perc","ptDistance","curveSegments","addedLength","point","lastPoint","lengthData","segments","BezierData","segmentLength","PointData","partial","partialLength","buildBezierData","storedData","keyData","to","ti","bezierName","bezierData","getDistancePerc","initPos","lengthPos","lPerc","dir","SegmentPoints","getSegmentsLength","shapeData","closed","pathV","pathO","pathI","_length","lengths","totalLength","getNewSegment","startPerc","endPerc","t0","t1","u0","u1","getPointInSegment","percent","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","id","setTimeout","clearTimeout","bez","dataFunctionManager","findCompLayers","comps","layers","__used","JSON","parse","stringify","completeShapes","jLen","ks","convertPathsToAbsoluteValues","it","path","checkVersion","minimum","animVersionString","animVersion","split","checkText","minimumVersion","updateTextLayer","textLayer","documentData","iterateLayers","animationData","assets","checkChars","pathData","data","shapes","__converted","checkColors","iterateShapes","checkShapes","layerData","kLen","hasMask","maskProps","masksProperties","cl","moduleOb","completeData","fontManager","__complete","completeLayers","completed","tt","td","refId","singleShape","dataManager","FontManager","maxWaitingTime","setUpNode","font","family","parentNode","document","fontFamily","node","innerHTML","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","appendChild","body","offsetWidth","w","createHelper","def","fontData","tHelper","createElementNS","fFamily","textContent","fClass","className","tCanvasHelper","getContext","Font","fonts","typekitLoaded","loaded","initTime","now","addChars","found","ch","addFonts","defs","list","fontArr","monoCase","sansCase","fPath","fOrigin","origin","rel","href","sc","setAttribute","helper","checkLoadedFonts","loadedCount","Typekit","load","async","active","removeChild","getCharData","char","getFontByName","name","fName","measureText","fontName","size","PropertyFactory","initFrame","interpolateValue","frameNum","iterationIndex","previousValue","caching","newValue","offsetTime","nextKeyData","fnc","keyframes","ind","_lastBezierData","__fnct","segmentPerc","distanceInLine","lastFrame","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","sh","initP","endP","value","getValueAtCurrentTime","elem","globalData","frameId","mdf","comp","renderedFrame","endTime","_caching","lastIndex","renderResult","pv","mult","lastPValue","getNoValue","ValueProperty","kf","vel","MultiDimensionalProperty","lastValue","map","KeyframedValueProperty","st","KeyframedMultidimensionalProperty","TransformProperty","positionGetter","ExpressionValue","px","py","pz","xPositionGetter","yPositionGetter","anchorGetter","orientationGetter","or","rotationGetter","rz","scaleGetter","opacityGetter","skewGetter","sk","skewAxisGetter","sa","applyToMatrix","mat","ry","rx","processKeys","v1","v2","autoOriented","getValueAtTime","frameRate","atan2","setInverted","inverted","iv","autoOrient","getProp","defineProperty","getGradientProp","forceRender","cmdf","omdf","gradientProp","cLength","DashProperty","dataProps","renderer","dasharray","dashoffset","TextSelectorProp","updateRange","newCharsFlag","totalChars","textProperty","currentData","divisor","_s","finalS","finalE","getMult","easer","ne","xe","tot","getDashProp","getTextSelectorProp","ShapePath","_maxLength","setPathData","setLength","doubleArrayLength","concat","setXYAt","pos","setTripleAt","vX","vY","oX","oY","iX","iY","ShapePropertyFactory","interpolateShape","isCurrentRender","keyPropS","keyPropE","isHold","vertexValue","hasModified","resetShape","localShapeCollection","ShapeProperty","__shapeObject","shape_pool","shapeCollection_pool","newShapeCollection","addShape","KeyframedShapeProperty","_lastIndex","newShape","EllShapeProperty","cPoint","convertEllToPath","p0","s0","s1","StarShapeProperty","convertPolygonToPath","numPts","rad","roundness","os","perimSegment","currentAng","ox","oy","convertStarToPath","longFlag","longRad","shortRad","ir","longRound","shortRound","is","longPerimSegment","shortPerimSegment","convertToPath","RectShapeProperty","convertRectToPath","v0","getShapeProp","dataProp","keys","getConstructorFunction","getKeyframedConstructorFunction","ShapeModifiers","modifiers","registerModifier","getModifier","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","initModifierProperties","addShapeToModifier","shape","sValue","eValue","oValue","calculateShapeEdges","shapeLength","totalModifierLength","segmentOb","shapeSegments","shapeS","shapeE","processShapes","shapePaths","pathsData","totalShapeLength","releaseShapes","edges","newShapesData","addShapes","lastShape","pop","addPaths","addSegment","shapePath","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","index","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","inv","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","unshift","resetElements","elements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","copies","ceil","group","ix","reloadShapes","cont","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","itemsTransform","items","mProps","release","ImagePreloader","imagesLoadedCb","imageLoaded","loadedAssets","totalImages","getAssetsPath","assetData","assetsPath","imagePath","indexOf","u","loadImage","img","addEventListener","src","loadAssets","cb","totalAssets","setPath","setAssetsPath","featureSupport","maskType","filtersFactory","createFilter","filId","fil","createAlphaToLuminanceFilter","feColorMatrix","TextAnimatorProperty","textData","renderType","_firstFrame","_hasMaskedPath","_frameId","_dynamicProperties","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","LetterProps","sw","fc","TextProperty","keysIndex","ascent","boxWidth","fStyle","fWeight","justifyOffset","lh","lineWidths","ls","of","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","searchProperty","searchProperties","animatorData","animatorProps","fh","fs","fb","maskManager","getMaskProperty","getMeasures","xPos","yPos","animators","matrixHelper","mHelper","renderedLettersCount","letters","pathInfo","tLength","pi","currentPoint","prevPoint","currentLength","segmentInd","pointInd","tanAngle","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","letterM","letterP","defaultPropsArray","line","extra","an","animatorOffset","anIndexes","add","rot","atan","ps","update","updated","setCurrentData","textDocumentData","textKeys","completeTextData","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","styles","toLowerCase","trackingOffset","lastSpaceIndex","charAt","substr","currentChar","uncollapsedSpaces","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","dData","pooling","cloned","releaseArray","shapePathsCollection","shapeCollection","originCollection","BaseRenderer","SVGRenderer","animationItem","config","renderConfig","preserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","pendingElements","destroyed","MaskElement","viewData","maskElement","rect","expansor","feMorph","properties","currentMasks","layerId","maskRef","mode","filterID","expan","lastPath","lastOperator","filterId","lastRadius","solidPath","createLayerSolidPath","op","invRect","drawPath","maskedElement","BaseElement","SVGBaseElement","parentContainer","placeholder","matteElement","transformedElement","isTransparent","_sizeChanged","IShapeElement","shapesData","stylesList","itemsData","prevViewData","shapeModifiers","processedElements","checkLayers","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createShape","createText","createCamera","createBase","Error","buildAllItems","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","_isParent","setHierarchy","addPendingElement","layerElement","SVGTextElement","IImageElement","ICompElement","ISolidElement","configAnimation","animData","height","wrapper","getAssetData","compSize","fr","maskId","destroy","updateContainerSize","registerComposition","initExpressions","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","newElement","getBaseElement","nextElement","insertBefore","hide","show","searchExtraCompositions","floatingContainer","xt","finalMat","finalTransform","mProp","getMaskelement","pathNodes","pathString","checkMasks","isVisible","elemMdf","sr","currentFrameNum","globalToLocal","transforms","ptNew","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","createShapeInterface","textInterface","TextExpressionInterface","setBlendMode","blendModeValue","bm","baseElement","ef","effects","EffectsManager","hidden","lastNum","matMdf","opMdf","opacity","ao","createElements","addMasks","getType","resetHierarchy","getHierarchy","getLayerSize","sourceRectAtTime","layerElementParent","masker","gg","maskGroup","maskGrouper","alphaRect","ln","cp","clipId","cpGroup","effectsManager","SVGEffects","parentTransform","hd","identityMatrix","lcEnum","1","2","3","ljEnum","searchProcessedElement","addProcessedElement","buildExpressionInterface","searchShapes","setGradientData","pathElement","gfill","gradientId","stop","stops","gf","cst","setGradientOpacity","styleOb","opFill","opacityId","ost","msElem","createStyleElement","level","elementData","ld","lvl","lc","lj","ml","pElem","createGroupElement","gr","createTransformElement","createShapeElement","ownTransformers","caches","transformers","lStr","addShapeToModifiers","ITextElement","textSpans","SVGTintFilter","filter","filterManager","matrixFilter","effectElements","feMergeNode","feMerge","SVGFillFilter","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feGaussianBlur","feOffset","feFlood","feComposite","originalNodeAdded","SVGMatte3Effect","filterElem","filters","supports3d","tm","setElementStyles","renderModifiers","container","render","currentTransform","modifier","processedPos","ownStyles","ownModifiers","parentMatrix","renderShape","renderPath","renderFill","renderGradient","renderStroke","buildShapeString","shapeString","itemData","pathStringTransformed","redraw","lLen","iterations","styleData","styleElem","attr1","attr2","cValues","oValues","ang","dist","textAnimator","buildNewText","createPathShape","shapeStr","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","textContainer","usesGlyphs","tSpan","tElement","justify","cachedSpansLength","setAttributeNS","time","renderLetters","textBox","getBBox","bbox","renderedLetter","textSpan","colorBlack","colorWhite","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","lineLength","units","color1","color2","color3","tableR","tableG","tableB","feFunc","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","col","setElementAsMask","timeRemapped","renderParent","setElements","elems","getElements","assetPath","innerElem","animationManager","registeredAnimations","idled","playingAnimationsNum","removeElement","ev","animItem","animation","isPaused","subtractPlayingCount","registerAnimation","AnimationItem","setupAnimation","setData","addPlayingCount","first","resume","nowTime","elapsedTime","advanceTime","start","loadAnimation","setParams","setSpeed","setDirection","play","moveFrame","pause","togglePause","searchAnimations","standalone","animElements","getElementsByClassName","getElementsByTagName","div","resize","goToAndStop","isFrame","isLoaded","currentRawFrame","frameMult","playSpeed","playDirection","playCount","prerenderFramesFlag","autoplay","loop","animationID","scaleMode","timeCompleted","segmentPos","pendingSegment","_idle","CanvasRenderer","clearCanvas","context","dpr","devicePixelRatio","contextData","saved","savedOp","cArrPos","cTr","cO","transformMat","HybridRenderer","threeDElements","camera","CVBaseElement","canvasContext","CVCompElement","compGlobalData","compHeight","compWidth","parentGlobalData","cv","canvas","CVImageElement","CVMaskElement","CVShapeElement","CVSolidElement","CVTextElement","stroke","fill","currentRender","values","sWidth","fValue","HBaseElement","HSolidElement","HCompElement","HShapeElement","currentBBox","self","animType","rendererSettings","prerender","autoloadSegments","xhr","XMLHttpRequest","lastIndexOf","fileName","open","send","onreadystatechange","readyState","status","responseText","response","err","wrapperAttributes","attributes","getNamedItem","tf","loadNextSegment","trigger","shift","segmentPath","loadSegments","_this","imagePreloader","updaFrameModifier","waitForFontsLoaded","checkLoaded","checkFontsLoaded","elementLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","adjustSegment","updateAnimation","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","checkSegments","remove","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getAssets","triggerEvent","ctxTransform","trProps","ctxOpacity","globalAlpha","restore","save","actionFlag","popped","mozTransformOrigin","isDashed","transformCanvas","elementWidth","elementHeight","elementRel","animationRel","offsetHeight","par","fillType","clearRect","beginPath","closePath","clip","newDOMElement","ddd","addTo3dContainer","nextDOMElement","nextLayer","getThreeDContainerByPos","HTextElement","HCameraElement","HImageElement","startPos","endPos","perspectiveElem","createThreeDContainer","webkitTransform","resizerElem","threeDContainerData","build3dContainers","lastThreeDContainerData","svg","setup","cWidth","cHeight","perspective","webkitPerspective","checkBlendMode","blendMode","globalCompositeOperation","maxScale","drawImage","widthCrop","heightCrop","ctx","imgW","imgH","imgRel","canvasRel","imageFailed","failed","Image","hasMasks","moveTo","lineTo","bezierCurveTo","transformHelper","dashResetter","co","wi","da","do","nodes","trNodes","hasStrokes","hasFills","fl","ownArrays","isMain","groupTransform","groupMatrix","mtArr","strokeStyle","lineCap","lineJoin","miterLimit","fillStyle","coOp","setLineDash","lineDashOffset","p3","groupTransformMat","fillRect","hasFill","hasStroke","commands","pathArr","lastFill","lastStroke","lastStrokeW","getDomElement","divElement","compSvg","textPaths","isMasked","pe","_renderShapeFrame","shapesContainer","shapeCont","boundingBox","changed","compW","compH","innerElemStyle","strokeWidth","lineHeight","tParent","tCont","textPath","margin","imageElem","diffVector","mag","lookDir","lookLengthOnXZ","m_rotationX","m_rotationY","Expressions","getStaticValueAtTime","loopOut","duration","durationFlag","cycleDuration","firstKeyFrame","lastKeyFrame","ret","initV","endV","current","repeats","nextLastValue","loopIn","firstValue","nextFirstValue","_cachingAtTime","interpolationResult","getVelocityAtTime","velocity","setGroupProperty","propertyGroup","searchExpressions","getPreValue","ExpressionManager","initiateExpression","TextExpressionSelectorProp","getValueProxy","total","textIndex","textTotal","selectorValue","propertyGetProp","console","log","numKeys","isAdded","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","vertices","inTangents","outTangents","isClosed","pointOnPath","_segmentsLength","segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","tangentOnPath","normalOnPath","_shapeValueAtTime","_lastIndexAtTime","_lastTimeAtTime","propertyGetShapeProp","trims","propertyGetTextProp","getExpressionValue","calculateExpression","duplicatePropertyValue","Number","shapesEqual","shape1","shape2","$bm_neg","tOfA","lenA","retArr","sum","tOfB","lenB","sub","mul","mod","clamp","mm","radiansToDegrees","radians_to_degrees","degreesToRadians","degrees_to_radians","helperLengthArray","arr1","arr2","normalize","vec","rgbToHsl","hslToRgb","hue2rgb","linear","tMin","tMax","value1","value2","rnd","createPath","property","needsVelocity","_needsRandom","elemType","content","effect","thisComp","thisProperty","frameDuration","inPoint","outPoint","loop_in","loop_out","toWorld","fromWorld","fromComp","fromCompToSurface","anchorPoint","thisLayer","valueAtTime","velocityAtTime","fn","Function","eval","bindedFn","wiggle","freq","amp","addedAmps","periods","loopInDuration","loopOutDuration","lookAt","elem1","elem2","fVec","pitch","easeOut","val1","val2","nearestKey","keyTime","framesToTime","frames","fps","timeToFrames","seedRandom","seedrandom","randSeed","hasParent","executeExpression","frameExpressionId","lock","view","shapeInterfaceFactory","createGroupInterface","groupInterfaceFactory","createTrimInterface","trimInterfaceFactory","createStrokeInterface","strokeInterfaceFactory","createTransformInterface","transformInterfaceFactory","createEllipseInterface","ellipseInterfaceFactory","createStarInterface","starInterfaceFactory","createRectInterface","rectInterfaceFactory","createRoundedInterface","roundedInterfaceFactory","createRepatearInterface","repeaterInterfaceFactory","createPathInterface","pathInterfaceFactory","createFillInterface","fillInterfaceFactory","iterateElements","interfaces","_interfaceFunction","_name","contentsInterfaceFactory","interfaceFunction","mn","propertyIndex","numProperties","cix","transformInterface","np","_propertyGroup","_dashPropertyGroup","dashOb","addPropertyToDashOb","rotation","skewAxis","outerRadius","outerRoundness","innerRoundness","innerRadius","radius","_sourceText","_thisLayerFunction","stringValue","_prevValue","toWorldMat","TransformExpressionInterface","toComp","MaskManagerInterface","pixelAspect","_thisFunction","xPosition","yPosition","compositions","_thisProjectFunction","createValueInterface","groupInterface","en","effectsData","MaskInterface","_mask","_data","_masksInterfaces","elementProp","expressionValue","arrValue","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","effectItem","GroupEffect","eff","bodymovinjs","setLocationHref","setSubframeRendering","setQuality","inBrowser","installPlugin","plugin","getFactory","checkReady","clearInterval","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","__getFactory","version","scripts","myScript","setInterval","exports","__webpack_require__","module"],"mappings":"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","file":"static/js/3.d75ded36.chunk.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(function () {\n      return factory(root);\n    });\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory(root);\n  } else {\n    root.bodymovin = factory(root);\n  }\n})(window || {}, function (window) {\n  var svgNS = \"http://www.w3.org/2000/svg\";\n  var locationHref = '';\n  var subframeEnabled = true;\n  var expressionsPlugin;\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  var cachedColors = {};\n  var bm_rounder = Math.round;\n  var bm_rnd;\n  var bm_pow = Math.pow;\n  var bm_sqrt = Math.sqrt;\n  var bm_abs = Math.abs;\n  var bm_floor = Math.floor;\n  var bm_max = Math.max;\n  var bm_min = Math.min;\n  var blitter = 10;\n  var BMMath = {};\n\n  (function () {\n    var propertyNames = Object.getOwnPropertyNames(Math);\n    var i,\n        len = propertyNames.length;\n\n    for (i = 0; i < len; i += 1) {\n      BMMath[propertyNames[i]] = Math[propertyNames[i]];\n    }\n  })();\n\n  function ProjectInterface() {\n    return {};\n  }\n\n  ;\n  BMMath.random = Math.random;\n\n  BMMath.abs = function (val) {\n    var tOfVal = typeof val;\n\n    if (tOfVal === 'object' && val.length) {\n      var absArr = Array.apply(null, {\n        length: val.length\n      });\n      var i,\n          len = val.length;\n\n      for (i = 0; i < len; i += 1) {\n        absArr[i] = Math.abs(val[i]);\n      }\n\n      return absArr;\n    }\n\n    return Math.abs(val);\n  };\n\n  var defaultCurveSegments = 150;\n  var degToRads = Math.PI / 180;\n  var roundCorner = 0.5519;\n\n  function roundValues(flag) {\n    if (flag) {\n      bm_rnd = Math.round;\n    } else {\n      bm_rnd = function bm_rnd(val) {\n        return val;\n      };\n    }\n  }\n\n  roundValues(false);\n\n  function roundTo2Decimals(val) {\n    return Math.round(val * 10000) / 10000;\n  }\n\n  function roundTo3Decimals(val) {\n    return Math.round(val * 100) / 100;\n  }\n\n  function styleDiv(element) {\n    element.style.position = 'absolute';\n    element.style.top = 0;\n    element.style.left = 0;\n    element.style.display = 'block';\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\n    element.style.backfaceVisibility = element.style.webkitBackfaceVisibility = 'visible';\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\n  }\n\n  function styleUnselectableDiv(element) {\n    element.style.userSelect = 'none';\n    element.style.MozUserSelect = 'none';\n    element.style.webkitUserSelect = 'none';\n    element.style.oUserSelect = 'none';\n  }\n\n  function BMEnterFrameEvent(n, c, t, d) {\n    this.type = n;\n    this.currentTime = c;\n    this.totalTime = t;\n    this.direction = d < 0 ? -1 : 1;\n  }\n\n  function BMCompleteEvent(n, d) {\n    this.type = n;\n    this.direction = d < 0 ? -1 : 1;\n  }\n\n  function BMCompleteLoopEvent(n, c, t, d) {\n    this.type = n;\n    this.currentLoop = c;\n    this.totalLoops = t;\n    this.direction = d < 0 ? -1 : 1;\n  }\n\n  function BMSegmentStartEvent(n, f, t) {\n    this.type = n;\n    this.firstFrame = f;\n    this.totalFrames = t;\n  }\n\n  function BMDestroyEvent(n, t) {\n    this.type = n;\n    this.target = t;\n  }\n\n  function _addEventListener(eventName, callback) {\n    if (!this._cbs[eventName]) {\n      this._cbs[eventName] = [];\n    }\n\n    this._cbs[eventName].push(callback);\n\n    return function () {\n      this.removeEventListener(eventName, callback);\n    }.bind(this);\n  }\n\n  function _removeEventListener(eventName, callback) {\n    if (!callback) {\n      this._cbs[eventName] = null;\n    } else if (this._cbs[eventName]) {\n      var i = 0,\n          len = this._cbs[eventName].length;\n\n      while (i < len) {\n        if (this._cbs[eventName][i] === callback) {\n          this._cbs[eventName].splice(i, 1);\n\n          i -= 1;\n          len -= 1;\n        }\n\n        i += 1;\n      }\n\n      if (!this._cbs[eventName].length) {\n        this._cbs[eventName] = null;\n      }\n    }\n  }\n\n  function _triggerEvent(eventName, args) {\n    if (this._cbs[eventName]) {\n      var len = this._cbs[eventName].length;\n\n      for (var i = 0; i < len; i++) {\n        this._cbs[eventName][i](args);\n      }\n    }\n  }\n\n  function randomString(length, chars) {\n    if (chars === undefined) {\n      chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\n    }\n\n    var i;\n    var result = '';\n\n    for (i = length; i > 0; --i) {\n      result += chars[Math.round(Math.random() * (chars.length - 1))];\n    }\n\n    return result;\n  }\n\n  function HSVtoRGB(h, s, v) {\n    var r, g, b, i, f, p, q, t;\n\n    if (arguments.length === 1) {\n      s = h.s, v = h.v, h = h.h;\n    }\n\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v, g = t, b = p;\n        break;\n\n      case 1:\n        r = q, g = v, b = p;\n        break;\n\n      case 2:\n        r = p, g = v, b = t;\n        break;\n\n      case 3:\n        r = p, g = q, b = v;\n        break;\n\n      case 4:\n        r = t, g = p, b = v;\n        break;\n\n      case 5:\n        r = v, g = p, b = q;\n        break;\n    }\n\n    return [r, g, b];\n  }\n\n  function RGBtoHSV(r, g, b) {\n    if (arguments.length === 1) {\n      g = r.g, b = r.b, r = r.r;\n    }\n\n    var max = Math.max(r, g, b),\n        min = Math.min(r, g, b),\n        d = max - min,\n        h,\n        s = max === 0 ? 0 : d / max,\n        v = max / 255;\n\n    switch (max) {\n      case min:\n        h = 0;\n        break;\n\n      case r:\n        h = g - b + d * (g < b ? 6 : 0);\n        h /= 6 * d;\n        break;\n\n      case g:\n        h = b - r + d * 2;\n        h /= 6 * d;\n        break;\n\n      case b:\n        h = r - g + d * 4;\n        h /= 6 * d;\n        break;\n    }\n\n    return [h, s, v];\n  }\n\n  function addSaturationToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[1] += offset;\n\n    if (hsv[1] > 1) {\n      hsv[1] = 1;\n    } else if (hsv[1] <= 0) {\n      hsv[1] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addBrightnessToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[2] += offset;\n\n    if (hsv[2] > 1) {\n      hsv[2] = 1;\n    } else if (hsv[2] < 0) {\n      hsv[2] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addHueToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[0] += offset / 360;\n\n    if (hsv[0] > 1) {\n      hsv[0] -= 1;\n    } else if (hsv[0] < 0) {\n      hsv[0] += 1;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? '0' + hex : hex;\n  }\n\n  var rgbToHex = function () {\n    var colorMap = [];\n    var i;\n    var hex;\n\n    for (i = 0; i < 256; i += 1) {\n      hex = i.toString(16);\n      colorMap[i] = hex.length == 1 ? '0' + hex : hex;\n    }\n\n    return function (r, g, b) {\n      if (r < 0) {\n        r = 0;\n      }\n\n      if (g < 0) {\n        g = 0;\n      }\n\n      if (b < 0) {\n        b = 0;\n      }\n\n      return '#' + colorMap[r] + colorMap[g] + colorMap[b];\n    };\n  }();\n\n  function fillToRgba(hex, alpha) {\n    if (!cachedColors[hex]) {\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      cachedColors[hex] = parseInt(result[1], 16) + ',' + parseInt(result[2], 16) + ',' + parseInt(result[3], 16);\n    }\n\n    return 'rgba(' + cachedColors[hex] + ',' + alpha + ')';\n  }\n\n  var fillColorToString = function () {\n    var colorMap = [];\n    return function (colorArr, alpha) {\n      if (alpha !== undefined) {\n        colorArr[3] = alpha;\n      }\n\n      if (!colorMap[colorArr[0]]) {\n        colorMap[colorArr[0]] = {};\n      }\n\n      if (!colorMap[colorArr[0]][colorArr[1]]) {\n        colorMap[colorArr[0]][colorArr[1]] = {};\n      }\n\n      if (!colorMap[colorArr[0]][colorArr[1]][colorArr[2]]) {\n        colorMap[colorArr[0]][colorArr[1]][colorArr[2]] = {};\n      }\n\n      if (!colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]]) {\n        colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]] = 'rgba(' + colorArr.join(',') + ')';\n      }\n\n      return colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]];\n    };\n  }();\n\n  function RenderedFrame(tr, o) {\n    this.tr = tr;\n    this.o = o;\n  }\n\n  function iterateDynamicProperties(num) {\n    var i,\n        len = this.dynamicProperties;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue(num);\n    }\n  }\n\n  function reversePath(paths) {\n    var newI = [],\n        newO = [],\n        newV = [];\n    var i,\n        len,\n        newPaths = {};\n    var init = 0;\n\n    if (paths.c) {\n      newI[0] = paths.o[0];\n      newO[0] = paths.i[0];\n      newV[0] = paths.v[0];\n      init = 1;\n    }\n\n    len = paths.i.length;\n    var cnt = len - 1;\n\n    for (i = init; i < len; i += 1) {\n      newI.push(paths.o[cnt]);\n      newO.push(paths.i[cnt]);\n      newV.push(paths.v[cnt]);\n      cnt -= 1;\n    }\n\n    newPaths.i = newI;\n    newPaths.o = newO;\n    newPaths.v = newV;\n    return newPaths;\n  }\n  /*!\r\n   Transformation Matrix v2.0\r\n   (c) Epistemex 2014-2015\r\n   www.epistemex.com\r\n   By Ken Fyrstenberg\r\n   Contributions by leeoniya.\r\n   License: MIT, header required.\r\n   */\n\n  /**\r\n   * 2D transformation matrix object initialized with identity matrix.\r\n   *\r\n   * The matrix can synchronize a canvas context by supplying the context\r\n   * as an argument, or later apply current absolute transform to an\r\n   * existing context.\r\n   *\r\n   * All values are handled as floating point values.\r\n   *\r\n   * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n   * @prop {number} a - scale x\r\n   * @prop {number} b - shear y\r\n   * @prop {number} c - shear x\r\n   * @prop {number} d - scale y\r\n   * @prop {number} e - translate x\r\n   * @prop {number} f - translate y\r\n   * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n   * @constructor\r\n   */\n\n\n  var Matrix = function () {\n    function reset() {\n      this.props[0] = 1;\n      this.props[1] = 0;\n      this.props[2] = 0;\n      this.props[3] = 0;\n      this.props[4] = 0;\n      this.props[5] = 1;\n      this.props[6] = 0;\n      this.props[7] = 0;\n      this.props[8] = 0;\n      this.props[9] = 0;\n      this.props[10] = 1;\n      this.props[11] = 0;\n      this.props[12] = 0;\n      this.props[13] = 0;\n      this.props[14] = 0;\n      this.props[15] = 1;\n      return this;\n    }\n\n    function rotate(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = Math.cos(angle);\n      var mSin = Math.sin(angle);\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function rotateX(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = Math.cos(angle);\n      var mSin = Math.sin(angle);\n      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateY(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = Math.cos(angle);\n      var mSin = Math.sin(angle);\n      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateZ(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = Math.cos(angle);\n      var mSin = Math.sin(angle);\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function shear(sx, sy) {\n      return this._t(1, sy, sx, 1, 0, 0);\n    }\n\n    function skew(ax, ay) {\n      return this.shear(Math.tan(ax), Math.tan(ay));\n    }\n\n    function skewFromAxis(ax, angle) {\n      var mCos = Math.cos(angle);\n      var mSin = Math.sin(angle);\n      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, Math.tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, Math.tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\n    }\n\n    function scale(sx, sy, sz) {\n      sz = isNaN(sz) ? 1 : sz;\n\n      if (sx == 1 && sy == 1 && sz == 1) {\n        return this;\n      }\n\n      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\n    }\n\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n      this.props[0] = a;\n      this.props[1] = b;\n      this.props[2] = c;\n      this.props[3] = d;\n      this.props[4] = e;\n      this.props[5] = f;\n      this.props[6] = g;\n      this.props[7] = h;\n      this.props[8] = i;\n      this.props[9] = j;\n      this.props[10] = k;\n      this.props[11] = l;\n      this.props[12] = m;\n      this.props[13] = n;\n      this.props[14] = o;\n      this.props[15] = p;\n      return this;\n    }\n\n    function translate(tx, ty, tz) {\n      tz = tz || 0;\n\n      if (tx !== 0 || ty !== 0 || tz !== 0) {\n        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);\n      }\n\n      return this;\n    }\n\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\n      if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {\n        if (m2 !== 0 || n2 !== 0 || o2 !== 0) {\n          this.props[12] = this.props[12] * a2 + this.props[13] * e2 + this.props[14] * i2 + this.props[15] * m2;\n          this.props[13] = this.props[12] * b2 + this.props[13] * f2 + this.props[14] * j2 + this.props[15] * n2;\n          this.props[14] = this.props[12] * c2 + this.props[13] * g2 + this.props[14] * k2 + this.props[15] * o2;\n          this.props[15] = this.props[12] * d2 + this.props[13] * h2 + this.props[14] * l2 + this.props[15] * p2;\n        }\n\n        this._identityCalculated = false;\n        return this;\n      }\n\n      var a1 = this.props[0];\n      var b1 = this.props[1];\n      var c1 = this.props[2];\n      var d1 = this.props[3];\n      var e1 = this.props[4];\n      var f1 = this.props[5];\n      var g1 = this.props[6];\n      var h1 = this.props[7];\n      var i1 = this.props[8];\n      var j1 = this.props[9];\n      var k1 = this.props[10];\n      var l1 = this.props[11];\n      var m1 = this.props[12];\n      var n1 = this.props[13];\n      var o1 = this.props[14];\n      var p1 = this.props[15];\n      /* matrix order (canvas compatible):\r\n       * ace\r\n       * bdf\r\n       * 001\r\n       */\n\n      this.props[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\n      this.props[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;\n      this.props[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;\n      this.props[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;\n      this.props[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;\n      this.props[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;\n      this.props[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;\n      this.props[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;\n      this.props[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;\n      this.props[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;\n      this.props[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;\n      this.props[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;\n      this.props[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;\n      this.props[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;\n      this.props[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;\n      this.props[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;\n      this._identityCalculated = false;\n      return this;\n    }\n\n    function isIdentity() {\n      if (!this._identityCalculated) {\n        this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\n        this._identityCalculated = true;\n      }\n\n      return this._identity;\n    }\n\n    function clone(matr) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        matr.props[i] = this.props[i];\n      }\n    }\n\n    function cloneFromProps(props) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        this.props[i] = props[i];\n      }\n    }\n\n    function applyToPoint(x, y, z) {\n      return {\n        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\n      };\n      /*return {\r\n       x: x * me.a + y * me.c + me.e,\r\n       y: x * me.b + y * me.d + me.f\r\n       };*/\n    }\n\n    function applyToX(x, y, z) {\n      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\n    }\n\n    function applyToY(x, y, z) {\n      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\n    }\n\n    function applyToZ(x, y, z) {\n      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\n    }\n\n    function inversePoint(pt) {\n      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\n      var a = this.props[5] / determinant;\n      var b = -this.props[1] / determinant;\n      var c = -this.props[4] / determinant;\n      var d = this.props[0] / determinant;\n      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;\n      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;\n      return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\n    }\n\n    function inversePoints(pts) {\n      var i,\n          len = pts.length,\n          retPts = [];\n\n      for (i = 0; i < len; i += 1) {\n        retPts[i] = inversePoint(pts[i]);\n      }\n\n      return retPts;\n    }\n\n    function applyToPointArray(x, y, z, dimensions) {\n      if (dimensions && dimensions === 2) {\n        var arr = point_pool.newPoint();\n        arr[0] = x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\n        arr[1] = x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\n        return arr;\n      }\n\n      return [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12], x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13], x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\n    }\n\n    function applyToPointStringified(x, y) {\n      if (this.isIdentity()) {\n        return x + ',' + y;\n      }\n\n      return bm_rnd(x * this.props[0] + y * this.props[4] + this.props[12]) + ',' + bm_rnd(x * this.props[1] + y * this.props[5] + this.props[13]);\n    }\n\n    function toArray() {\n      return [this.props[0], this.props[1], this.props[2], this.props[3], this.props[4], this.props[5], this.props[6], this.props[7], this.props[8], this.props[9], this.props[10], this.props[11], this.props[12], this.props[13], this.props[14], this.props[15]];\n    }\n\n    function toCSS() {\n      if (isSafari) {\n        return \"matrix3d(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[2]) + ',' + roundTo2Decimals(this.props[3]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[6]) + ',' + roundTo2Decimals(this.props[7]) + ',' + roundTo2Decimals(this.props[8]) + ',' + roundTo2Decimals(this.props[9]) + ',' + roundTo2Decimals(this.props[10]) + ',' + roundTo2Decimals(this.props[11]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + ',' + roundTo2Decimals(this.props[14]) + ',' + roundTo2Decimals(this.props[15]) + ')';\n      } else {\n        this.cssParts[1] = this.props.join(',');\n        return this.cssParts.join('');\n      }\n    }\n\n    function to2dCSS() {\n      return \"matrix(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + \")\";\n    }\n\n    function toString() {\n      return \"\" + this.toArray();\n    }\n\n    return function () {\n      this.reset = reset;\n      this.rotate = rotate;\n      this.rotateX = rotateX;\n      this.rotateY = rotateY;\n      this.rotateZ = rotateZ;\n      this.skew = skew;\n      this.skewFromAxis = skewFromAxis;\n      this.shear = shear;\n      this.scale = scale;\n      this.setTransform = setTransform;\n      this.translate = translate;\n      this.transform = transform;\n      this.applyToPoint = applyToPoint;\n      this.applyToX = applyToX;\n      this.applyToY = applyToY;\n      this.applyToZ = applyToZ;\n      this.applyToPointArray = applyToPointArray;\n      this.applyToPointStringified = applyToPointStringified;\n      this.toArray = toArray;\n      this.toCSS = toCSS;\n      this.to2dCSS = to2dCSS;\n      this.toString = toString;\n      this.clone = clone;\n      this.cloneFromProps = cloneFromProps;\n      this.inversePoints = inversePoints;\n      this.inversePoint = inversePoint;\n      this._t = this.transform;\n      this.isIdentity = isIdentity;\n      this._identity = true;\n      this._identityCalculated = false;\n      this.props = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n      this.cssParts = ['matrix3d(', '', ')'];\n    };\n  }();\n\n  function Matrix() {}\n  /*\r\n   Copyright 2014 David Bau.\r\n  \r\n   Permission is hereby granted, free of charge, to any person obtaining\r\n   a copy of this software and associated documentation files (the\r\n   \"Software\"), to deal in the Software without restriction, including\r\n   without limitation the rights to use, copy, modify, merge, publish,\r\n   distribute, sublicense, and/or sell copies of the Software, and to\r\n   permit persons to whom the Software is furnished to do so, subject to\r\n   the following conditions:\r\n  \r\n   The above copyright notice and this permission notice shall be\r\n   included in all copies or substantial portions of the Software.\r\n  \r\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n   SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n  \r\n   */\n\n\n  (function (pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var global = this,\n        width = 256,\n        // each RC4 output is 0 <= x < 256\n    chunks = 6,\n        // at least six RC4 outputs for each double\n    digits = 52,\n        // there are 52 significant digits in a double\n    rngname = 'random',\n        // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n        significance = math.pow(2, digits),\n        overflow = significance * 2,\n        mask = width - 1,\n        nodecrypto; // node.js crypto module, initialized at the bottom.\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n\n    function seedrandom(seed, options, callback) {\n      var key = [];\n      options = options == true ? {\n        entropy: true\n      } : options || {}; // Flatten the seed string or build one from local entropy if needed.\n\n      var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed == null ? autoseed() : seed, 3), key); // Use the seed to initialize an ARC4 generator.\n\n      var arc4 = new ARC4(key); // This function returns a random double in [0, 1) that contains\n      // randomness in every bit of the mantissa of the IEEE 754 value.\n\n      var prng = function prng() {\n        var n = arc4.g(chunks),\n            // Start with a numerator n < 2 ^ 48\n        d = startdenom,\n            //   and denominator d = 2 ^ 48.\n        x = 0; //   and no 'extra last byte'.\n\n        while (n < significance) {\n          // Fill up all significant digits by\n          n = (n + x) * width; //   shifting numerator and\n\n          d *= width; //   denominator and generating a\n\n          x = arc4.g(1); //   new least-significant-byte.\n        }\n\n        while (n >= overflow) {\n          // To avoid rounding up, before adding\n          n /= 2; //   last byte, shift everything\n\n          d /= 2; //   right using integer math until\n\n          x >>>= 1; //   we have exactly the desired bits.\n        }\n\n        return (n + x) / d; // Form the number within [0, 1).\n      };\n\n      prng.int32 = function () {\n        return arc4.g(4) | 0;\n      };\n\n      prng.quick = function () {\n        return arc4.g(4) / 0x100000000;\n      };\n\n      prng.double = prng; // Mix the randomness into accumulated entropy.\n\n      mixkey(tostring(arc4.S), pool); // Calling convention: what to return as a function of prng, seed, is_math.\n\n      return (options.pass || callback || function (prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) {\n            copy(state, arc4);\n          } // Only provide the .state method if requested via options.state.\n\n\n          prng.state = function () {\n            return copy(arc4, {});\n          };\n        } // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n\n\n        if (is_math_call) {\n          math[rngname] = prng;\n          return seed;\n        } // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);\n    }\n\n    math['seed' + rngname] = seedrandom; //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n\n    function ARC4(key) {\n      var t,\n          keylen = key.length,\n          me = this,\n          i = 0,\n          j = me.i = me.j = 0,\n          s = me.S = []; // The empty key [] is treated as [0].\n\n      if (!keylen) {\n        key = [keylen++];\n      } // Set up S using the standard key scheduling algorithm.\n\n\n      while (i < width) {\n        s[i] = i++;\n      }\n\n      for (i = 0; i < width; i++) {\n        s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n        s[j] = t;\n      } // The \"g\" method returns the next (count) outputs as one number.\n\n\n      (me.g = function (count) {\n        // Using instance members instead of closure state nearly doubles speed.\n        var t,\n            r = 0,\n            i = me.i,\n            j = me.j,\n            s = me.S;\n\n        while (count--) {\n          t = s[i = mask & i + 1];\n          r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n        }\n\n        me.i = i;\n        me.j = j;\n        return r; // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n      })(width);\n    } //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n\n\n    function copy(f, t) {\n      t.i = f.i;\n      t.j = f.j;\n      t.S = f.S.slice();\n      return t;\n    }\n\n    ; //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n\n    function flatten(obj, depth) {\n      var result = [],\n          typ = typeof obj,\n          prop;\n\n      if (depth && typ == 'object') {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1));\n          } catch (e) {}\n        }\n      }\n\n      return result.length ? result : typ == 'string' ? obj : obj + '\\0';\n    } //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n\n\n    function mixkey(seed, key) {\n      var stringseed = seed + '',\n          smear,\n          j = 0;\n\n      while (j < stringseed.length) {\n        key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n      }\n\n      return tostring(key);\n    } //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n\n\n    function autoseed() {\n      try {\n        if (nodecrypto) {\n          return tostring(nodecrypto.randomBytes(width));\n        }\n\n        var out = new Uint8Array(width);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n        return tostring(out);\n      } catch (e) {\n        var browser = global.navigator,\n            plugins = browser && browser.plugins;\n        return [+new Date(), global, plugins, global.screen, tostring(pool)];\n      }\n    } //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n\n\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a);\n    } //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n\n\n    mixkey(math.random(), pool); //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n    // End anonymous scope, and pass initial values.\n  })([], // pool: entropy pool starts empty\n  BMMath // math: package containing random, pow, and seedrandom\n  );\n\n  var BezierFactory = function () {\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\n    var ob = {};\n    ob.getBezierEasing = getBezierEasing;\n    var beziers = {};\n\n    function getBezierEasing(a, b, c, d, nm) {\n      var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\\./g, 'p');\n\n      if (beziers[str]) {\n        return beziers[str];\n      }\n\n      var bezEasing = new BezierEasing([a, b, c, d]);\n      beziers[str] = bezEasing;\n      return bezEasing;\n    } // These values are established by empiricism with tests (tradeoff: performance VS precision)\n\n\n    var NEWTON_ITERATIONS = 4;\n    var NEWTON_MIN_SLOPE = 0.001;\n    var SUBDIVISION_PRECISION = 0.0000001;\n    var SUBDIVISION_MAX_ITERATIONS = 10;\n    var kSplineTableSize = 11;\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n    var float32ArraySupported = typeof Float32Array === \"function\";\n\n    function A(aA1, aA2) {\n      return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n    }\n\n    function B(aA1, aA2) {\n      return 3.0 * aA2 - 6.0 * aA1;\n    }\n\n    function C(aA1) {\n      return 3.0 * aA1;\n    } // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n\n\n    function calcBezier(aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    } // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n\n\n    function getSlope(aT, aA1, aA2) {\n      return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n    }\n\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n      var currentX,\n          currentT,\n          i = 0;\n\n      do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n        if (currentX > 0.0) {\n          aB = currentT;\n        } else {\n          aA = currentT;\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n      return currentT;\n    }\n\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) return aGuessT;\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n      }\n\n      return aGuessT;\n    }\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\n\n\n    function BezierEasing(points) {\n      this._p = points;\n      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n      this._precomputed = false;\n      this.get = this.get.bind(this);\n    }\n\n    BezierEasing.prototype = {\n      get: function get(x) {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        if (!this._precomputed) this._precompute();\n        if (mX1 === mY1 && mX2 === mY2) return x; // linear\n        // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n\n        if (x === 0) return 0;\n        if (x === 1) return 1;\n        return calcBezier(this._getTForX(x), mY1, mY2);\n      },\n      // Private part\n      _precompute: function _precompute() {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        this._precomputed = true;\n        if (mX1 !== mY1 || mX2 !== mY2) this._calcSampleValues();\n      },\n      _calcSampleValues: function _calcSampleValues() {\n        var mX1 = this._p[0],\n            mX2 = this._p[2];\n\n        for (var i = 0; i < kSplineTableSize; ++i) {\n          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n        }\n      },\n\n      /**\r\n       * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n       */\n      _getTForX: function _getTForX(aX) {\n        var mX1 = this._p[0],\n            mX2 = this._p[2],\n            mSampleValues = this._mSampleValues;\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize;\n        }\n\n        --currentSample; // Interpolate to provide an initial guess for t\n\n        var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        } else if (initialSlope === 0.0) {\n          return guessForT;\n        } else {\n          return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n      }\n    };\n    return ob;\n  }();\n\n  (function () {\n    var lastTime = 0;\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback, element) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      var id = setTimeout(function () {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n    if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {\n      clearTimeout(id);\n    };\n  })();\n\n  function createElement(parent, child, params) {\n    if (child) {\n      child.prototype = Object.create(parent.prototype);\n      child.prototype.constructor = child;\n      child.prototype._parent = parent.prototype;\n    } else {\n      var instance = Object.create(parent.prototype, params);\n      var getType = {};\n\n      if (instance && getType.toString.call(instance.init) === '[object Function]') {\n        instance.init();\n      }\n\n      return instance;\n    }\n  }\n\n  function extendPrototype(source, destination) {\n    for (var attr in source.prototype) {\n      if (source.prototype.hasOwnProperty(attr)) destination.prototype[attr] = source.prototype[attr];\n    }\n  }\n\n  function bezFunction() {\n    var easingFunctions = [];\n    var math = Math;\n\n    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\n      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;\n      return det1 > -0.0001 && det1 < 0.0001;\n    }\n\n    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\n      if (z1 === 0 && z2 === 0 && z3 === 0) {\n        return pointOnLine2D(x1, y1, x2, y2, x3, y3);\n      }\n\n      var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\n      var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\n      var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\n      var diffDist;\n\n      if (dist1 > dist2) {\n        if (dist1 > dist3) {\n          diffDist = dist1 - dist2 - dist3;\n        } else {\n          diffDist = dist3 - dist2 - dist1;\n        }\n      } else if (dist3 > dist2) {\n        diffDist = dist3 - dist2 - dist1;\n      } else {\n        diffDist = dist2 - dist1 - dist3;\n      }\n\n      return diffDist > -0.0001 && diffDist < 0.0001;\n    }\n    /*function getEasingCurve(aa,bb,cc,dd,encodedFuncName) {\r\n        if(!encodedFuncName){\r\n            encodedFuncName = ('bez_' + aa+'_'+bb+'_'+cc+'_'+dd).replace(/\\./g, 'p');\r\n        }\r\n        if(easingFunctions[encodedFuncName]){\r\n            return easingFunctions[encodedFuncName];\r\n        }\r\n        var A0, B0, C0;\r\n        var A1, B1, C1;\r\n        easingFunctions[encodedFuncName] = function(tt) {\r\n            var x = tt;\r\n            var i = 0, z;\r\n            while (++i < 20) {\r\n                C0 = 3 * aa;\r\n                B0 = 3 * (cc - aa) - C0;\r\n                A0 = 1 - C0 - B0;\r\n                z = (x * (C0 + x * (B0 + x * A0))) - tt;\r\n                if (bm_abs(z) < 1e-3) break;\r\n                x -= z / (C0 + x * (2 * B0 + 3 * A0 * x));\r\n            }\r\n            C1 = 3 * bb;\r\n            B1 = 3 * (dd - bb) - C1;\r\n            A1 = 1 - C1 - B1;\r\n            var polyB = x * (C1 + x * (B1 + x * A1));\r\n            //return c * polyB + b;\r\n            return polyB;\r\n        };\r\n        return easingFunctions[encodedFuncName];\r\n    }*/\n\n\n    var getBezierLength = function () {\n      function Segment(l, p) {\n        this.l = l;\n        this.p = p;\n      }\n\n      return function (pt1, pt2, pt3, pt4) {\n        var curveSegments = defaultCurveSegments;\n        var k;\n        var i, len;\n        var ptCoord,\n            perc,\n            addedLength = 0;\n        var ptDistance;\n        var point = [],\n            lastPoint = [];\n        var lengthData = {\n          addedLength: 0,\n          segments: []\n        };\n        len = pt3.length;\n\n        for (k = 0; k < curveSegments; k += 1) {\n          perc = k / (curveSegments - 1);\n          ptDistance = 0;\n\n          for (i = 0; i < len; i += 1) {\n            ptCoord = bm_pow(1 - perc, 3) * pt1[i] + 3 * bm_pow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bm_pow(perc, 2) * pt4[i] + bm_pow(perc, 3) * pt2[i];\n            point[i] = ptCoord;\n\n            if (lastPoint[i] !== null) {\n              ptDistance += bm_pow(point[i] - lastPoint[i], 2);\n            }\n\n            lastPoint[i] = point[i];\n          }\n\n          if (ptDistance) {\n            ptDistance = bm_sqrt(ptDistance);\n            addedLength += ptDistance;\n          }\n\n          lengthData.segments.push(new Segment(addedLength, perc));\n        }\n\n        lengthData.addedLength = addedLength;\n        return lengthData;\n      };\n    }();\n\n    function getSegmentsLength(shapeData) {\n      var closed = shapeData.c;\n      var pathV = shapeData.v;\n      var pathO = shapeData.o;\n      var pathI = shapeData.i;\n      var i,\n          len = shapeData._length;\n      var lengths = [];\n      var totalLength = 0;\n\n      for (i = 0; i < len - 1; i += 1) {\n        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      if (closed) {\n        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      return {\n        lengths: lengths,\n        totalLength: totalLength\n      };\n    }\n\n    function BezierData(length) {\n      this.segmentLength = 0;\n      this.points = new Array(length);\n    }\n\n    function PointData(partial, point) {\n      this.partialLength = partial;\n      this.point = point;\n    }\n\n    var buildBezierData = function () {\n      var storedData = {};\n      return function (keyData) {\n        var pt1 = keyData.s;\n        var pt2 = keyData.e;\n        var pt3 = keyData.to;\n        var pt4 = keyData.ti;\n        var bezierName = (pt1.join('_') + '_' + pt2.join('_') + '_' + pt3.join('_') + '_' + pt4.join('_')).replace(/\\./g, 'p');\n\n        if (storedData[bezierName]) {\n          keyData.bezierData = storedData[bezierName];\n          return;\n        }\n\n        var curveSegments = defaultCurveSegments;\n        var k, i, len;\n        var ptCoord,\n            perc,\n            addedLength = 0;\n        var ptDistance;\n        var point,\n            lastPoint = null;\n\n        if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {\n          curveSegments = 2;\n        }\n\n        var bezierData = new BezierData(curveSegments);\n        len = pt3.length;\n\n        for (k = 0; k < curveSegments; k += 1) {\n          point = new Array(len);\n          perc = k / (curveSegments - 1);\n          ptDistance = 0;\n\n          for (i = 0; i < len; i += 1) {\n            ptCoord = bm_pow(1 - perc, 3) * pt1[i] + 3 * bm_pow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bm_pow(perc, 2) * (pt2[i] + pt4[i]) + bm_pow(perc, 3) * pt2[i];\n            point[i] = ptCoord;\n\n            if (lastPoint !== null) {\n              ptDistance += bm_pow(point[i] - lastPoint[i], 2);\n            }\n          }\n\n          ptDistance = bm_sqrt(ptDistance);\n          addedLength += ptDistance;\n          bezierData.points[k] = new PointData(ptDistance, point);\n          lastPoint = point;\n        }\n\n        bezierData.segmentLength = addedLength;\n        keyData.bezierData = bezierData;\n        storedData[bezierName] = bezierData;\n      };\n    }();\n\n    function getDistancePerc(perc, bezierData) {\n      var segments = bezierData.segments;\n      var len = segments.length;\n      var initPos = bm_floor((len - 1) * perc);\n      var lengthPos = perc * bezierData.addedLength;\n      var lPerc = 0;\n\n      if (lengthPos == segments[initPos].l) {\n        return segments[initPos].p;\n      } else {\n        var dir = segments[initPos].l > lengthPos ? -1 : 1;\n        var flag = true;\n\n        while (flag) {\n          if (segments[initPos].l <= lengthPos && segments[initPos + 1].l > lengthPos) {\n            lPerc = (lengthPos - segments[initPos].l) / (segments[initPos + 1].l - segments[initPos].l);\n            flag = false;\n          } else {\n            initPos += dir;\n          }\n\n          if (initPos < 0 || initPos >= len - 1) {\n            flag = false;\n          }\n        }\n\n        return segments[initPos].p + (segments[initPos + 1].p - segments[initPos].p) * lPerc;\n      }\n    }\n\n    function SegmentPoints() {\n      this.pt1 = new Array(2);\n      this.pt2 = new Array(2);\n      this.pt3 = new Array(2);\n      this.pt4 = new Array(2);\n    }\n\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\n      var t1 = getDistancePerc(percent, bezierData);\n      var u0 = 1;\n      var u1 = 1 - t1;\n      var ptX = Math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1000) / 1000;\n      var ptY = Math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1000) / 1000;\n      return [ptX, ptY];\n    }\n\n    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\n      var pts = new SegmentPoints();\n      startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\n      var t0 = getDistancePerc(startPerc, bezierData);\n      endPerc = endPerc > 1 ? 1 : endPerc;\n      var t1 = getDistancePerc(endPerc, bezierData);\n      var i,\n          len = pt1.length;\n      var u0 = 1 - t0;\n      var u1 = 1 - t1; //Math.round(num * 100) / 100\n\n      for (i = 0; i < len; i += 1) {\n        pts.pt1[i] = Math.round((u0 * u0 * u0 * pt1[i] + (t0 * u0 * u0 + u0 * t0 * u0 + u0 * u0 * t0) * pt3[i] + (t0 * t0 * u0 + u0 * t0 * t0 + t0 * u0 * t0) * pt4[i] + t0 * t0 * t0 * pt2[i]) * 1000) / 1000;\n        pts.pt3[i] = Math.round((u0 * u0 * u1 * pt1[i] + (t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1) * pt3[i] + (t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1) * pt4[i] + t0 * t0 * t1 * pt2[i]) * 1000) / 1000;\n        pts.pt4[i] = Math.round((u0 * u1 * u1 * pt1[i] + (t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1) * pt3[i] + (t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1) * pt4[i] + t0 * t1 * t1 * pt2[i]) * 1000) / 1000;\n        pts.pt2[i] = Math.round((u1 * u1 * u1 * pt1[i] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[i] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[i] + t1 * t1 * t1 * pt2[i]) * 1000) / 1000;\n      }\n\n      return pts;\n    }\n\n    return {\n      //getEasingCurve : getEasingCurve,\n      getBezierLength: getBezierLength,\n      getSegmentsLength: getSegmentsLength,\n      getNewSegment: getNewSegment,\n      getPointInSegment: getPointInSegment,\n      buildBezierData: buildBezierData,\n      pointOnLine2D: pointOnLine2D,\n      pointOnLine3D: pointOnLine3D\n    };\n  }\n\n  var bez = bezFunction();\n\n  function dataFunctionManager() {\n    //var tCanvasHelper = document.createElement('canvas').getContext('2d');\n    function completeLayers(layers, comps, fontManager) {\n      var layerData;\n      var animArray, lastFrame;\n      var i,\n          len = layers.length;\n      var j, jLen, k, kLen;\n\n      for (i = 0; i < len; i += 1) {\n        layerData = layers[i];\n\n        if (!('ks' in layerData) || layerData.completed) {\n          continue;\n        }\n\n        layerData.completed = true;\n\n        if (layerData.tt) {\n          layers[i - 1].td = layerData.tt;\n        }\n\n        animArray = [];\n        lastFrame = -1;\n\n        if (layerData.hasMask) {\n          var maskProps = layerData.masksProperties;\n          jLen = maskProps.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            if (maskProps[j].pt.k.i) {\n              convertPathsToAbsoluteValues(maskProps[j].pt.k);\n            } else {\n              kLen = maskProps[j].pt.k.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                if (maskProps[j].pt.k[k].s) {\n                  convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\n                }\n\n                if (maskProps[j].pt.k[k].e) {\n                  convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\n                }\n              }\n            }\n          }\n        }\n\n        if (layerData.ty === 0) {\n          layerData.layers = findCompLayers(layerData.refId, comps);\n          completeLayers(layerData.layers, comps, fontManager);\n        } else if (layerData.ty === 4) {\n          completeShapes(layerData.shapes);\n        } else if (layerData.ty == 5) {\n          completeText(layerData, fontManager);\n        }\n      }\n    }\n\n    function findCompLayers(id, comps) {\n      var i = 0,\n          len = comps.length;\n\n      while (i < len) {\n        if (comps[i].id === id) {\n          if (!comps[i].layers.__used) {\n            comps[i].layers.__used = true;\n            return comps[i].layers;\n          }\n\n          return JSON.parse(JSON.stringify(comps[i].layers));\n        }\n\n        i += 1;\n      }\n    }\n\n    function completeShapes(arr) {\n      var i,\n          len = arr.length;\n      var j, jLen;\n      var hasPaths = false;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (arr[i].ty == 'sh') {\n          if (arr[i].ks.k.i) {\n            convertPathsToAbsoluteValues(arr[i].ks.k);\n          } else {\n            jLen = arr[i].ks.k.length;\n\n            for (j = 0; j < jLen; j += 1) {\n              if (arr[i].ks.k[j].s) {\n                convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\n              }\n\n              if (arr[i].ks.k[j].e) {\n                convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\n              }\n            }\n          }\n\n          hasPaths = true;\n        } else if (arr[i].ty == 'gr') {\n          completeShapes(arr[i].it);\n        }\n      }\n      /*if(hasPaths){\r\n          //mx: distance\r\n          //ss: sensitivity\r\n          //dc: decay\r\n          arr.splice(arr.length-1,0,{\r\n              \"ty\": \"ms\",\r\n              \"mx\":20,\r\n              \"ss\":10,\r\n               \"dc\":0.001,\r\n              \"maxDist\":200\r\n          });\r\n      }*/\n\n    }\n\n    function convertPathsToAbsoluteValues(path) {\n      var i,\n          len = path.i.length;\n\n      for (i = 0; i < len; i += 1) {\n        path.i[i][0] += path.v[i][0];\n        path.i[i][1] += path.v[i][1];\n        path.o[i][0] += path.v[i][0];\n        path.o[i][1] += path.v[i][1];\n      }\n    }\n\n    function checkVersion(minimum, animVersionString) {\n      var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100];\n\n      if (minimum[0] > animVersion[0]) {\n        return true;\n      } else if (animVersion[0] > minimum[0]) {\n        return false;\n      }\n\n      if (minimum[1] > animVersion[1]) {\n        return true;\n      } else if (animVersion[1] > minimum[1]) {\n        return false;\n      }\n\n      if (minimum[2] > animVersion[2]) {\n        return true;\n      } else if (animVersion[2] > minimum[2]) {\n        return false;\n      }\n    }\n\n    var checkText = function () {\n      var minimumVersion = [4, 4, 14];\n\n      function updateTextLayer(textLayer) {\n        var documentData = textLayer.t.d;\n        textLayer.t.d = {\n          k: [{\n            s: documentData,\n            t: 0\n          }]\n        };\n      }\n\n      function iterateLayers(layers) {\n        var i,\n            len = layers.length;\n\n        for (i = 0; i < len; i += 1) {\n          if (layers[i].ty === 5) {\n            updateTextLayer(layers[i]);\n          }\n        }\n      }\n\n      return function (animationData) {\n        if (checkVersion(minimumVersion, animationData.v)) {\n          iterateLayers(animationData.layers);\n\n          if (animationData.assets) {\n            var i,\n                len = animationData.assets.length;\n\n            for (i = 0; i < len; i += 1) {\n              if (animationData.assets[i].layers) {\n                iterateLayers(animationData.assets[i].layers);\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var checkChars = function () {\n      var minimumVersion = [4, 7, 99];\n      return function (animationData) {\n        if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\n          var i,\n              len = animationData.chars.length,\n              j,\n              jLen,\n              k,\n              kLen;\n          var pathData, paths;\n\n          for (i = 0; i < len; i += 1) {\n            if (animationData.chars[i].data && animationData.chars[i].data.shapes) {\n              paths = animationData.chars[i].data.shapes[0].it;\n              jLen = paths.length;\n\n              for (j = 0; j < jLen; j += 1) {\n                pathData = paths[j].ks.k;\n\n                if (!pathData.__converted) {\n                  convertPathsToAbsoluteValues(paths[j].ks.k);\n                  pathData.__converted = true;\n                }\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var checkColors = function () {\n      var minimumVersion = [4, 1, 9];\n\n      function iterateShapes(shapes) {\n        var i,\n            len = shapes.length;\n        var j, jLen;\n\n        for (i = 0; i < len; i += 1) {\n          if (shapes[i].ty === 'gr') {\n            iterateShapes(shapes[i].it);\n          } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {\n            if (shapes[i].c.k && shapes[i].c.k[0].i) {\n              jLen = shapes[i].c.k.length;\n\n              for (j = 0; j < jLen; j += 1) {\n                if (shapes[i].c.k[j].s) {\n                  shapes[i].c.k[j].s[0] /= 255;\n                  shapes[i].c.k[j].s[1] /= 255;\n                  shapes[i].c.k[j].s[2] /= 255;\n                  shapes[i].c.k[j].s[3] /= 255;\n                }\n\n                if (shapes[i].c.k[j].e) {\n                  shapes[i].c.k[j].e[0] /= 255;\n                  shapes[i].c.k[j].e[1] /= 255;\n                  shapes[i].c.k[j].e[2] /= 255;\n                  shapes[i].c.k[j].e[3] /= 255;\n                }\n              }\n            } else {\n              shapes[i].c.k[0] /= 255;\n              shapes[i].c.k[1] /= 255;\n              shapes[i].c.k[2] /= 255;\n              shapes[i].c.k[3] /= 255;\n            }\n          }\n        }\n      }\n\n      function iterateLayers(layers) {\n        var i,\n            len = layers.length;\n\n        for (i = 0; i < len; i += 1) {\n          if (layers[i].ty === 4) {\n            iterateShapes(layers[i].shapes);\n          }\n        }\n      }\n\n      return function (animationData) {\n        if (checkVersion(minimumVersion, animationData.v)) {\n          iterateLayers(animationData.layers);\n\n          if (animationData.assets) {\n            var i,\n                len = animationData.assets.length;\n\n            for (i = 0; i < len; i += 1) {\n              if (animationData.assets[i].layers) {\n                iterateLayers(animationData.assets[i].layers);\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var checkShapes = function () {\n      var minimumVersion = [4, 4, 18];\n\n      function completeShapes(arr) {\n        var i,\n            len = arr.length;\n        var j, jLen;\n        var hasPaths = false;\n\n        for (i = len - 1; i >= 0; i -= 1) {\n          if (arr[i].ty == 'sh') {\n            if (arr[i].ks.k.i) {\n              arr[i].ks.k.c = arr[i].closed;\n            } else {\n              jLen = arr[i].ks.k.length;\n\n              for (j = 0; j < jLen; j += 1) {\n                if (arr[i].ks.k[j].s) {\n                  arr[i].ks.k[j].s[0].c = arr[i].closed;\n                }\n\n                if (arr[i].ks.k[j].e) {\n                  arr[i].ks.k[j].e[0].c = arr[i].closed;\n                }\n              }\n            }\n\n            hasPaths = true;\n          } else if (arr[i].ty == 'gr') {\n            completeShapes(arr[i].it);\n          }\n        }\n      }\n\n      function iterateLayers(layers) {\n        var layerData;\n        var i,\n            len = layers.length;\n        var j, jLen, k, kLen;\n\n        for (i = 0; i < len; i += 1) {\n          layerData = layers[i];\n\n          if (layerData.hasMask) {\n            var maskProps = layerData.masksProperties;\n            jLen = maskProps.length;\n\n            for (j = 0; j < jLen; j += 1) {\n              if (maskProps[j].pt.k.i) {\n                maskProps[j].pt.k.c = maskProps[j].cl;\n              } else {\n                kLen = maskProps[j].pt.k.length;\n\n                for (k = 0; k < kLen; k += 1) {\n                  if (maskProps[j].pt.k[k].s) {\n                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\n                  }\n\n                  if (maskProps[j].pt.k[k].e) {\n                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\n                  }\n                }\n              }\n            }\n          }\n\n          if (layerData.ty === 4) {\n            completeShapes(layerData.shapes);\n          }\n        }\n      }\n\n      return function (animationData) {\n        if (checkVersion(minimumVersion, animationData.v)) {\n          iterateLayers(animationData.layers);\n\n          if (animationData.assets) {\n            var i,\n                len = animationData.assets.length;\n\n            for (i = 0; i < len; i += 1) {\n              if (animationData.assets[i].layers) {\n                iterateLayers(animationData.assets[i].layers);\n              }\n            }\n          }\n        }\n      };\n    }();\n    /*function blitPaths(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] /= blitter;\r\n            path.i[i][1] /= blitter;\r\n            path.o[i][0] /= blitter;\r\n            path.o[i][1] /= blitter;\r\n            path.v[i][0] /= blitter;\r\n            path.v[i][1] /= blitter;\r\n        }\r\n    }\r\n      function blitShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    blitPaths(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            blitPaths(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            blitPaths(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                blitShapes(arr[i].it);\r\n            }else if(arr[i].ty == 'rc'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'st'){\r\n                blitProperty(arr[i].w);\r\n            }else if(arr[i].ty == 'tr'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].sk);\r\n                blitProperty(arr[i].a);\r\n            }else if(arr[i].ty == 'el'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'rd'){\r\n                blitProperty(arr[i].r);\r\n            }else{\r\n                  //console.log(arr[i].ty );\r\n            }\r\n        }\r\n    }\r\n      function blitText(data, fontManager){\r\n      }\r\n      function blitValue(val){\r\n        if(typeof(val) === 'number'){\r\n            val /= blitter;\r\n        } else {\r\n            var i = val.length-1;\r\n            while(i>=0){\r\n                val[i] /= blitter;\r\n                i-=1;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n      function blitProperty(data){\r\n        if(!data.k.length){\r\n            data.k = blitValue(data.k);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            data.k = blitValue(data.k);\r\n        } else {\r\n            var i, len = data.k.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(data.k[i].s){\r\n                    //console.log('pre S: ', data.k[i].s);\r\n                    data.k[i].s = blitValue(data.k[i].s);\r\n                    //console.log('post S: ', data.k[i].s);\r\n                }\r\n                if(data.k[i].e){\r\n                    //console.log('pre E: ', data.k[i].e);\r\n                    data.k[i].e = blitValue(data.k[i].e);\r\n                    //console.log('post E: ', data.k[i].e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n      function blitLayers(layers,comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData)){\r\n                continue;\r\n            }\r\n            blitProperty(layerData.ks.a);\r\n            blitProperty(layerData.ks.p);\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        blitPaths(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                blitPaths(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                blitPaths(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.w = Math.round(layerData.w/blitter);\r\n                layerData.h = Math.round(layerData.h/blitter);\r\n                blitLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                blitShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                blitText(layerData, fontManager);\r\n            }else if(layerData.ty == 1){\r\n                layerData.sh /= blitter;\r\n                layerData.sw /= blitter;\r\n            } else {\r\n            }\r\n        }\r\n    }\r\n      function blitAnimation(animationData,comps, fontManager){\r\n        blitLayers(animationData.layers,comps, fontManager);\r\n    }*/\n\n\n    function completeData(animationData, fontManager) {\n      if (animationData.__complete) {\n        return;\n      }\n\n      checkColors(animationData);\n      checkText(animationData);\n      checkChars(animationData);\n      checkShapes(animationData);\n      completeLayers(animationData.layers, animationData.assets, fontManager);\n      animationData.__complete = true; //blitAnimation(animationData, animationData.assets, fontManager);\n    }\n\n    function completeText(data, fontManager) {\n      if (data.t.a.length === 0 && !('m' in data.t.p)) {\n        data.singleShape = true;\n      }\n    }\n\n    var moduleOb = {};\n    moduleOb.completeData = completeData;\n    return moduleOb;\n  }\n\n  var dataManager = dataFunctionManager();\n\n  var FontManager = function () {\n    var maxWaitingTime = 5000;\n\n    function setUpNode(font, family) {\n      var parentNode = document.createElement('span');\n      parentNode.style.fontFamily = family;\n      var node = document.createElement('span'); // Characters that vary significantly among different fonts\n\n      node.innerHTML = 'giItT1WQy@!-/#'; // Visible - so we can measure it - but not on the screen\n\n      parentNode.style.position = 'absolute';\n      parentNode.style.left = '-10000px';\n      parentNode.style.top = '-10000px'; // Large font size makes even subtle changes obvious\n\n      parentNode.style.fontSize = '300px'; // Reset any font properties\n\n      parentNode.style.fontVariant = 'normal';\n      parentNode.style.fontStyle = 'normal';\n      parentNode.style.fontWeight = 'normal';\n      parentNode.style.letterSpacing = '0';\n      parentNode.appendChild(node);\n      document.body.appendChild(parentNode); // Remember width with no applied web font\n\n      var width = node.offsetWidth;\n      node.style.fontFamily = font + ', ' + family;\n      return {\n        node: node,\n        w: width,\n        parent: parentNode\n      };\n    }\n\n    function checkLoadedFonts() {\n      var i,\n          len = this.fonts.length;\n      var node, w;\n      var loadedCount = len;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.fonts[i].loaded) {\n          loadedCount -= 1;\n          continue;\n        }\n\n        if (this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2) {\n          if (window.Typekit && window.Typekit.load && this.typekitLoaded === 0) {\n            this.typekitLoaded = 1;\n\n            try {\n              window.Typekit.load({\n                async: true,\n                active: function () {\n                  this.typekitLoaded = 2;\n                }.bind(this)\n              });\n            } catch (e) {}\n          }\n\n          if (this.typekitLoaded === 2) {\n            this.fonts[i].loaded = true;\n          }\n        } else if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {\n          this.fonts[i].loaded = true;\n        } else {\n          node = this.fonts[i].monoCase.node;\n          w = this.fonts[i].monoCase.w;\n\n          if (node.offsetWidth !== w) {\n            loadedCount -= 1;\n            this.fonts[i].loaded = true;\n          } else {\n            node = this.fonts[i].sansCase.node;\n            w = this.fonts[i].sansCase.w;\n\n            if (node.offsetWidth !== w) {\n              loadedCount -= 1;\n              this.fonts[i].loaded = true;\n            }\n          }\n\n          if (this.fonts[i].loaded) {\n            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\n            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\n          }\n        }\n      }\n\n      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\n        setTimeout(checkLoadedFonts.bind(this), 20);\n      } else {\n        setTimeout(function () {\n          this.loaded = true;\n        }.bind(this), 0);\n      }\n    }\n\n    ;\n\n    function createHelper(def, fontData) {\n      var tHelper = document.createElementNS(svgNS, 'text');\n      tHelper.style.fontSize = '100px';\n      tHelper.style.fontFamily = fontData.fFamily;\n      tHelper.textContent = '1';\n\n      if (fontData.fClass) {\n        tHelper.style.fontFamily = 'inherit';\n        tHelper.className = fontData.fClass;\n      } else {\n        tHelper.style.fontFamily = fontData.fFamily;\n      }\n\n      def.appendChild(tHelper);\n      var tCanvasHelper = document.createElement('canvas').getContext('2d');\n      tCanvasHelper.font = '100px ' + fontData.fFamily;\n      return tCanvasHelper;\n    }\n\n    function addFonts(fontData, defs) {\n      if (!fontData) {\n        this.loaded = true;\n        return;\n      }\n\n      if (this.chars) {\n        this.loaded = true;\n        this.fonts = fontData.list;\n        return;\n      }\n\n      var fontArr = fontData.list;\n      var i,\n          len = fontArr.length;\n\n      for (i = 0; i < len; i += 1) {\n        fontArr[i].loaded = false;\n        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace');\n        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif');\n\n        if (!fontArr[i].fPath) {\n          fontArr[i].loaded = true;\n        } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {\n          var s = document.createElement('style');\n          s.type = \"text/css\";\n          s.innerHTML = \"@font-face {\" + \"font-family: \" + fontArr[i].fFamily + \"; font-style: normal; src: url('\" + fontArr[i].fPath + \"');}\";\n          defs.appendChild(s);\n        } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {\n          //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\n          var l = document.createElement('link');\n          l.type = \"text/css\";\n          l.rel = \"stylesheet\";\n          l.href = fontArr[i].fPath;\n          defs.appendChild(l);\n        } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {\n          //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\n          var sc = document.createElement('script');\n          sc.setAttribute('src', fontArr[i].fPath);\n          defs.appendChild(sc);\n        }\n\n        fontArr[i].helper = createHelper(defs, fontArr[i]);\n        this.fonts.push(fontArr[i]);\n      }\n\n      checkLoadedFonts.bind(this)();\n    }\n\n    function addChars(chars) {\n      if (!chars) {\n        return;\n      }\n\n      if (!this.chars) {\n        this.chars = [];\n      }\n\n      var i,\n          len = chars.length;\n      var j,\n          jLen = this.chars.length,\n          found;\n\n      for (i = 0; i < len; i += 1) {\n        j = 0;\n        found = false;\n\n        while (j < jLen) {\n          if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {\n            found = true;\n          }\n\n          j += 1;\n        }\n\n        if (!found) {\n          this.chars.push(chars[i]);\n          jLen += 1;\n        }\n      }\n    }\n\n    function getCharData(char, style, font) {\n      var i = 0,\n          len = this.chars.length;\n\n      while (i < len) {\n        if (this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font) {\n          return this.chars[i];\n        }\n\n        i += 1;\n      }\n    }\n\n    function measureText(char, fontName, size) {\n      var fontData = this.getFontByName(fontName);\n      var tHelper = fontData.helper; //tHelper.textContent = char;\n\n      return tHelper.measureText(char).width * size / 100; //return tHelper.getComputedTextLength()*size/100;\n    }\n\n    function getFontByName(name) {\n      var i = 0,\n          len = this.fonts.length;\n\n      while (i < len) {\n        if (this.fonts[i].fName === name) {\n          return this.fonts[i];\n        }\n\n        i += 1;\n      }\n\n      return 'sans-serif';\n    }\n\n    var Font = function Font() {\n      this.fonts = [];\n      this.chars = null;\n      this.typekitLoaded = 0;\n      this.loaded = false;\n      this.initTime = Date.now();\n    };\n\n    Font.prototype.addChars = addChars;\n    Font.prototype.addFonts = addFonts;\n    Font.prototype.getCharData = getCharData;\n    Font.prototype.getFontByName = getFontByName;\n    Font.prototype.measureText = measureText;\n    return Font;\n  }();\n\n  var PropertyFactory = function () {\n    var initFrame = -999999;\n\n    function interpolateValue(frameNum, iterationIndex, previousValue, caching) {\n      var offsetTime = this.offsetTime;\n      var newValue;\n\n      if (previousValue.constructor === Array) {\n        newValue = Array.apply(null, {\n          length: previousValue.length\n        });\n      }\n\n      var i = iterationIndex;\n      var len = this.keyframes.length - 1,\n          flag = true;\n      var keyData, nextKeyData;\n\n      while (flag) {\n        keyData = this.keyframes[i];\n        nextKeyData = this.keyframes[i + 1];\n\n        if (i == len - 1 && frameNum >= nextKeyData.t - offsetTime) {\n          if (keyData.h) {\n            keyData = nextKeyData;\n          }\n\n          iterationIndex = 0;\n          break;\n        }\n\n        if (nextKeyData.t - offsetTime > frameNum) {\n          iterationIndex = i;\n          break;\n        }\n\n        if (i < len - 1) {\n          i += 1;\n        } else {\n          iterationIndex = 0;\n          flag = false;\n        }\n      }\n\n      var k, kLen, perc, jLen, j, fnc;\n\n      if (keyData.to) {\n        if (!keyData.bezierData) {\n          bez.buildBezierData(keyData);\n        }\n\n        var bezierData = keyData.bezierData;\n\n        if (frameNum >= nextKeyData.t - offsetTime || frameNum < keyData.t - offsetTime) {\n          var ind = frameNum >= nextKeyData.t - offsetTime ? bezierData.points.length - 1 : 0;\n          kLen = bezierData.points[ind].point.length;\n\n          for (k = 0; k < kLen; k += 1) {\n            newValue[k] = bezierData.points[ind].point[k];\n          }\n\n          caching._lastBezierData = null;\n        } else {\n          if (keyData.__fnct) {\n            fnc = keyData.__fnct;\n          } else {\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\n            keyData.__fnct = fnc;\n          }\n\n          perc = fnc((frameNum - (keyData.t - offsetTime)) / (nextKeyData.t - offsetTime - (keyData.t - offsetTime)));\n          var distanceInLine = bezierData.segmentLength * perc;\n          var segmentPerc;\n          var addedLength = caching.lastFrame < frameNum && caching._lastBezierData === bezierData ? caching._lastAddedLength : 0;\n          j = caching.lastFrame < frameNum && caching._lastBezierData === bezierData ? caching._lastPoint : 0;\n          flag = true;\n          jLen = bezierData.points.length;\n\n          while (flag) {\n            addedLength += bezierData.points[j].partialLength;\n\n            if (distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1) {\n              kLen = bezierData.points[j].point.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k];\n              }\n\n              break;\n            } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\n              segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\n              kLen = bezierData.points[j].point.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\n              }\n\n              break;\n            }\n\n            if (j < jLen - 1) {\n              j += 1;\n            } else {\n              flag = false;\n            }\n          }\n\n          caching._lastPoint = j;\n          caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\n          caching._lastBezierData = bezierData;\n        }\n      } else {\n        var outX, outY, inX, inY, keyValue;\n        len = keyData.s.length;\n\n        for (i = 0; i < len; i += 1) {\n          if (keyData.h !== 1) {\n            if (frameNum >= nextKeyData.t - offsetTime) {\n              perc = 1;\n            } else if (frameNum < keyData.t - offsetTime) {\n              perc = 0;\n            } else {\n              if (keyData.o.x.constructor === Array) {\n                if (!keyData.__fnct) {\n                  keyData.__fnct = [];\n                }\n\n                if (!keyData.__fnct[i]) {\n                  outX = keyData.o.x[i] || keyData.o.x[0];\n                  outY = keyData.o.y[i] || keyData.o.y[0];\n                  inX = keyData.i.x[i] || keyData.i.x[0];\n                  inY = keyData.i.y[i] || keyData.i.y[0];\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                  keyData.__fnct[i] = fnc;\n                } else {\n                  fnc = keyData.__fnct[i];\n                }\n              } else {\n                if (!keyData.__fnct) {\n                  outX = keyData.o.x;\n                  outY = keyData.o.y;\n                  inX = keyData.i.x;\n                  inY = keyData.i.y;\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                  keyData.__fnct = fnc;\n                } else {\n                  fnc = keyData.__fnct;\n                }\n              }\n\n              perc = fnc((frameNum - (keyData.t - offsetTime)) / (nextKeyData.t - offsetTime - (keyData.t - offsetTime)));\n            }\n          }\n\n          if (this.sh && keyData.h !== 1) {\n            var initP = keyData.s[i];\n            var endP = keyData.e[i];\n\n            if (initP - endP < -180) {\n              initP += 360;\n            } else if (initP - endP > 180) {\n              initP -= 360;\n            }\n\n            keyValue = initP + (endP - initP) * perc;\n          } else {\n            keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (keyData.e[i] - keyData.s[i]) * perc;\n          }\n\n          if (len === 1) {\n            newValue = keyValue;\n          } else {\n            newValue[i] = keyValue;\n          }\n        }\n      }\n\n      return {\n        value: newValue,\n        iterationIndex: iterationIndex\n      };\n    }\n\n    function getValueAtCurrentTime() {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n\n      this.mdf = false;\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n\n      if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {\n        var i = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\n        var renderResult = this.interpolateValue(frameNum, i, this.pv, this._caching);\n        this._caching.lastIndex = renderResult.iterationIndex;\n\n        if (this.pv.constructor === Array) {\n          i = 0;\n\n          while (i < this.v.length) {\n            this.pv[i] = renderResult.value[i];\n            this.v[i] = this.mult ? this.pv[i] * this.mult : this.pv[i];\n\n            if (this.lastPValue[i] !== this.pv[i]) {\n              this.mdf = true;\n              this.lastPValue[i] = this.pv[i];\n            }\n\n            i += 1;\n          }\n        } else {\n          this.pv = renderResult.value;\n          this.v = this.mult ? this.pv * this.mult : this.pv;\n\n          if (this.lastPValue != this.pv) {\n            this.mdf = true;\n            this.lastPValue = this.pv;\n          }\n        }\n      }\n\n      this._caching.lastFrame = frameNum;\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function getNoValue() {}\n\n    function ValueProperty(elem, data, mult) {\n      this.mult = mult;\n      this.v = mult ? data.k * mult : data.k;\n      this.pv = data.k;\n      this.mdf = false;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.vel = 0;\n      this.getValue = getNoValue;\n    }\n\n    function MultiDimensionalProperty(elem, data, mult) {\n      this.mult = mult;\n      this.data = data;\n      this.mdf = false;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.frameId = -1;\n      this.v = Array.apply(null, {\n        length: data.k.length\n      });\n      this.pv = Array.apply(null, {\n        length: data.k.length\n      });\n      this.lastValue = Array.apply(null, {\n        length: data.k.length\n      });\n      var arr = Array.apply(null, {\n        length: data.k.length\n      });\n      this.vel = arr.map(function () {\n        return 0;\n      });\n      var i,\n          len = data.k.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.v[i] = mult ? data.k[i] * mult : data.k[i];\n        this.pv[i] = data.k[i];\n      }\n\n      this.getValue = getNoValue;\n    }\n\n    function KeyframedValueProperty(elem, data, mult) {\n      this.keyframes = data.k;\n      this.offsetTime = elem.data.st;\n      this.lastValue = -99999;\n      this.lastPValue = -99999;\n      this.frameId = -1;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0\n      };\n      this.k = true;\n      this.kf = true;\n      this.data = data;\n      this.mult = mult;\n      this.elem = elem;\n      this.comp = elem.comp;\n      this.v = mult ? data.k[0].s[0] * mult : data.k[0].s[0];\n      this.pv = data.k[0].s[0];\n      this.getValue = getValueAtCurrentTime;\n      this.interpolateValue = interpolateValue;\n    }\n\n    function KeyframedMultidimensionalProperty(elem, data, mult) {\n      var i,\n          len = data.k.length;\n      var s, e, to, ti;\n\n      for (i = 0; i < len - 1; i += 1) {\n        if (data.k[i].to && data.k[i].s && data.k[i].e) {\n          s = data.k[i].s;\n          e = data.k[i].e;\n          to = data.k[i].to;\n          ti = data.k[i].ti;\n\n          if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2])) {\n            data.k[i].to = null;\n            data.k[i].ti = null;\n          }\n        }\n      }\n\n      this.keyframes = data.k;\n      this.offsetTime = elem.data.st;\n      this.k = true;\n      this.kf = true;\n      this.mult = mult;\n      this.elem = elem;\n      this.comp = elem.comp;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0\n      };\n      this.getValue = getValueAtCurrentTime;\n      this.interpolateValue = interpolateValue;\n      this.frameId = -1;\n      this.v = Array.apply(null, {\n        length: data.k[0].s.length\n      });\n      this.pv = Array.apply(null, {\n        length: data.k[0].s.length\n      });\n      this.lastValue = Array.apply(null, {\n        length: data.k[0].s.length\n      });\n      this.lastPValue = Array.apply(null, {\n        length: data.k[0].s.length\n      });\n    }\n\n    var TransformProperty = function () {\n      function positionGetter() {\n        if (this.p) {\n          return ExpressionValue(this.p);\n        } else {\n          return [this.px.v, this.py.v, this.pz ? this.pz.v : 0];\n        }\n      }\n\n      function xPositionGetter() {\n        return ExpressionValue(this.px);\n      }\n\n      function yPositionGetter() {\n        return ExpressionValue(this.py);\n      }\n\n      function zPositionGetter() {\n        return ExpressionValue(this.pz);\n      }\n\n      function anchorGetter() {\n        return ExpressionValue(this.a);\n      }\n\n      function orientationGetter() {\n        return ExpressionValue(this.or);\n      }\n\n      function rotationGetter() {\n        if (this.r) {\n          return ExpressionValue(this.r, 1 / degToRads);\n        } else {\n          return ExpressionValue(this.rz, 1 / degToRads);\n        }\n      }\n\n      function scaleGetter() {\n        return ExpressionValue(this.s, 100);\n      }\n\n      function opacityGetter() {\n        return ExpressionValue(this.o, 100);\n      }\n\n      function skewGetter() {\n        return ExpressionValue(this.sk);\n      }\n\n      function skewAxisGetter() {\n        return ExpressionValue(this.sa);\n      }\n\n      function applyToMatrix(mat) {\n        var i,\n            len = this.dynamicProperties.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.dynamicProperties[i].getValue();\n\n          if (this.dynamicProperties[i].mdf) {\n            this.mdf = true;\n          }\n        }\n\n        if (this.a) {\n          mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        }\n\n        if (this.s) {\n          mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        }\n\n        if (this.r) {\n          mat.rotate(-this.r.v);\n        } else {\n          mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        }\n\n        if (this.data.p.s) {\n          if (this.data.p.z) {\n            mat.translate(this.px.v, this.py.v, -this.pz.v);\n          } else {\n            mat.translate(this.px.v, this.py.v, 0);\n          }\n        } else {\n          mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n        }\n      }\n\n      function processKeys() {\n        if (this.elem.globalData.frameId === this.frameId) {\n          return;\n        }\n\n        this.mdf = false;\n        var i,\n            len = this.dynamicProperties.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.dynamicProperties[i].getValue();\n\n          if (this.dynamicProperties[i].mdf) {\n            this.mdf = true;\n          }\n        }\n\n        if (this.mdf) {\n          this.v.reset();\n\n          if (this.a) {\n            this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n          }\n\n          if (this.s) {\n            this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n          }\n\n          if (this.sk) {\n            this.v.skewFromAxis(-this.sk.v, this.sa.v);\n          }\n\n          if (this.r) {\n            this.v.rotate(-this.r.v);\n          } else {\n            this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n          }\n\n          if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\n            var v1, v2;\n\n            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\n              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate, 0);\n              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\n            } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\n              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate, 0);\n              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\n            } else {\n              v1 = this.p.pv;\n              v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\n            }\n\n            this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\n          }\n\n          if (this.data.p.s) {\n            if (this.data.p.z) {\n              this.v.translate(this.px.v, this.py.v, -this.pz.v);\n            } else {\n              this.v.translate(this.px.v, this.py.v, 0);\n            }\n          } else {\n            this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n          }\n        }\n\n        this.frameId = this.elem.globalData.frameId;\n      }\n\n      function setInverted() {\n        this.inverted = true;\n        this.iv = new Matrix();\n\n        if (!this.k) {\n          if (this.data.p.s) {\n            this.iv.translate(this.px.v, this.py.v, -this.pz.v);\n          } else {\n            this.iv.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n          }\n\n          if (this.r) {\n            this.iv.rotate(-this.r.v);\n          } else {\n            this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\n          }\n\n          if (this.s) {\n            this.iv.scale(this.s.v[0], this.s.v[1], 1);\n          }\n\n          if (this.a) {\n            this.iv.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n          }\n        }\n      }\n\n      function autoOrient() {//\n        //var prevP = this.getValueAtTime();\n      }\n\n      return function TransformProperty(elem, data, arr) {\n        this.elem = elem;\n        this.frameId = -1;\n        this.type = 'transform';\n        this.dynamicProperties = [];\n        this.mdf = false;\n        this.data = data;\n        this.getValue = processKeys;\n        this.applyToMatrix = applyToMatrix;\n        this.setInverted = setInverted;\n        this.autoOrient = autoOrient;\n        this.v = new Matrix();\n\n        if (data.p.s) {\n          this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this.dynamicProperties);\n          this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this.dynamicProperties);\n\n          if (data.p.z) {\n            this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this.dynamicProperties);\n          }\n        } else {\n          this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this.dynamicProperties);\n        }\n\n        if (data.r) {\n          this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this.dynamicProperties);\n        } else if (data.rx) {\n          this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this.dynamicProperties);\n          this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this.dynamicProperties);\n          this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this.dynamicProperties);\n          this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this.dynamicProperties); //sh Indicates it needs to be capped between -180 and 180\n\n          this.or.sh = true;\n        }\n\n        if (data.sk) {\n          this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this.dynamicProperties);\n          this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this.dynamicProperties);\n        }\n\n        if (data.a) {\n          this.a = PropertyFactory.getProp(elem, data.a, 1, 0, this.dynamicProperties);\n        }\n\n        if (data.s) {\n          this.s = PropertyFactory.getProp(elem, data.s, 1, 0.01, this.dynamicProperties);\n        }\n\n        if (data.o) {\n          this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this.dynamicProperties);\n        } else {\n          this.o = {\n            mdf: false,\n            v: 1\n          };\n        }\n\n        if (this.dynamicProperties.length) {\n          arr.push(this);\n        } else {\n          if (this.a) {\n            this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n          }\n\n          if (this.s) {\n            this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n          }\n\n          if (this.sk) {\n            this.v.skewFromAxis(-this.sk.v, this.sa.v);\n          }\n\n          if (this.r) {\n            this.v.rotate(-this.r.v);\n          } else {\n            this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n          }\n\n          if (this.data.p.s) {\n            if (data.p.z) {\n              this.v.translate(this.px.v, this.py.v, -this.pz.v);\n            } else {\n              this.v.translate(this.px.v, this.py.v, 0);\n            }\n          } else {\n            this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n          }\n        }\n\n        Object.defineProperty(this, \"position\", {\n          get: positionGetter\n        });\n        Object.defineProperty(this, \"xPosition\", {\n          get: xPositionGetter\n        });\n        Object.defineProperty(this, \"yPosition\", {\n          get: yPositionGetter\n        });\n        Object.defineProperty(this, \"orientation\", {\n          get: orientationGetter\n        });\n        Object.defineProperty(this, \"anchorPoint\", {\n          get: anchorGetter\n        });\n        Object.defineProperty(this, \"rotation\", {\n          get: rotationGetter\n        });\n        Object.defineProperty(this, \"scale\", {\n          get: scaleGetter\n        });\n        Object.defineProperty(this, \"opacity\", {\n          get: opacityGetter\n        });\n        Object.defineProperty(this, \"skew\", {\n          get: skewGetter\n        });\n        Object.defineProperty(this, \"skewAxis\", {\n          get: skewAxisGetter\n        });\n      };\n    }();\n\n    function getProp(elem, data, type, mult, arr) {\n      var p;\n\n      if (type === 2) {\n        p = new TransformProperty(elem, data, arr);\n      } else if (data.a === 0) {\n        if (type === 0) {\n          p = new ValueProperty(elem, data, mult);\n        } else {\n          p = new MultiDimensionalProperty(elem, data, mult);\n        }\n      } else if (data.a === 1) {\n        if (type === 0) {\n          p = new KeyframedValueProperty(elem, data, mult);\n        } else {\n          p = new KeyframedMultidimensionalProperty(elem, data, mult);\n        }\n      } else if (!data.k.length) {\n        p = new ValueProperty(elem, data, mult);\n      } else if (typeof data.k[0] === 'number') {\n        p = new MultiDimensionalProperty(elem, data, mult);\n      } else {\n        switch (type) {\n          case 0:\n            p = new KeyframedValueProperty(elem, data, mult);\n            break;\n\n          case 1:\n            p = new KeyframedMultidimensionalProperty(elem, data, mult);\n            break;\n        }\n      }\n\n      if (p.k) {\n        arr.push(p);\n      }\n\n      return p;\n    }\n\n    var getGradientProp = function () {\n      function getValue(forceRender) {\n        this.prop.getValue();\n        this.cmdf = false;\n        this.omdf = false;\n\n        if (this.prop.mdf || forceRender) {\n          var i,\n              len = this.data.p * 4;\n          var mult, val;\n\n          for (i = 0; i < len; i += 1) {\n            mult = i % 4 === 0 ? 100 : 255;\n            val = Math.round(this.prop.v[i] * mult);\n\n            if (this.c[i] !== val) {\n              this.c[i] = val;\n              this.cmdf = true;\n            }\n          }\n\n          if (this.o.length) {\n            len = this.prop.v.length;\n\n            for (i = this.data.p * 4; i < len; i += 1) {\n              mult = i % 2 === 0 ? 100 : 1;\n              val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];\n\n              if (this.o[i - this.data.p * 4] !== val) {\n                this.o[i - this.data.p * 4] = val;\n                this.omdf = true;\n              }\n            }\n          }\n        }\n      }\n\n      function gradientProp(elem, data, arr) {\n        this.prop = getProp(elem, data.k, 1, null, []);\n        this.data = data;\n        this.k = this.prop.k;\n        this.c = Array.apply(null, {\n          length: data.p * 4\n        });\n        var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4;\n        this.o = Array.apply(null, {\n          length: cLength\n        });\n        this.cmdf = false;\n        this.omdf = false;\n        this.getValue = getValue;\n\n        if (this.prop.k) {\n          arr.push(this);\n        }\n\n        this.getValue(true);\n      }\n\n      return function getGradientProp(elem, data, arr) {\n        return new gradientProp(elem, data, arr);\n      };\n    }();\n\n    var DashProperty = function () {\n      function processKeys(forceRender) {\n        var i = 0,\n            len = this.dataProps.length;\n\n        if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n          return;\n        }\n\n        this.mdf = false;\n        this.frameId = this.elem.globalData.frameId;\n\n        while (i < len) {\n          if (this.dataProps[i].p.mdf) {\n            this.mdf = true;\n            break;\n          }\n\n          i += 1;\n        }\n\n        if (this.mdf || forceRender) {\n          if (this.renderer === 'svg') {\n            this.dasharray = '';\n          }\n\n          for (i = 0; i < len; i += 1) {\n            if (this.dataProps[i].n != 'o') {\n              if (this.renderer === 'svg') {\n                this.dasharray += ' ' + this.dataProps[i].p.v;\n              } else {\n                this.dasharray[i] = this.dataProps[i].p.v;\n              }\n            } else {\n              this.dashoffset = this.dataProps[i].p.v;\n            }\n          }\n        }\n      }\n\n      return function (elem, data, renderer, dynamicProperties) {\n        this.elem = elem;\n        this.frameId = -1;\n        this.dataProps = new Array(data.length);\n        this.renderer = renderer;\n        this.mdf = false;\n        this.k = false;\n\n        if (this.renderer === 'svg') {\n          this.dasharray = '';\n        } else {\n          this.dasharray = new Array(data.length - 1);\n        }\n\n        this.dashoffset = 0;\n        var i,\n            len = data.length,\n            prop;\n\n        for (i = 0; i < len; i += 1) {\n          prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, dynamicProperties);\n          this.k = prop.k ? true : this.k;\n          this.dataProps[i] = {\n            n: data[i].n,\n            p: prop\n          };\n        }\n\n        this.getValue = processKeys;\n\n        if (this.k) {\n          dynamicProperties.push(this);\n        } else {\n          this.getValue(true);\n        }\n      };\n    }();\n\n    function getDashProp(elem, data, renderer, dynamicProperties) {\n      return new DashProperty(elem, data, renderer, dynamicProperties);\n    }\n\n    ;\n\n    var TextSelectorProp = function () {\n      var max = Math.max;\n      var min = Math.min;\n      var floor = Math.floor;\n\n      function updateRange(newCharsFlag) {\n        this.mdf = newCharsFlag || false;\n\n        if (this.dynamicProperties.length) {\n          var i,\n              len = this.dynamicProperties.length;\n\n          for (i = 0; i < len; i += 1) {\n            this.dynamicProperties[i].getValue();\n\n            if (this.dynamicProperties[i].mdf) {\n              this.mdf = true;\n            }\n          }\n        }\n\n        var totalChars = this.elem.textProperty.currentData ? this.elem.textProperty.currentData.l.length : 0;\n\n        if (newCharsFlag && this.data.r === 2) {\n          this.e.v = totalChars;\n        }\n\n        var divisor = this.data.r === 2 ? 1 : 100 / totalChars;\n        var o = this.o.v / divisor;\n        var s = this.s.v / divisor + o;\n        var e = this.e.v / divisor + o;\n\n        if (s > e) {\n          var _s = s;\n          s = e;\n          e = _s;\n        }\n\n        this.finalS = s;\n        this.finalE = e;\n      }\n\n      function getMult(ind) {\n        //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\n        var easer = BezierFactory.getBezierEasing(this.ne.v / 100, 0, 1 - this.xe.v / 100, 1).get;\n        var mult = 0;\n        var s = this.finalS;\n        var e = this.finalE;\n        var type = this.data.sh;\n\n        if (type == 2) {\n          if (e === s) {\n            mult = ind >= e ? 1 : 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type == 3) {\n          if (e === s) {\n            mult = ind >= e ? 0 : 1;\n          } else {\n            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type == 4) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n\n            if (mult < .5) {\n              mult *= 2;\n            } else {\n              mult = 1 - 2 * (mult - 0.5);\n            }\n          }\n\n          mult = easer(mult);\n        } else if (type == 5) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            var tot = e - s;\n            /*ind += 0.5;\r\n            mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\n\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            var x = -tot / 2 + ind;\n            var a = tot / 2;\n            mult = Math.sqrt(1 - x * x / (a * a));\n          }\n\n          mult = easer(mult);\n        } else if (type == 6) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2;\n            /*\r\n             ind = Math.min(Math.max(s,ind),e-1);\r\n             mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n             mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\n          }\n\n          mult = easer(mult);\n        } else {\n          if (ind >= floor(s)) {\n            if (ind - s < 0) {\n              mult = 1 - (s - ind);\n            } else {\n              mult = max(0, min(e - ind, 1));\n            }\n          }\n\n          mult = easer(mult);\n        }\n\n        return mult * this.a.v;\n      }\n\n      return function TextSelectorProp(elem, data, arr) {\n        this.mdf = false;\n        this.k = false;\n        this.data = data;\n        this.dynamicProperties = [];\n        this.getValue = updateRange;\n        this.getMult = getMult;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.finalS = 0;\n        this.finalE = 0;\n        this.s = PropertyFactory.getProp(elem, data.s || {\n          k: 0\n        }, 0, 0, this.dynamicProperties);\n\n        if ('e' in data) {\n          this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this.dynamicProperties);\n        } else {\n          this.e = {\n            v: 100\n          };\n        }\n\n        this.o = PropertyFactory.getProp(elem, data.o || {\n          k: 0\n        }, 0, 0, this.dynamicProperties);\n        this.xe = PropertyFactory.getProp(elem, data.xe || {\n          k: 0\n        }, 0, 0, this.dynamicProperties);\n        this.ne = PropertyFactory.getProp(elem, data.ne || {\n          k: 0\n        }, 0, 0, this.dynamicProperties);\n        this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this.dynamicProperties);\n\n        if (this.dynamicProperties.length) {\n          arr.push(this);\n        } else {\n          this.getValue();\n        }\n      };\n    }();\n\n    function getTextSelectorProp(elem, data, arr) {\n      return new TextSelectorProp(elem, data, arr);\n    }\n\n    ;\n    var ob = {\n      getProp: getProp,\n      getDashProp: getDashProp,\n      getTextSelectorProp: getTextSelectorProp,\n      getGradientProp: getGradientProp\n    };\n    return ob;\n  }();\n\n  function ShapePath() {\n    this.c = false;\n    this._length = 0;\n    this._maxLength = 8;\n    this.v = Array.apply(null, {\n      length: this._maxLength\n    });\n    this.o = Array.apply(null, {\n      length: this._maxLength\n    });\n    this.i = Array.apply(null, {\n      length: this._maxLength\n    });\n  }\n\n  ;\n\n  ShapePath.prototype.setPathData = function (closed, len) {\n    this.c = closed;\n    this.setLength(len);\n    var i = 0;\n\n    while (i < len) {\n      this.v[i] = point_pool.newPoint();\n      this.o[i] = point_pool.newPoint();\n      this.i[i] = point_pool.newPoint();\n      i += 1;\n    }\n  };\n\n  ShapePath.prototype.setLength = function (len) {\n    while (this._maxLength < len) {\n      this.doubleArrayLength();\n    }\n\n    this._length = len;\n  };\n\n  ShapePath.prototype.doubleArrayLength = function () {\n    this.v = this.v.concat(Array.apply(null, {\n      length: this._maxLength\n    }));\n    this.i = this.i.concat(Array.apply(null, {\n      length: this._maxLength\n    }));\n    this.o = this.o.concat(Array.apply(null, {\n      length: this._maxLength\n    }));\n    this._maxLength *= 2;\n  };\n\n  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\n    var arr;\n    this._length = Math.max(this._length, pos + 1);\n\n    if (this._length >= this._maxLength) {\n      this.doubleArrayLength();\n    }\n\n    switch (type) {\n      case 'v':\n        arr = this.v;\n        break;\n\n      case 'i':\n        arr = this.i;\n        break;\n\n      case 'o':\n        arr = this.o;\n        break;\n    }\n\n    if (!arr[pos] || arr[pos] && !replace) {\n      arr[pos] = point_pool.newPoint();\n    }\n\n    arr[pos][0] = x;\n    arr[pos][1] = y;\n  };\n\n  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\n    this.setXYAt(vX, vY, 'v', pos, replace);\n    this.setXYAt(oX, oY, 'o', pos, replace);\n    this.setXYAt(iX, iY, 'i', pos, replace);\n  };\n\n  var ShapePropertyFactory = function () {\n    var initFrame = -999999;\n\n    function interpolateShape(frameNum, iterationIndex, previousValue, isCurrentRender) {\n      var keyPropS, keyPropE, isHold;\n\n      if (frameNum < this.keyframes[0].t - this.offsetTime) {\n        keyPropS = this.keyframes[0].s[0];\n        isHold = true;\n        iterationIndex = 0;\n      } else if (frameNum >= this.keyframes[this.keyframes.length - 1].t - this.offsetTime) {\n        if (this.keyframes[this.keyframes.length - 2].h === 1) {\n          keyPropS = this.keyframes[this.keyframes.length - 1].s[0];\n        } else {\n          keyPropS = this.keyframes[this.keyframes.length - 2].e[0];\n        }\n\n        isHold = true;\n      } else {\n        var i = iterationIndex;\n        var len = this.keyframes.length - 1,\n            flag = true,\n            keyData,\n            nextKeyData,\n            j,\n            jLen,\n            k,\n            kLen;\n\n        while (flag) {\n          keyData = this.keyframes[i];\n          nextKeyData = this.keyframes[i + 1];\n\n          if (nextKeyData.t - this.offsetTime > frameNum) {\n            break;\n          }\n\n          if (i < len - 1) {\n            i += 1;\n          } else {\n            flag = false;\n          }\n        }\n\n        isHold = keyData.h === 1;\n        iterationIndex = i;\n        var perc;\n\n        if (!isHold) {\n          if (frameNum >= nextKeyData.t - this.offsetTime) {\n            perc = 1;\n          } else if (frameNum < keyData.t - this.offsetTime) {\n            perc = 0;\n          } else {\n            var fnc;\n\n            if (keyData.__fnct) {\n              fnc = keyData.__fnct;\n            } else {\n              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;\n              keyData.__fnct = fnc;\n            }\n\n            perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));\n          }\n\n          keyPropE = keyData.e[0];\n        }\n\n        keyPropS = keyData.s[0];\n      }\n\n      jLen = previousValue._length;\n      kLen = keyPropS.i[0].length;\n      var hasModified = false;\n      var vertexValue;\n\n      for (j = 0; j < jLen; j += 1) {\n        for (k = 0; k < kLen; k += 1) {\n          if (isHold) {\n            vertexValue = keyPropS.i[j][k];\n\n            if (previousValue.i[j][k] !== vertexValue) {\n              previousValue.i[j][k] = vertexValue;\n\n              if (isCurrentRender) {\n                this.pv.i[j][k] = vertexValue;\n              }\n\n              hasModified = true;\n            }\n\n            vertexValue = keyPropS.o[j][k];\n\n            if (previousValue.o[j][k] !== vertexValue) {\n              previousValue.o[j][k] = vertexValue;\n\n              if (isCurrentRender) {\n                this.pv.o[j][k] = vertexValue;\n              }\n\n              hasModified = true;\n            }\n\n            vertexValue = keyPropS.v[j][k];\n\n            if (previousValue.v[j][k] !== vertexValue) {\n              previousValue.v[j][k] = vertexValue;\n\n              if (isCurrentRender) {\n                this.pv.v[j][k] = vertexValue;\n              }\n\n              hasModified = true;\n            }\n          } else {\n            vertexValue = keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;\n\n            if (previousValue.i[j][k] !== vertexValue) {\n              previousValue.i[j][k] = vertexValue;\n\n              if (isCurrentRender) {\n                this.pv.i[j][k] = vertexValue;\n              }\n\n              hasModified = true;\n            }\n\n            vertexValue = keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;\n\n            if (previousValue.o[j][k] !== vertexValue) {\n              previousValue.o[j][k] = vertexValue;\n\n              if (isCurrentRender) {\n                this.pv.o[j][k] = vertexValue;\n              }\n\n              hasModified = true;\n            }\n\n            vertexValue = keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;\n\n            if (previousValue.v[j][k] !== vertexValue) {\n              previousValue.v[j][k] = vertexValue;\n\n              if (isCurrentRender) {\n                this.pv.v[j][k] = vertexValue;\n              }\n\n              hasModified = true;\n            }\n          }\n        }\n      }\n\n      if (hasModified) {\n        previousValue.c = keyPropS.c;\n      }\n\n      return {\n        iterationIndex: iterationIndex,\n        hasModified: hasModified\n      };\n    }\n\n    function interpolateShapeCurrentTime() {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n\n      this.mdf = false;\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n\n      if (!(this.lastFrame !== initFrame && (this.lastFrame < initTime && frameNum < initTime || this.lastFrame > endTime && frameNum > endTime))) {\n        ////\n        var i = this.lastFrame < frameNum ? this._lastIndex : 0;\n        var renderResult = this.interpolateShape(frameNum, i, this.v, true); ////\n\n        this._lastIndex = renderResult.iterationIndex;\n        this.mdf = renderResult.hasModified;\n\n        if (renderResult.hasModified) {\n          this.paths = this.localShapeCollection;\n        }\n      }\n\n      this.lastFrame = frameNum;\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function getShapeValue() {\n      return this.v;\n    }\n\n    function resetShape() {\n      this.paths = this.localShapeCollection;\n\n      if (!this.k) {\n        this.mdf = false;\n      }\n    }\n\n    function ShapeProperty(elem, data, type) {\n      this.__shapeObject = 1;\n      this.comp = elem.comp;\n      this.k = false;\n      this.mdf = false;\n      var pathData = type === 3 ? data.pt.k : data.ks.k;\n      this.v = shape_pool.clone(pathData);\n      this.pv = shape_pool.clone(this.v);\n      this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.reset = resetShape;\n    }\n\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\n    ShapeProperty.prototype.getValue = getShapeValue;\n\n    function KeyframedShapeProperty(elem, data, type) {\n      this.__shapeObject = 1;\n      this.comp = elem.comp;\n      this.elem = elem;\n      this.offsetTime = elem.data.st;\n      this._lastIndex = 0;\n      this.keyframes = type === 3 ? data.pt.k : data.ks.k;\n      this.k = true;\n      this.kf = true;\n      var i,\n          len = this.keyframes[0].s[0].i.length;\n      var jLen = this.keyframes[0].s[0].i[0].length;\n      this.v = shape_pool.newShape();\n      this.v.setPathData(this.keyframes[0].s[0].c, len);\n      this.pv = shape_pool.clone(this.v);\n      this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.lastFrame = initFrame;\n      this.reset = resetShape;\n    }\n\n    KeyframedShapeProperty.prototype.getValue = interpolateShapeCurrentTime;\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\n\n    var EllShapeProperty = function () {\n      var cPoint = roundCorner;\n\n      function convertEllToPath() {\n        var p0 = this.p.v[0],\n            p1 = this.p.v[1],\n            s0 = this.s.v[0] / 2,\n            s1 = this.s.v[1] / 2;\n\n        if (this.d !== 3) {\n          this.v.v[0][0] = p0;\n          this.v.v[0][1] = p1 - s1;\n          this.v.v[1][0] = p0 + s0;\n          this.v.v[1][1] = p1;\n          this.v.v[2][0] = p0;\n          this.v.v[2][1] = p1 + s1;\n          this.v.v[3][0] = p0 - s0;\n          this.v.v[3][1] = p1;\n          this.v.i[0][0] = p0 - s0 * cPoint;\n          this.v.i[0][1] = p1 - s1;\n          this.v.i[1][0] = p0 + s0;\n          this.v.i[1][1] = p1 - s1 * cPoint;\n          this.v.i[2][0] = p0 + s0 * cPoint;\n          this.v.i[2][1] = p1 + s1;\n          this.v.i[3][0] = p0 - s0;\n          this.v.i[3][1] = p1 + s1 * cPoint;\n          this.v.o[0][0] = p0 + s0 * cPoint;\n          this.v.o[0][1] = p1 - s1;\n          this.v.o[1][0] = p0 + s0;\n          this.v.o[1][1] = p1 + s1 * cPoint;\n          this.v.o[2][0] = p0 - s0 * cPoint;\n          this.v.o[2][1] = p1 + s1;\n          this.v.o[3][0] = p0 - s0;\n          this.v.o[3][1] = p1 - s1 * cPoint;\n        } else {\n          this.v.v[0][0] = p0;\n          this.v.v[0][1] = p1 - s1;\n          this.v.v[1][0] = p0 - s0;\n          this.v.v[1][1] = p1;\n          this.v.v[2][0] = p0;\n          this.v.v[2][1] = p1 + s1;\n          this.v.v[3][0] = p0 + s0;\n          this.v.v[3][1] = p1;\n          this.v.i[0][0] = p0 + s0 * cPoint;\n          this.v.i[0][1] = p1 - s1;\n          this.v.i[1][0] = p0 - s0;\n          this.v.i[1][1] = p1 - s1 * cPoint;\n          this.v.i[2][0] = p0 - s0 * cPoint;\n          this.v.i[2][1] = p1 + s1;\n          this.v.i[3][0] = p0 + s0;\n          this.v.i[3][1] = p1 + s1 * cPoint;\n          this.v.o[0][0] = p0 - s0 * cPoint;\n          this.v.o[0][1] = p1 - s1;\n          this.v.o[1][0] = p0 - s0;\n          this.v.o[1][1] = p1 + s1 * cPoint;\n          this.v.o[2][0] = p0 + s0 * cPoint;\n          this.v.o[2][1] = p1 + s1;\n          this.v.o[3][0] = p0 + s0;\n          this.v.o[3][1] = p1 - s1 * cPoint;\n        }\n      }\n\n      function processKeys(frameNum) {\n        var i,\n            len = this.dynamicProperties.length;\n\n        if (this.elem.globalData.frameId === this.frameId) {\n          return;\n        }\n\n        this.mdf = false;\n        this.frameId = this.elem.globalData.frameId;\n\n        for (i = 0; i < len; i += 1) {\n          this.dynamicProperties[i].getValue(frameNum);\n\n          if (this.dynamicProperties[i].mdf) {\n            this.mdf = true;\n          }\n        }\n\n        if (this.mdf) {\n          this.convertEllToPath();\n        }\n      }\n\n      return function EllShapeProperty(elem, data) {\n        /*this.v = {\r\n            v: Array.apply(null,{length:4}),\r\n            i: Array.apply(null,{length:4}),\r\n            o: Array.apply(null,{length:4}),\r\n            c: true\r\n        };*/\n        this.v = shape_pool.newShape();\n        this.v.setPathData(true, 4);\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n        this.paths = this.localShapeCollection;\n        this.localShapeCollection.addShape(this.v);\n        this.d = data.d;\n        this.dynamicProperties = [];\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.mdf = false;\n        this.getValue = processKeys;\n        this.convertEllToPath = convertEllToPath;\n        this.reset = resetShape;\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this.dynamicProperties);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this.dynamicProperties);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.convertEllToPath();\n        }\n      };\n    }();\n\n    var StarShapeProperty = function () {\n      function convertPolygonToPath() {\n        var numPts = Math.floor(this.pt.v);\n        var angle = Math.PI * 2 / numPts;\n        /*this.v.v.length = numPts;\r\n        this.v.i.length = numPts;\r\n        this.v.o.length = numPts;*/\n\n        var rad = this.or.v;\n        var roundness = this.os.v;\n        var perimSegment = 2 * Math.PI * rad / (numPts * 4);\n        var i,\n            currentAng = -Math.PI / 2;\n        var dir = this.data.d === 3 ? -1 : 1;\n        currentAng += this.r.v;\n        this.v._length = 0;\n\n        for (i = 0; i < numPts; i += 1) {\n          var x = rad * Math.cos(currentAng);\n          var y = rad * Math.sin(currentAng);\n          var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n          var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n          x += +this.p.v[0];\n          y += +this.p.v[1];\n          this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n          /*this.v.v[i] = [x,y];\r\n          this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n          this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];*/\n\n          currentAng += angle * dir;\n        }\n\n        this.paths.length = 0;\n        this.paths[0] = this.v;\n      }\n\n      function convertStarToPath() {\n        var numPts = Math.floor(this.pt.v) * 2;\n        var angle = Math.PI * 2 / numPts;\n        /*this.v.v.length = numPts;\r\n        this.v.i.length = numPts;\r\n        this.v.o.length = numPts;*/\n\n        var longFlag = true;\n        var longRad = this.or.v;\n        var shortRad = this.ir.v;\n        var longRound = this.os.v;\n        var shortRound = this.is.v;\n        var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);\n        var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);\n        var i,\n            rad,\n            roundness,\n            perimSegment,\n            currentAng = -Math.PI / 2;\n        currentAng += this.r.v;\n        var dir = this.data.d === 3 ? -1 : 1;\n        this.v._length = 0;\n\n        for (i = 0; i < numPts; i += 1) {\n          rad = longFlag ? longRad : shortRad;\n          roundness = longFlag ? longRound : shortRound;\n          perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\n          var x = rad * Math.cos(currentAng);\n          var y = rad * Math.sin(currentAng);\n          var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n          var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n          x += +this.p.v[0];\n          y += +this.p.v[1];\n          this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n          /*this.v.v[i] = [x,y];\r\n          this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n          this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n          this.v._length = numPts;*/\n\n          longFlag = !longFlag;\n          currentAng += angle * dir;\n        }\n      }\n\n      function processKeys() {\n        if (this.elem.globalData.frameId === this.frameId) {\n          return;\n        }\n\n        this.mdf = false;\n        this.frameId = this.elem.globalData.frameId;\n        var i,\n            len = this.dynamicProperties.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.dynamicProperties[i].getValue();\n\n          if (this.dynamicProperties[i].mdf) {\n            this.mdf = true;\n          }\n        }\n\n        if (this.mdf) {\n          this.convertToPath();\n        }\n      }\n\n      return function StarShapeProperty(elem, data) {\n        /*this.v = {\r\n            v: [],\r\n            i: [],\r\n            o: [],\r\n            c: true\r\n        };*/\n        this.v = shape_pool.newShape();\n        this.v.setPathData(true, 0);\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.data = data;\n        this.frameId = -1;\n        this.d = data.d;\n        this.dynamicProperties = [];\n        this.mdf = false;\n        this.getValue = processKeys;\n        this.reset = resetShape;\n\n        if (data.sy === 1) {\n          this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this.dynamicProperties);\n          this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this.dynamicProperties);\n          this.convertToPath = convertStarToPath;\n        } else {\n          this.convertToPath = convertPolygonToPath;\n        }\n\n        this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this.dynamicProperties);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this.dynamicProperties);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this.dynamicProperties);\n        this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this.dynamicProperties);\n        this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this.dynamicProperties);\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.convertToPath();\n        }\n      };\n    }();\n\n    var RectShapeProperty = function () {\n      function processKeys(frameNum) {\n        if (this.elem.globalData.frameId === this.frameId) {\n          return;\n        }\n\n        this.mdf = false;\n        this.frameId = this.elem.globalData.frameId;\n        var i,\n            len = this.dynamicProperties.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.dynamicProperties[i].getValue(frameNum);\n\n          if (this.dynamicProperties[i].mdf) {\n            this.mdf = true;\n          }\n        }\n\n        if (this.mdf) {\n          this.convertRectToPath();\n        }\n      }\n\n      function convertRectToPath() {\n        var p0 = this.p.v[0],\n            p1 = this.p.v[1],\n            v0 = this.s.v[0] / 2,\n            v1 = this.s.v[1] / 2;\n        var round = bm_min(v0, v1, this.r.v);\n        var cPoint = round * (1 - roundCorner);\n        this.v._length = 0;\n\n        if (this.d === 2 || this.d === 1) {\n          this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);\n          this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);\n\n          if (round !== 0) {\n            this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);\n            this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);\n            this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);\n            this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);\n            this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);\n            this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);\n          } else {\n            this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);\n            this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);\n          }\n        } else {\n          this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);\n\n          if (round !== 0) {\n            this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);\n            this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);\n            this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);\n            this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);\n            this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);\n            this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);\n          } else {\n            this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);\n            this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);\n            this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);\n          }\n        }\n      }\n\n      return function RectShapeProperty(elem, data) {\n        this.v = shape_pool.newShape();\n        this.v.c = true;\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.d = data.d;\n        this.dynamicProperties = [];\n        this.mdf = false;\n        this.getValue = processKeys;\n        this.convertRectToPath = convertRectToPath;\n        this.reset = resetShape;\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this.dynamicProperties);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this.dynamicProperties);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this.dynamicProperties);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.convertRectToPath();\n        }\n      };\n    }();\n\n    function getShapeProp(elem, data, type, arr) {\n      var prop;\n\n      if (type === 3 || type === 4) {\n        var dataProp = type === 3 ? data.pt : data.ks;\n        var keys = dataProp.k;\n\n        if (dataProp.a === 1 || keys.length) {\n          prop = new KeyframedShapeProperty(elem, data, type);\n        } else {\n          prop = new ShapeProperty(elem, data, type);\n        }\n      } else if (type === 5) {\n        prop = new RectShapeProperty(elem, data);\n      } else if (type === 6) {\n        prop = new EllShapeProperty(elem, data);\n      } else if (type === 7) {\n        prop = new StarShapeProperty(elem, data);\n      }\n\n      if (prop.k) {\n        arr.push(prop);\n      }\n\n      return prop;\n    }\n\n    function getConstructorFunction() {\n      return ShapeProperty;\n    }\n\n    function getKeyframedConstructorFunction() {\n      return KeyframedShapeProperty;\n    }\n\n    var ob = {};\n    ob.getShapeProp = getShapeProp;\n    ob.getConstructorFunction = getConstructorFunction;\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\n    return ob;\n  }();\n\n  var ShapeModifiers = function () {\n    var ob = {};\n    var modifiers = {};\n    ob.registerModifier = registerModifier;\n    ob.getModifier = getModifier;\n\n    function registerModifier(nm, factory) {\n      if (!modifiers[nm]) {\n        modifiers[nm] = factory;\n      }\n    }\n\n    function getModifier(nm, elem, data, dynamicProperties) {\n      return new modifiers[nm](elem, data, dynamicProperties);\n    }\n\n    return ob;\n  }();\n\n  function ShapeModifier() {}\n\n  ShapeModifier.prototype.initModifierProperties = function () {};\n\n  ShapeModifier.prototype.addShapeToModifier = function () {};\n\n  ShapeModifier.prototype.addShape = function (data) {\n    if (!this.closed) {\n      this.shapes.push({\n        shape: data.sh,\n        data: data,\n        localShapeCollection: shapeCollection_pool.newShapeCollection()\n      });\n      this.addShapeToModifier(data.sh);\n    }\n  };\n\n  ShapeModifier.prototype.init = function (elem, data, dynamicProperties) {\n    this.elem = elem;\n    this.frameId = -1;\n    this.shapes = [];\n    this.dynamicProperties = [];\n    this.mdf = false;\n    this.closed = false;\n    this.k = false;\n    this.comp = elem.comp;\n    this.initModifierProperties(elem, data);\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n      dynamicProperties.push(this);\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  function TrimModifier() {}\n\n  ;\n  extendPrototype(ShapeModifier, TrimModifier);\n\n  TrimModifier.prototype.processKeys = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return;\n    }\n\n    this.mdf = forceRender ? true : false;\n    this.frameId = this.elem.globalData.frameId;\n    var i,\n        len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n\n      if (this.dynamicProperties[i].mdf) {\n        this.mdf = true;\n      }\n    }\n\n    if (this.mdf || forceRender) {\n      var o = this.o.v % 360 / 360;\n\n      if (o < 0) {\n        o += 1;\n      }\n\n      var s = this.s.v + o;\n      var e = this.e.v + o;\n\n      if (s == e) {}\n\n      if (s > e) {\n        var _s = s;\n        s = e;\n        e = _s;\n      }\n\n      this.sValue = s;\n      this.eValue = e;\n      this.oValue = o;\n    }\n  };\n\n  TrimModifier.prototype.initModifierProperties = function (elem, data) {\n    this.sValue = 0;\n    this.eValue = 0;\n    this.oValue = 0;\n    this.getValue = this.processKeys;\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this.dynamicProperties);\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this.dynamicProperties);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this.dynamicProperties);\n    this.m = data.m;\n\n    if (!this.dynamicProperties.length) {\n      this.getValue(true);\n    }\n  };\n\n  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\n    var segments = [];\n\n    if (e <= 1) {\n      segments.push({\n        s: s,\n        e: e\n      });\n    } else if (s >= 1) {\n      segments.push({\n        s: s - 1,\n        e: e - 1\n      });\n    } else {\n      segments.push({\n        s: s,\n        e: 1\n      });\n      segments.push({\n        s: 0,\n        e: e - 1\n      });\n    }\n\n    var shapeSegments = [];\n    var i,\n        len = segments.length,\n        segmentOb;\n\n    for (i = 0; i < len; i += 1) {\n      segmentOb = segments[i];\n\n      if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {} else {\n        var shapeS, shapeE;\n\n        if (segmentOb.s * totalModifierLength <= addedLength) {\n          shapeS = 0;\n        } else {\n          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\n          shapeE = 1;\n        } else {\n          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        shapeSegments.push([shapeS, shapeE]);\n      }\n    }\n\n    if (!shapeSegments.length) {\n      shapeSegments.push([0, 0]);\n    }\n\n    return shapeSegments;\n  };\n\n  TrimModifier.prototype.processShapes = function (firstFrame) {\n    var shapePaths;\n    var i,\n        len = this.shapes.length;\n    var j, jLen;\n    var s = this.sValue;\n    var e = this.eValue;\n    var pathsData,\n        pathData,\n        totalShapeLength,\n        totalModifierLength = 0;\n\n    if (e === s) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].localShapeCollection.releaseShapes();\n        this.shapes[i].shape.mdf = true;\n        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\n      }\n    } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {\n      var segments = [],\n          shapeData,\n          localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n\n        if (!shapeData.shape.mdf && !this.mdf && !firstFrame && this.m !== 2) {\n          shapeData.shape.paths = shapeData.localShapeCollection;\n        } else {\n          shapePaths = shapeData.shape.paths;\n          jLen = shapePaths._length;\n          totalShapeLength = 0;\n\n          if (!shapeData.shape.mdf && shapeData.pathsData) {\n            totalShapeLength = shapeData.totalShapeLength;\n          } else {\n            pathsData = [];\n\n            for (j = 0; j < jLen; j += 1) {\n              pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\n              pathsData.push(pathData);\n              totalShapeLength += pathData.totalLength;\n            }\n\n            shapeData.totalShapeLength = totalShapeLength;\n            shapeData.pathsData = pathsData;\n          }\n\n          totalModifierLength += totalShapeLength;\n          shapeData.shape.mdf = true;\n        }\n      }\n\n      var shapeS = s,\n          shapeE = e,\n          addedLength = 0;\n      var j, jLen;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        shapeData = this.shapes[i];\n\n        if (shapeData.shape.mdf) {\n          localShapeCollection = shapeData.localShapeCollection;\n          localShapeCollection.releaseShapes();\n\n          if (this.m === 2 && len > 1) {\n            var edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\n            addedLength += shapeData.totalShapeLength;\n          } else {\n            edges = [[shapeS, shapeE]];\n          }\n\n          jLen = edges.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            shapeS = edges[j][0];\n            shapeE = edges[j][1];\n            segments.length = 0;\n\n            if (shapeE <= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength * shapeE\n              });\n            } else if (shapeS >= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * (shapeS - 1),\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            } else {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength\n              });\n              segments.push({\n                s: 0,\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            }\n\n            var newShapesData = this.addShapes(shapeData, segments[0]);\n\n            if (segments[0].s !== segments[0].e) {\n              var lastPos;\n\n              if (segments.length > 1) {\n                if (shapeData.shape.v.c) {\n                  var lastShape = newShapesData.pop();\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1], lastShape);\n                } else {\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1]);\n                }\n              }\n\n              this.addPaths(newShapesData, localShapeCollection);\n            }\n          }\n\n          shapeData.shape.paths = localShapeCollection;\n        }\n      }\n    } else if (this.mdf) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].shape.mdf = true;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this.mdf = false;\n    }\n  };\n\n  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\n    var i,\n        len = newPaths.length;\n\n    for (i = 0; i < len; i += 1) {\n      localShapeCollection.addShape(newPaths[i]);\n    }\n  };\n\n  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\n    /*console.log(pt1, 'vertex: v, at: ', pos);\r\n    console.log(pt2, 'vertex: o, at: ', pos);\r\n    console.log(pt3, 'vertex: i, at: ', pos + 1);\r\n    console.log(pt4, 'vertex: v, at: ', pos + 1);\r\n    console.log('newShape: ', newShape);*/\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\n\n    if (newShape) {\n      shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\n    }\n\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\n  };\n\n  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\n    var pathsData = shapeData.pathsData;\n    var shapePaths = shapeData.shape.paths.shapes;\n    var i,\n        len = shapeData.shape.paths._length,\n        j,\n        jLen;\n    var addedLength = 0;\n    var currentLengthData, segmentCount;\n    var lengths;\n    var segment;\n    var shapes = [];\n    var initPos;\n    var newShape = true;\n\n    if (!shapePath) {\n      shapePath = shape_pool.newShape();\n      segmentCount = 0;\n      initPos = 0;\n    } else {\n      segmentCount = shapePath._length;\n      initPos = shapePath._length;\n    }\n\n    shapes.push(shapePath);\n\n    for (i = 0; i < len; i += 1) {\n      lengths = pathsData[i].lengths;\n      shapePath.c = shapePaths[i].c;\n      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\n\n      for (j = 1; j < jLen; j += 1) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\n          addedLength += currentLengthData.addedLength;\n          shapePath.c = false;\n        } else if (addedLength > shapeSegment.e) {\n          shapePath.c = false;\n          break;\n        } else {\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);\n            this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n            newShape = false;\n            shapePath.c = false;\n          }\n\n          addedLength += currentLengthData.addedLength;\n          segmentCount += 1;\n        }\n      }\n\n      if (shapePaths[i].c) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength <= shapeSegment.e) {\n          var segmentLength = lengths[j - 1].addedLength;\n\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\n            this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n            newShape = false;\n            shapePath.c = false;\n          }\n        } else {\n          shapePath.c = false;\n        }\n\n        addedLength += currentLengthData.addedLength;\n        segmentCount += 1;\n      }\n\n      if (shapePath._length) {\n        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\n        shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], 'o', shapePath._length - 1);\n      }\n\n      if (addedLength > shapeSegment.e) {\n        break;\n      }\n\n      if (i < len - 1) {\n        shapePath = shape_pool.newShape();\n        newShape = true;\n        shapes.push(shapePath);\n        segmentCount = 0;\n      }\n    }\n\n    return shapes;\n  };\n\n  ShapeModifiers.registerModifier('tm', TrimModifier);\n\n  function RoundCornersModifier() {}\n\n  ;\n  extendPrototype(ShapeModifier, RoundCornersModifier);\n\n  RoundCornersModifier.prototype.processKeys = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return;\n    }\n\n    this.mdf = forceRender ? true : false;\n    this.frameId = this.elem.globalData.frameId;\n    var i,\n        len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n\n      if (this.dynamicProperties[i].mdf) {\n        this.mdf = true;\n      }\n    }\n  };\n\n  RoundCornersModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this.dynamicProperties);\n\n    if (!this.dynamicProperties.length) {\n      this.getValue(true);\n    }\n  };\n\n  RoundCornersModifier.prototype.processPath = function (path, round) {\n    var cloned_path = shape_pool.newShape();\n    cloned_path.c = path.c;\n    var i,\n        len = path._length;\n    var currentV,\n        currentI,\n        currentO,\n        closerV,\n        newV,\n        newO,\n        newI,\n        distance,\n        newPosPerc,\n        index = 0;\n    var vX, vY, oX, oY, iX, iY;\n\n    for (i = 0; i < len; i += 1) {\n      currentV = path.v[i];\n      currentO = path.o[i];\n      currentI = path.i[i];\n\n      if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {\n        if ((i === 0 || i === len - 1) && !path.c) {\n          cloned_path.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index);\n          /*cloned_path.v[index] = currentV;\r\n          cloned_path.o[index] = currentO;\r\n          cloned_path.i[index] = currentI;*/\n\n          index += 1;\n        } else {\n          if (i === 0) {\n            closerV = path.v[len - 1];\n          } else {\n            closerV = path.v[i - 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          vX = iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vY = iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;\n          oX = vX - (vX - currentV[0]) * roundCorner;\n          oY = vY - (vY - currentV[1]) * roundCorner;\n          cloned_path.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n\n          if (i === len - 1) {\n            closerV = path.v[0];\n          } else {\n            closerV = path.v[i + 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          vX = oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vY = oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;\n          iX = vX - (vX - currentV[0]) * roundCorner;\n          iY = vY - (vY - currentV[1]) * roundCorner;\n          cloned_path.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n        }\n      } else {\n        cloned_path.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index);\n        index += 1;\n      }\n    }\n\n    return cloned_path;\n  };\n\n  RoundCornersModifier.prototype.processShapes = function (firstFrame) {\n    var shapePaths;\n    var i,\n        len = this.shapes.length;\n    var j, jLen;\n    var rd = this.rd.v;\n\n    if (rd !== 0) {\n      var shapeData, newPaths, localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        newPaths = shapeData.shape.paths;\n        localShapeCollection = shapeData.localShapeCollection;\n\n        if (!(!shapeData.shape.mdf && !this.mdf && !firstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape.mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], rd));\n          }\n        }\n\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this.mdf = false;\n    }\n  };\n\n  ShapeModifiers.registerModifier('rd', RoundCornersModifier);\n\n  function RepeaterModifier() {}\n\n  ;\n\n  RepeaterModifier.prototype.processKeys = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return;\n    }\n\n    this.mdf = forceRender ? true : false;\n    var i,\n        len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n\n      if (this.dynamicProperties[i].mdf) {\n        this.mdf = true;\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.c = PropertyFactory.getProp(elem, data.c, 0, null, this.dynamicProperties);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, null, this.dynamicProperties);\n    this.tr = PropertyFactory.getProp(elem, data.tr, 2, null, this.dynamicProperties);\n    this.data = data;\n\n    if (!this.dynamicProperties.length) {\n      this.getValue(true);\n    }\n\n    this.pMatrix = new Matrix();\n    this.rMatrix = new Matrix();\n    this.sMatrix = new Matrix();\n    this.tMatrix = new Matrix();\n    this.matrix = new Matrix();\n  };\n\n  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {\n    var dir = inv ? -1 : 1;\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    rMatrix.rotate(-transform.r.v * dir * perc);\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n  };\n\n  RepeaterModifier.prototype.init = function (elem, arr, pos, elemsData, dynamicProperties) {\n    this.elem = elem;\n    this.arr = arr;\n    this.pos = pos;\n    this.elemsData = elemsData;\n    this._currentCopies = 0;\n    this._elements = [];\n    this._groups = [];\n    this.dynamicProperties = [];\n    this.frameId = -1;\n    this.initModifierProperties(elem, arr[pos]);\n    var cont = 0;\n\n    while (pos > 0) {\n      pos -= 1; //this._elements.unshift(arr.splice(pos,1)[0]);\n\n      this._elements.unshift(arr[pos]);\n\n      cont += 1;\n    }\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n      dynamicProperties.push(this);\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  RepeaterModifier.prototype.resetElements = function (elements) {\n    var i,\n        len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._processed = false;\n\n      if (elements[i].ty === 'gr') {\n        this.resetElements(elements[i].it);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.cloneElements = function (elements) {\n    var i,\n        len = elements.length;\n    var newElements = JSON.parse(JSON.stringify(elements));\n    this.resetElements(newElements);\n    return newElements;\n  };\n\n  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\n    var i,\n        len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._render = renderFlag;\n\n      if (elements[i].ty === 'gr') {\n        this.changeGroupRender(elements[i].it, renderFlag);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.processShapes = function (firstFrame) {\n    if (this.elem.globalData.frameId === this.frameId) {\n      return;\n    }\n\n    this.frameId = this.elem.globalData.frameId;\n\n    if (!this.dynamicProperties.length && !firstFrame) {\n      this.mdf = false;\n    }\n\n    if (this.mdf) {\n      var copies = Math.ceil(this.c.v);\n\n      if (this._groups.length < copies) {\n        while (this._groups.length < copies) {\n          var group = {\n            it: this.cloneElements(this._elements),\n            ty: 'gr'\n          };\n          group.it.push({\n            \"a\": {\n              \"a\": 0,\n              \"ix\": 1,\n              \"k\": [0, 0]\n            },\n            \"nm\": \"Transform\",\n            \"o\": {\n              \"a\": 0,\n              \"ix\": 7,\n              \"k\": 100\n            },\n            \"p\": {\n              \"a\": 0,\n              \"ix\": 2,\n              \"k\": [0, 0]\n            },\n            \"r\": {\n              \"a\": 0,\n              \"ix\": 6,\n              \"k\": 0\n            },\n            \"s\": {\n              \"a\": 0,\n              \"ix\": 3,\n              \"k\": [100, 100]\n            },\n            \"sa\": {\n              \"a\": 0,\n              \"ix\": 5,\n              \"k\": 0\n            },\n            \"sk\": {\n              \"a\": 0,\n              \"ix\": 4,\n              \"k\": 0\n            },\n            \"ty\": \"tr\"\n          });\n          this.arr.splice(0, 0, group);\n\n          this._groups.splice(0, 0, group);\n\n          this._currentCopies += 1;\n        }\n\n        this.elem.reloadShapes();\n      }\n\n      var i,\n          cont = 0,\n          renderFlag;\n\n      for (i = 0; i <= this._groups.length - 1; i += 1) {\n        renderFlag = cont < copies;\n        this._groups[i]._render = renderFlag;\n        this.changeGroupRender(this._groups[i].it, renderFlag);\n        cont += 1;\n      }\n\n      this._currentCopies = copies;\n      this.elem.firstFrame = true; ////\n\n      var offset = this.o.v;\n      var offsetModulo = offset % 1;\n      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n      var k;\n      var tMat = this.tr.v.props;\n      var pProps = this.pMatrix.props;\n      var rProps = this.rMatrix.props;\n      var sProps = this.sMatrix.props;\n      this.pMatrix.reset();\n      this.rMatrix.reset();\n      this.sMatrix.reset();\n      this.tMatrix.reset();\n      this.matrix.reset();\n      var iteration = 0;\n\n      if (offset > 0) {\n        while (iteration < roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          iteration += 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\n          iteration += offsetModulo;\n        }\n      } else if (offset < 0) {\n        while (iteration > roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\n          iteration -= 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);\n          iteration -= offsetModulo;\n        }\n      }\n\n      i = this.data.m === 1 ? 0 : this._currentCopies - 1;\n      var dir = this.data.m === 1 ? 1 : -1;\n      cont = this._currentCopies;\n\n      while (cont) {\n        if (iteration !== 0) {\n          if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {\n            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          }\n\n          this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);\n          this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);\n          this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);\n          var items = this.elemsData[i].it;\n          var itemsTransform = items[items.length - 1].transform.mProps.v.props;\n          var j,\n              jLen = itemsTransform.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n\n          this.matrix.reset();\n        } else {\n          this.matrix.reset();\n          var items = this.elemsData[i].it;\n          var itemsTransform = items[items.length - 1].transform.mProps.v.props;\n          var j,\n              jLen = itemsTransform.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n        }\n\n        iteration += 1;\n        cont -= 1;\n        i += dir;\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.addShape = function () {};\n\n  ShapeModifiers.registerModifier('rp', RepeaterModifier);\n\n  function ShapeCollection() {\n    this._length = 0;\n    this._maxLength = 4;\n    this.shapes = Array.apply(null, {\n      length: this._maxLength\n    });\n  }\n\n  ;\n\n  ShapeCollection.prototype.addShape = function (shapeData) {\n    if (this._length === this._maxLength) {\n      this.shapes = this.shapes.concat(Array.apply(null, {\n        length: this._maxLength\n      }));\n      this._maxLength *= 2;\n    }\n\n    this.shapes[this._length] = shapeData;\n    this._length += 1;\n  };\n\n  ShapeCollection.prototype.releaseShapes = function () {\n    var i;\n\n    for (i = 0; i < this._length; i += 1) {\n      shape_pool.release(this.shapes[i]);\n    }\n\n    this._length = 0;\n  };\n\n  var ImagePreloader = function () {\n    var imagesLoadedCb;\n\n    function imageLoaded() {\n      this.loadedAssets += 1;\n\n      if (this.loadedAssets === this.totalImages) {\n        if (imagesLoadedCb) {\n          imagesLoadedCb(null);\n        }\n      }\n    }\n\n    function getAssetsPath(assetData) {\n      var path = '';\n\n      if (this.assetsPath) {\n        var imagePath = assetData.p;\n\n        if (imagePath.indexOf('images/') !== -1) {\n          imagePath = imagePath.split('/')[1];\n        }\n\n        path = this.assetsPath + imagePath;\n      } else {\n        path = this.path;\n        path += assetData.u ? assetData.u : '';\n        path += assetData.p;\n      }\n\n      return path;\n    }\n\n    function loadImage(path) {\n      var img = document.createElement('img');\n      img.addEventListener('load', imageLoaded.bind(this), false);\n      img.addEventListener('error', imageLoaded.bind(this), false);\n      img.src = path;\n    }\n\n    function loadAssets(assets, cb) {\n      imagesLoadedCb = cb;\n      this.totalAssets = assets.length;\n      var i;\n\n      for (i = 0; i < this.totalAssets; i += 1) {\n        if (!assets[i].layers) {\n          loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\n          this.totalImages += 1;\n        }\n      }\n    }\n\n    function setPath(path) {\n      this.path = path || '';\n    }\n\n    function setAssetsPath(path) {\n      this.assetsPath = path || '';\n    }\n\n    return function ImagePreloader() {\n      this.loadAssets = loadAssets;\n      this.setAssetsPath = setAssetsPath;\n      this.setPath = setPath;\n      this.assetsPath = '';\n      this.path = '';\n      this.totalAssets = 0;\n      this.totalImages = 0;\n      this.loadedAssets = 0;\n    };\n  }();\n\n  var featureSupport = function () {\n    var ob = {\n      maskType: true\n    };\n\n    if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\n      ob.maskType = false;\n    }\n\n    return ob;\n  }();\n\n  var filtersFactory = function () {\n    var ob = {};\n    ob.createFilter = createFilter;\n    ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\n\n    function createFilter(filId) {\n      var fil = document.createElementNS(svgNS, 'filter');\n      fil.setAttribute('id', filId);\n      fil.setAttribute('filterUnits', 'objectBoundingBox');\n      fil.setAttribute('x', '0%');\n      fil.setAttribute('y', '0%');\n      fil.setAttribute('width', '100%');\n      fil.setAttribute('height', '100%');\n      return fil;\n    }\n\n    function createAlphaToLuminanceFilter() {\n      var feColorMatrix = document.createElementNS(svgNS, 'feColorMatrix');\n      feColorMatrix.setAttribute('type', 'matrix');\n      feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n      feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\n      return feColorMatrix;\n    }\n\n    return ob;\n  }();\n\n  function TextAnimatorProperty(textData, renderType, elem) {\n    this.mdf = false;\n    this._firstFrame = true;\n    this._hasMaskedPath = false;\n    this._frameId = -1;\n    this._dynamicProperties = [];\n    this._textData = textData;\n    this._renderType = renderType;\n    this._elem = elem;\n    this._animatorsData = Array.apply(null, {\n      length: this._textData.a.length\n    });\n    this._pathData = {};\n    this._moreOptions = {\n      alignment: {}\n    };\n    this.renderedLetters = [];\n    this.lettersChangedFlag = false;\n  }\n\n  TextAnimatorProperty.prototype.searchProperties = function (dynamicProperties) {\n    var i,\n        len = this._textData.a.length,\n        animatorData,\n        animatorProps;\n    var getProp = PropertyFactory.getProp;\n\n    for (i = 0; i < len; i += 1) {\n      animatorProps = this._textData.a[i];\n      animatorData = {\n        a: {},\n        s: {}\n      };\n\n      if ('r' in animatorProps.a) {\n        animatorData.a.r = getProp(this._elem, animatorProps.a.r, 0, degToRads, this._dynamicProperties);\n      }\n\n      if ('rx' in animatorProps.a) {\n        animatorData.a.rx = getProp(this._elem, animatorProps.a.rx, 0, degToRads, this._dynamicProperties);\n      }\n\n      if ('ry' in animatorProps.a) {\n        animatorData.a.ry = getProp(this._elem, animatorProps.a.ry, 0, degToRads, this._dynamicProperties);\n      }\n\n      if ('sk' in animatorProps.a) {\n        animatorData.a.sk = getProp(this._elem, animatorProps.a.sk, 0, degToRads, this._dynamicProperties);\n      }\n\n      if ('sa' in animatorProps.a) {\n        animatorData.a.sa = getProp(this._elem, animatorProps.a.sa, 0, degToRads, this._dynamicProperties);\n      }\n\n      if ('s' in animatorProps.a) {\n        animatorData.a.s = getProp(this._elem, animatorProps.a.s, 1, 0.01, this._dynamicProperties);\n      }\n\n      if ('a' in animatorProps.a) {\n        animatorData.a.a = getProp(this._elem, animatorProps.a.a, 1, 0, this._dynamicProperties);\n      }\n\n      if ('o' in animatorProps.a) {\n        animatorData.a.o = getProp(this._elem, animatorProps.a.o, 0, 0.01, this._dynamicProperties);\n      }\n\n      if ('p' in animatorProps.a) {\n        animatorData.a.p = getProp(this._elem, animatorProps.a.p, 1, 0, this._dynamicProperties);\n      }\n\n      if ('sw' in animatorProps.a) {\n        animatorData.a.sw = getProp(this._elem, animatorProps.a.sw, 0, 0, this._dynamicProperties);\n      }\n\n      if ('sc' in animatorProps.a) {\n        animatorData.a.sc = getProp(this._elem, animatorProps.a.sc, 1, 0, this._dynamicProperties);\n      }\n\n      if ('fc' in animatorProps.a) {\n        animatorData.a.fc = getProp(this._elem, animatorProps.a.fc, 1, 0, this._dynamicProperties);\n      }\n\n      if ('fh' in animatorProps.a) {\n        animatorData.a.fh = getProp(this._elem, animatorProps.a.fh, 0, 0, this._dynamicProperties);\n      }\n\n      if ('fs' in animatorProps.a) {\n        animatorData.a.fs = getProp(this._elem, animatorProps.a.fs, 0, 0.01, this._dynamicProperties);\n      }\n\n      if ('fb' in animatorProps.a) {\n        animatorData.a.fb = getProp(this._elem, animatorProps.a.fb, 0, 0.01, this._dynamicProperties);\n      }\n\n      if ('t' in animatorProps.a) {\n        animatorData.a.t = getProp(this._elem, animatorProps.a.t, 0, 0, this._dynamicProperties);\n      }\n\n      animatorData.s = PropertyFactory.getTextSelectorProp(this._elem, animatorProps.s, this._dynamicProperties);\n      animatorData.s.t = animatorProps.s.t;\n      this._animatorsData[i] = animatorData;\n    }\n\n    if (this._textData.p && 'm' in this._textData.p) {\n      this._pathData = {\n        f: getProp(this._elem, this._textData.p.f, 0, 0, this._dynamicProperties),\n        l: getProp(this._elem, this._textData.p.l, 0, 0, this._dynamicProperties),\n        r: this._textData.p.r,\n        m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\n      };\n      this._hasMaskedPath = true;\n    } else {\n      this._hasMaskedPath = false;\n    }\n\n    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this._dynamicProperties);\n\n    if (this._dynamicProperties.length) {\n      dynamicProperties.push(this);\n    }\n  };\n\n  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\n    this.lettersChangedFlag = lettersChangedFlag;\n\n    if (!this.mdf && !this._firstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m.mdf)) {\n      return;\n    }\n\n    this._firstFrame = false;\n    var alignment = this._moreOptions.alignment.v;\n    var animators = this._animatorsData;\n    var textData = this._textData;\n    var matrixHelper = this.mHelper;\n    var renderType = this._renderType;\n    var renderedLettersCount = this.renderedLetters.length;\n    var data = this.data;\n    var xPos, yPos;\n    var i, len;\n    var letters = documentData.l;\n\n    if (this._hasMaskedPath) {\n      var mask = this._pathData.m;\n\n      if (!this._pathData.n || this._pathData.mdf) {\n        var paths = mask.v;\n\n        if (this._pathData.r) {\n          paths = reversePath(paths);\n        }\n\n        var pathInfo = {\n          tLength: 0,\n          segments: []\n        };\n        len = paths._length - 1;\n        var pathData;\n        var totalLength = 0;\n\n        for (i = 0; i < len; i += 1) {\n          pathData = {\n            s: paths.v[i],\n            e: paths.v[i + 1],\n            to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\n            ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\n          };\n          bez.buildBezierData(pathData);\n          pathInfo.tLength += pathData.bezierData.segmentLength;\n          pathInfo.segments.push(pathData);\n          totalLength += pathData.bezierData.segmentLength;\n        }\n\n        i = len;\n\n        if (mask.v.c) {\n          pathData = {\n            s: paths.v[i],\n            e: paths.v[0],\n            to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\n            ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\n          };\n          bez.buildBezierData(pathData);\n          pathInfo.tLength += pathData.bezierData.segmentLength;\n          pathInfo.segments.push(pathData);\n          totalLength += pathData.bezierData.segmentLength;\n        }\n\n        this._pathData.pi = pathInfo;\n      }\n\n      var pathInfo = this._pathData.pi;\n      var currentLength = this._pathData.f.v,\n          segmentInd = 0,\n          pointInd = 1,\n          currentPoint,\n          prevPoint,\n          points;\n      var segmentLength = 0,\n          flag = true;\n      var segments = pathInfo.segments;\n\n      if (currentLength < 0 && mask.v.c) {\n        if (pathInfo.tLength < Math.abs(currentLength)) {\n          currentLength = -Math.abs(currentLength) % pathInfo.tLength;\n        }\n\n        segmentInd = segments.length - 1;\n        points = segments[segmentInd].bezierData.points;\n        pointInd = points.length - 1;\n\n        while (currentLength < 0) {\n          currentLength += points[pointInd].partialLength;\n          pointInd -= 1;\n\n          if (pointInd < 0) {\n            segmentInd -= 1;\n            points = segments[segmentInd].bezierData.points;\n            pointInd = points.length - 1;\n          }\n        }\n      }\n\n      points = segments[segmentInd].bezierData.points;\n      prevPoint = points[pointInd - 1];\n      currentPoint = points[pointInd];\n      var partialLength = currentPoint.partialLength;\n      var perc, tanAngle;\n    }\n\n    len = letters.length;\n    xPos = 0;\n    yPos = 0;\n    var yOff = documentData.s * 1.2 * .714;\n    var firstLine = true;\n    var animatorProps, animatorSelector;\n    var j, jLen;\n    var letterValue;\n    jLen = animators.length;\n\n    if (lettersChangedFlag) {\n      for (j = 0; j < jLen; j += 1) {\n        animatorSelector = animators[j].s;\n        animatorSelector.getValue(true);\n      }\n    }\n\n    var lastLetter;\n    var mult,\n        ind = -1,\n        offf,\n        xPathPos,\n        yPathPos;\n    var initPathPos = currentLength,\n        initSegmentInd = segmentInd,\n        initPointInd = pointInd,\n        currentLine = -1;\n    var elemOpacity;\n    var sc, sw, fc, k;\n    var lineLength = 0;\n    var letterSw,\n        letterSc,\n        letterFc,\n        letterM = '',\n        letterP = this.defaultPropsArray,\n        letterO;\n\n    for (i = 0; i < len; i += 1) {\n      matrixHelper.reset();\n      elemOpacity = 1;\n\n      if (letters[i].n) {\n        xPos = 0;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        currentLength = initPathPos;\n        firstLine = false;\n        lineLength = 0;\n\n        if (this._hasMaskedPath) {\n          segmentInd = initSegmentInd;\n          pointInd = initPointInd;\n          points = segments[segmentInd].bezierData.points;\n          prevPoint = points[pointInd - 1];\n          currentPoint = points[pointInd];\n          partialLength = currentPoint.partialLength;\n          segmentLength = 0;\n        }\n\n        letterO = letterSw = letterFc = letterM = '';\n        letterP = this.defaultPropsArray;\n      } else {\n        if (this._hasMaskedPath) {\n          if (currentLine !== letters[i].line) {\n            switch (documentData.j) {\n              case 1:\n                currentLength += totalLength - documentData.lineWidths[letters[i].line];\n                break;\n\n              case 2:\n                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;\n                break;\n            }\n\n            currentLine = letters[i].line;\n          }\n\n          if (ind !== letters[i].ind) {\n            if (letters[ind]) {\n              currentLength += letters[ind].extra;\n            }\n\n            currentLength += letters[i].an / 2;\n            ind = letters[i].ind;\n          }\n\n          currentLength += alignment[0] * letters[i].an / 200;\n          var animatorOffset = 0;\n\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n\n            if ('p' in animatorProps) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.p.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.p.v[0] * mult;\n              }\n            }\n\n            if ('a' in animatorProps) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.a.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.a.v[0] * mult;\n              }\n            }\n          }\n\n          flag = true;\n\n          while (flag) {\n            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\n              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\n              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\n              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\n              matrixHelper.translate(-alignment[0] * letters[i].an / 200, -(alignment[1] * yOff / 100));\n              flag = false;\n            } else if (points) {\n              segmentLength += currentPoint.partialLength;\n              pointInd += 1;\n\n              if (pointInd >= points.length) {\n                pointInd = 0;\n                segmentInd += 1;\n\n                if (!segments[segmentInd]) {\n                  if (mask.v.c) {\n                    pointInd = 0;\n                    segmentInd = 0;\n                    points = segments[segmentInd].bezierData.points;\n                  } else {\n                    segmentLength -= currentPoint.partialLength;\n                    points = null;\n                  }\n                } else {\n                  points = segments[segmentInd].bezierData.points;\n                }\n              }\n\n              if (points) {\n                prevPoint = currentPoint;\n                currentPoint = points[pointInd];\n                partialLength = currentPoint.partialLength;\n              }\n            }\n          }\n\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0);\n        } else {\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0); // Grouping alignment\n\n          matrixHelper.translate(-alignment[0] * letters[i].an / 200, -alignment[1] * yOff / 100, 0);\n        }\n\n        lineLength += letters[i].l / 2;\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if ('t' in animatorProps) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                currentLength += animatorProps.t * mult[0];\n              } else {\n                currentLength += animatorProps.t * mult;\n              }\n            } else {\n              if (mult.length) {\n                xPos += animatorProps.t.v * mult[0];\n              } else {\n                xPos += animatorProps.t.v * mult;\n              }\n            }\n          }\n        }\n\n        lineLength += letters[i].l / 2;\n\n        if (documentData.strokeWidthAnim) {\n          sw = documentData.sw || 0;\n        }\n\n        if (documentData.strokeColorAnim) {\n          if (documentData.sc) {\n            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\n          } else {\n            sc = [0, 0, 0];\n          }\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if ('a' in animatorProps) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if ('s' in animatorProps) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);\n            } else {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          animatorSelector = animators[j].s;\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n          if ('sk' in animatorProps) {\n            if (mult.length) {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\n            } else {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\n            }\n          }\n\n          if ('r' in animatorProps) {\n            if (mult.length) {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\n            } else {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult);\n            }\n          }\n\n          if ('ry' in animatorProps) {\n            if (mult.length) {\n              matrixHelper.rotateY(animatorProps.ry.v * mult[1]);\n            } else {\n              matrixHelper.rotateY(animatorProps.ry.v * mult);\n            }\n          }\n\n          if ('rx' in animatorProps) {\n            if (mult.length) {\n              matrixHelper.rotateX(animatorProps.rx.v * mult[0]);\n            } else {\n              matrixHelper.rotateX(animatorProps.rx.v * mult);\n            }\n          }\n\n          if ('o' in animatorProps) {\n            if (mult.length) {\n              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];\n            } else {\n              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;\n            }\n          }\n\n          if (documentData.strokeWidthAnim && 'sw' in animatorProps) {\n            if (mult.length) {\n              sw += animatorProps.sw.v * mult[0];\n            } else {\n              sw += animatorProps.sw.v * mult;\n            }\n          }\n\n          if (documentData.strokeColorAnim && 'sc' in animatorProps) {\n            for (k = 0; k < 3; k += 1) {\n              if (mult.length) {\n                sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k]) * mult[0];\n              } else {\n                sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k]) * mult;\n              }\n            }\n          }\n\n          if (documentData.fillColorAnim && documentData.fc) {\n            if ('fc' in animatorProps) {\n              for (k = 0; k < 3; k += 1) {\n                if (mult.length) {\n                  fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k]) * mult[0];\n                } else {\n                  fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k]) * mult;\n                }\n              }\n            }\n\n            if ('fh' in animatorProps) {\n              if (mult.length) {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);\n              } else {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult);\n              }\n            }\n\n            if ('fs' in animatorProps) {\n              if (mult.length) {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);\n              } else {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);\n              }\n            }\n\n            if ('fb' in animatorProps) {\n              if (mult.length) {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);\n              } else {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);\n              }\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if ('p' in animatorProps) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\n              } else {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n              }\n            } else {\n              if (mult.length) {\n                matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\n              } else {\n                matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n              }\n            }\n          }\n        }\n\n        if (documentData.strokeWidthAnim) {\n          letterSw = sw < 0 ? 0 : sw;\n        }\n\n        if (documentData.strokeColorAnim) {\n          letterSc = 'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')';\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          letterFc = 'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')';\n        }\n\n        if (this._hasMaskedPath) {\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(0, alignment[1] * yOff / 100 + yPos, 0);\n\n          if (textData.p.p) {\n            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\n            var rot = Math.atan(tanAngle) * 180 / Math.PI;\n\n            if (currentPoint.point[0] < prevPoint.point[0]) {\n              rot += 180;\n            }\n\n            matrixHelper.rotate(-rot * Math.PI / 180);\n          }\n\n          matrixHelper.translate(xPathPos, yPathPos, 0);\n          currentLength -= alignment[0] * letters[i].an / 200;\n\n          if (letters[i + 1] && ind !== letters[i + 1].ind) {\n            currentLength += letters[i].an / 2;\n            currentLength += documentData.tr / 1000 * documentData.s;\n          }\n        } else {\n          matrixHelper.translate(xPos, yPos, 0);\n\n          if (documentData.ps) {\n            //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\n            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n          }\n\n          switch (documentData.j) {\n            case 1:\n              matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);\n              break;\n\n            case 2:\n              matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);\n              break;\n          }\n\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(offf, 0, 0);\n          matrixHelper.translate(alignment[0] * letters[i].an / 200, alignment[1] * yOff / 100, 0);\n          xPos += letters[i].l + documentData.tr / 1000 * documentData.s;\n        }\n\n        if (renderType === 'html') {\n          letterM = matrixHelper.toCSS();\n        } else if (renderType === 'svg') {\n          letterM = matrixHelper.to2dCSS();\n        } else {\n          letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];\n        }\n\n        letterO = elemOpacity;\n      }\n\n      if (renderedLettersCount <= i) {\n        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);\n        this.renderedLetters.push(letterValue);\n        renderedLettersCount += 1;\n        this.lettersChangedFlag = true;\n      } else {\n        letterValue = this.renderedLetters[i];\n        this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\n      }\n    }\n  };\n\n  TextAnimatorProperty.prototype.getValue = function () {\n    if (this._elem.globalData.frameId === this._frameId) {\n      return;\n    }\n\n    this._frameId = this._elem.globalData.frameId;\n    var i,\n        len = this._dynamicProperties.length;\n    this.mdf = false;\n\n    for (i = 0; i < len; i += 1) {\n      this._dynamicProperties[i].getValue();\n\n      this.mdf = this._dynamicProperties[i].mdf || this.mdf;\n    }\n  };\n\n  TextAnimatorProperty.prototype.mHelper = new Matrix();\n  TextAnimatorProperty.prototype.defaultPropsArray = [];\n\n  function LetterProps(o, sw, sc, fc, m, p) {\n    this.o = o;\n    this.sw = sw;\n    this.sc = sc;\n    this.fc = fc;\n    this.m = m;\n    this.p = p;\n    this.mdf = {\n      o: true,\n      sw: !!sw,\n      sc: !!sc,\n      fc: !!fc,\n      m: true,\n      p: true\n    };\n  }\n\n  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\n    this.mdf.o = false;\n    this.mdf.sw = false;\n    this.mdf.sc = false;\n    this.mdf.fc = false;\n    this.mdf.m = false;\n    this.mdf.p = false;\n    var updated = false;\n\n    if (this.o !== o) {\n      this.o = o;\n      this.mdf.o = true;\n      updated = true;\n    }\n\n    if (this.sw !== sw) {\n      this.sw = sw;\n      this.mdf.sw = true;\n      updated = true;\n    }\n\n    if (this.sc !== sc) {\n      this.sc = sc;\n      this.mdf.sc = true;\n      updated = true;\n    }\n\n    if (this.fc !== fc) {\n      this.fc = fc;\n      this.mdf.fc = true;\n      updated = true;\n    }\n\n    if (this.m !== m) {\n      this.m = m;\n      this.mdf.m = true;\n      updated = true;\n    }\n\n    if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\n      this.p = p;\n      this.mdf.p = true;\n      updated = true;\n    }\n\n    return updated;\n  };\n\n  function TextProperty(elem, data, dynamicProperties) {\n    this._frameId = -99999;\n    this.pv = '';\n    this.v = '';\n    this.kf = false;\n    this.firstFrame = true;\n    this.mdf = true;\n    this.data = data;\n    this.elem = elem;\n    this.keysIndex = -1;\n    this.currentData = {\n      ascent: 0,\n      boxWidth: [0, 0],\n      f: '',\n      fStyle: '',\n      fWeight: '',\n      fc: '',\n      j: '',\n      justifyOffset: '',\n      l: [],\n      lh: 0,\n      lineWidths: [],\n      ls: '',\n      of: '',\n      s: '',\n      sc: '',\n      sw: 0,\n      t: 0,\n      tr: 0,\n      fillColorAnim: false,\n      strokeColorAnim: false,\n      strokeWidthAnim: false,\n      yOffset: 0,\n      __complete: false\n    };\n\n    if (this.searchProperty()) {\n      dynamicProperties.push(this);\n    } else {\n      this.getValue(true);\n    }\n  }\n\n  TextProperty.prototype.setCurrentData = function (data) {\n    var currentData = this.currentData;\n    currentData.ascent = data.ascent;\n    currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\n    currentData.f = data.f;\n    currentData.fStyle = data.fStyle;\n    currentData.fWeight = data.fWeight;\n    currentData.fc = data.fc;\n    currentData.j = data.j;\n    currentData.justifyOffset = data.justifyOffset;\n    currentData.l = data.l;\n    currentData.lh = data.lh;\n    currentData.lineWidths = data.lineWidths;\n    currentData.ls = data.ls;\n    currentData.of = data.of;\n    currentData.s = data.s;\n    currentData.sc = data.sc;\n    currentData.sw = data.sw;\n    currentData.t = data.t;\n    currentData.tr = data.tr;\n    currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\n    currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\n    currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\n    currentData.yOffset = data.yOffset;\n    currentData.__complete = false;\n  };\n\n  TextProperty.prototype.searchProperty = function () {\n    this.kf = this.data.d.k.length > 1;\n    return this.kf;\n  };\n\n  TextProperty.prototype.getValue = function () {\n    this.mdf = false;\n    var frameId = this.elem.globalData.frameId;\n\n    if ((frameId === this._frameId || !this.kf) && !this.firstFrame) {\n      return;\n    }\n\n    var textKeys = this.data.d.k,\n        textDocumentData;\n    var i = 0,\n        len = textKeys.length;\n\n    while (i <= len - 1) {\n      textDocumentData = textKeys[i].s;\n\n      if (i === len - 1 || textKeys[i + 1].t > frameId) {\n        break;\n      }\n\n      i += 1;\n    }\n\n    if (this.keysIndex !== i) {\n      if (!textDocumentData.__complete) {\n        this.completeTextData(textDocumentData);\n      }\n\n      this.setCurrentData(textDocumentData);\n      this.mdf = this.firstFrame ? false : true;\n      this.pv = this.v = this.currentData.t;\n      this.keysIndex = i;\n    }\n\n    this._frameId = frameId;\n  };\n\n  TextProperty.prototype.completeTextData = function (documentData) {\n    documentData.__complete = true;\n    var fontManager = this.elem.globalData.fontManager;\n    var data = this.data;\n    var letters = [];\n    var i, len;\n    var newLineFlag,\n        index = 0,\n        val;\n    var anchorGrouping = data.m.g;\n    var currentSize = 0,\n        currentPos = 0,\n        currentLine = 0,\n        lineWidths = [];\n    var lineWidth = 0;\n    var maxLineWidth = 0;\n    var j, jLen;\n    var fontData = fontManager.getFontByName(documentData.f);\n    var charData,\n        cLength = 0;\n    var styles = fontData.fStyle.split(' ');\n    var fWeight = 'normal',\n        fStyle = 'normal';\n    len = styles.length;\n    var styleName;\n\n    for (i = 0; i < len; i += 1) {\n      styleName = styles[i].toLowerCase();\n\n      switch (styleName) {\n        case 'italic':\n          fStyle = 'italic';\n          break;\n\n        case 'bold':\n          fWeight = '700';\n          break;\n\n        case 'black':\n          fWeight = '900';\n          break;\n\n        case 'medium':\n          fWeight = '500';\n          break;\n\n        case 'regular':\n        case 'normal':\n          fWeight = '400';\n\n        case 'light':\n        case 'thin':\n          fWeight = '200';\n          break;\n      }\n    }\n\n    documentData.fWeight = fWeight;\n    documentData.fStyle = fStyle;\n    len = documentData.t.length;\n    var trackingOffset = documentData.tr / 1000 * documentData.s;\n\n    if (documentData.sz) {\n      var boxWidth = documentData.sz[0];\n      var lastSpaceIndex = -1;\n\n      for (i = 0; i < len; i += 1) {\n        newLineFlag = false;\n\n        if (documentData.t.charAt(i) === ' ') {\n          lastSpaceIndex = i;\n        } else if (documentData.t.charCodeAt(i) === 13) {\n          lineWidth = 0;\n          newLineFlag = true;\n        }\n\n        if (fontManager.chars) {\n          charData = fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, fontData.fFamily);\n          cLength = newLineFlag ? 0 : charData.w * documentData.s / 100;\n        } else {\n          //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\n          cLength = fontManager.measureText(documentData.t.charAt(i), documentData.f, documentData.s);\n        }\n\n        if (lineWidth + cLength > boxWidth && documentData.t.charAt(i) !== ' ') {\n          if (lastSpaceIndex === -1) {\n            len += 1;\n          } else {\n            i = lastSpaceIndex;\n          }\n\n          documentData.t = documentData.t.substr(0, i) + \"\\r\" + documentData.t.substr(i === lastSpaceIndex ? i + 1 : i);\n          lastSpaceIndex = -1;\n          lineWidth = 0;\n        } else {\n          lineWidth += cLength;\n          lineWidth += trackingOffset;\n        }\n      }\n\n      len = documentData.t.length;\n    }\n\n    lineWidth = -trackingOffset;\n    cLength = 0;\n    var uncollapsedSpaces = 0;\n    var currentChar;\n\n    for (i = 0; i < len; i += 1) {\n      newLineFlag = false;\n      currentChar = documentData.t.charAt(i);\n\n      if (currentChar === ' ') {\n        val = \"\\xA0\";\n      } else if (currentChar.charCodeAt(0) === 13) {\n        uncollapsedSpaces = 0;\n        lineWidths.push(lineWidth);\n        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n        lineWidth = -2 * trackingOffset;\n        val = '';\n        newLineFlag = true;\n        currentLine += 1;\n      } else {\n        val = documentData.t.charAt(i);\n      }\n\n      if (fontManager.chars) {\n        charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\n        cLength = newLineFlag ? 0 : charData.w * documentData.s / 100;\n      } else {\n        //var charWidth = fontManager.measureText(val, documentData.f, documentData.s);\n        //tCanvasHelper.font = documentData.s + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\n        cLength = fontManager.measureText(val, documentData.f, documentData.s);\n      } //\n\n\n      if (currentChar === ' ') {\n        uncollapsedSpaces += cLength + trackingOffset;\n      } else {\n        lineWidth += cLength + trackingOffset + uncollapsedSpaces;\n        uncollapsedSpaces = 0;\n      }\n\n      letters.push({\n        l: cLength,\n        an: cLength,\n        add: currentSize,\n        n: newLineFlag,\n        anIndexes: [],\n        val: val,\n        line: currentLine\n      });\n\n      if (anchorGrouping == 2) {\n        currentSize += cLength;\n\n        if (val == '' || val == \"\\xA0\" || i == len - 1) {\n          if (val == '' || val == \"\\xA0\") {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          index += 1;\n          currentSize = 0;\n        }\n      } else if (anchorGrouping == 3) {\n        currentSize += cLength;\n\n        if (val == '' || i == len - 1) {\n          if (val == '') {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          currentSize = 0;\n          index += 1;\n        }\n      } else {\n        letters[index].ind = index;\n        letters[index].extra = 0;\n        index += 1;\n      }\n    }\n\n    documentData.l = letters;\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n    lineWidths.push(lineWidth);\n\n    if (documentData.sz) {\n      documentData.boxWidth = documentData.sz[0];\n      documentData.justifyOffset = 0;\n    } else {\n      documentData.boxWidth = maxLineWidth;\n\n      switch (documentData.j) {\n        case 1:\n          documentData.justifyOffset = -documentData.boxWidth;\n          break;\n\n        case 2:\n          documentData.justifyOffset = -documentData.boxWidth / 2;\n          break;\n\n        default:\n          documentData.justifyOffset = 0;\n      }\n    }\n\n    documentData.lineWidths = lineWidths;\n    var animators = data.a,\n        animatorData,\n        letterData;\n    jLen = animators.length;\n    var based,\n        ind,\n        indexes = [];\n\n    for (j = 0; j < jLen; j += 1) {\n      animatorData = animators[j];\n\n      if (animatorData.a.sc) {\n        documentData.strokeColorAnim = true;\n      }\n\n      if (animatorData.a.sw) {\n        documentData.strokeWidthAnim = true;\n      }\n\n      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\n        documentData.fillColorAnim = true;\n      }\n\n      ind = 0;\n      based = animatorData.s.b;\n\n      for (i = 0; i < len; i += 1) {\n        letterData = letters[i];\n        letterData.anIndexes[j] = ind;\n\n        if (based == 1 && letterData.val != '' || based == 2 && letterData.val != '' && letterData.val != \"\\xA0\" || based == 3 && (letterData.n || letterData.val == \"\\xA0\" || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {\n          if (animatorData.s.rn === 1) {\n            indexes.push(ind);\n          }\n\n          ind += 1;\n        }\n      }\n\n      data.a[j].s.totalChars = ind;\n      var currentInd = -1,\n          newInd;\n\n      if (animatorData.s.rn === 1) {\n        for (i = 0; i < len; i += 1) {\n          letterData = letters[i];\n\n          if (currentInd != letterData.anIndexes[j]) {\n            currentInd = letterData.anIndexes[j];\n            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];\n          }\n\n          letterData.anIndexes[j] = newInd;\n        }\n      }\n    }\n\n    documentData.yOffset = documentData.lh || documentData.s * 1.2;\n    documentData.ls = documentData.ls || 0;\n    documentData.ascent = fontData.ascent * documentData.s / 100;\n  };\n\n  TextProperty.prototype.updateDocumentData = function (newData, index) {\n    index = index === undefined ? this.keysIndex : index;\n    var dData = this.data.d.k[index].s;\n    dData.__complete = false;\n    dData.t = newData.t;\n    this.keysIndex = -1;\n    this.firstFrame = true;\n    this.getValue();\n  };\n\n  var pooling = function () {\n    function double(arr) {\n      return arr.concat(Array.apply(null, {\n        length: arr.length\n      }));\n    }\n\n    return {\n      double: double\n    };\n  }();\n\n  var point_pool = function () {\n    var ob = {\n      newPoint: newPoint,\n      release: release\n    };\n    var _length = 0;\n    var _maxLength = 8;\n    var pool = Array.apply(null, {\n      length: _maxLength\n    });\n\n    function newPoint() {\n      var point;\n\n      if (_length) {\n        _length -= 1;\n        point = pool[_length];\n      } else {\n        point = [0.1, 0.1];\n      }\n\n      return point;\n    }\n\n    function release(point) {\n      if (_length === _maxLength) {\n        pool = pooling.double(pool);\n        _maxLength = _maxLength * 2;\n      }\n\n      pool[_length] = point;\n      _length += 1;\n    }\n\n    return ob;\n  }();\n\n  var shape_pool = function () {\n    var ob = {\n      clone: clone,\n      newShape: newShape,\n      release: release,\n      releaseArray: releaseArray\n    };\n    var _length = 0;\n    var _maxLength = 4;\n    var pool = Array.apply(null, {\n      length: _maxLength\n    });\n\n    function newShape() {\n      var shapePath;\n\n      if (_length) {\n        _length -= 1;\n        shapePath = pool[_length];\n      } else {\n        shapePath = new ShapePath();\n      }\n\n      return shapePath;\n    }\n\n    function release(shapePath) {\n      if (_length === _maxLength) {\n        pool = pooling.double(pool);\n        _maxLength = _maxLength * 2;\n      }\n\n      var len = shapePath._length,\n          i;\n\n      for (i = 0; i < len; i += 1) {\n        point_pool.release(shapePath.v[i]);\n        point_pool.release(shapePath.i[i]);\n        point_pool.release(shapePath.o[i]);\n        shapePath.v[i] = null;\n        shapePath.i[i] = null;\n        shapePath.o[i] = null;\n      }\n\n      shapePath._length = 0;\n      shapePath.c = false;\n      pool[_length] = shapePath;\n      _length += 1;\n    }\n\n    function releaseArray(shapePathsCollection, length) {\n      while (length--) {\n        release(shapePathsCollection[length]);\n      }\n    }\n\n    function clone(shape, transform) {\n      var i,\n          len = shape._length === undefined ? shape.v.length : shape._length;\n      var cloned = newShape();\n      cloned.setLength(len);\n      cloned.c = shape.c;\n      var pt;\n\n      for (i = 0; i < len; i += 1) {\n        if (transform) {\n          pt = transform.applyToPointArray(shape.v[i][0], shape.v[i][1], 0, 2);\n          cloned.setXYAt(pt[0], pt[1], 'v', i);\n          point_pool.release(pt);\n          pt = transform.applyToPointArray(shape.o[i][0], shape.o[i][1], 0, 2);\n          cloned.setXYAt(pt[0], pt[1], 'o', i);\n          point_pool.release(pt);\n          pt = transform.applyToPointArray(shape.i[i][0], shape.i[i][1], 0, 2);\n          cloned.setXYAt(pt[0], pt[1], 'i', i);\n          point_pool.release(pt);\n        } else {\n          cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);\n        }\n      }\n\n      return cloned;\n    }\n\n    return ob;\n  }();\n\n  var shapeCollection_pool = function () {\n    var ob = {\n      newShapeCollection: newShapeCollection,\n      release: release,\n      clone: clone\n    };\n    var _length = 0;\n    var _maxLength = 4;\n    var pool = Array.apply(null, {\n      length: _maxLength\n    });\n    var cont = 0;\n\n    function newShapeCollection() {\n      var shapeCollection;\n\n      if (_length) {\n        _length -= 1;\n        shapeCollection = pool[_length];\n      } else {\n        shapeCollection = new ShapeCollection();\n      }\n\n      return shapeCollection;\n    }\n\n    function release(shapeCollection) {\n      var i,\n          len = shapeCollection._length;\n\n      for (i = 0; i < len; i += 1) {\n        shape_pool.release(shapeCollection.shapes[i]);\n      }\n\n      shapeCollection._length = 0;\n\n      if (_length === _maxLength) {\n        pool = pooling.double(pool);\n        _maxLength = _maxLength * 2;\n      }\n\n      pool[_length] = shapeCollection;\n      _length += 1;\n    }\n\n    function clone(shapeCollection, originCollection) {\n      release(shapeCollection);\n\n      if (_length === _maxLength) {\n        pool = pooling.double(pool);\n        _maxLength = _maxLength * 2;\n      }\n\n      pool[_length] = shapeCollection;\n      _length += 1;\n    }\n\n    return ob;\n  }();\n\n  function BaseRenderer() {}\n\n  BaseRenderer.prototype.checkLayers = function (num) {\n    var i,\n        len = this.layers.length,\n        data;\n    this.completeLayers = true;\n\n    for (i = len - 1; i >= 0; i--) {\n      if (!this.elements[i]) {\n        data = this.layers[i];\n\n        if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {\n          this.buildItem(i);\n        }\n      }\n\n      this.completeLayers = this.elements[i] ? this.completeLayers : false;\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.createItem = function (layer) {\n    switch (layer.ty) {\n      case 2:\n        return this.createImage(layer);\n\n      case 0:\n        return this.createComp(layer);\n\n      case 1:\n        return this.createSolid(layer);\n\n      case 4:\n        return this.createShape(layer);\n\n      case 5:\n        return this.createText(layer);\n\n      case 13:\n        return this.createCamera(layer);\n\n      case 99:\n        return null;\n    }\n\n    return this.createBase(layer);\n  };\n\n  BaseRenderer.prototype.createCamera = function () {\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\n  };\n\n  BaseRenderer.prototype.buildAllItems = function () {\n    var i,\n        len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.buildItem(i);\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.includeLayers = function (newLayers) {\n    this.completeLayers = false;\n    var i,\n        len = newLayers.length;\n    var j,\n        jLen = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      j = 0;\n\n      while (j < jLen) {\n        if (this.layers[j].id == newLayers[i].id) {\n          this.layers[j] = newLayers[i];\n          break;\n        }\n\n        j += 1;\n      }\n    }\n  };\n\n  BaseRenderer.prototype.setProjectInterface = function (pInterface) {\n    this.globalData.projectInterface = pInterface;\n  };\n\n  BaseRenderer.prototype.initItems = function () {\n    if (!this.globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n  };\n\n  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\n    hierarchy = hierarchy || [];\n    var elements = this.elements;\n    var layers = this.layers;\n    var i = 0,\n        len = layers.length;\n\n    while (i < len) {\n      if (layers[i].ind == parentName) {\n        if (!elements[i] || elements[i] === true) {\n          this.buildItem(i);\n          this.addPendingElement(element);\n        } else if (layers[i].parent !== undefined) {\n          hierarchy.push(elements[i]);\n          elements[i]._isParent = true;\n          this.buildElementParenting(element, layers[i].parent, hierarchy);\n        } else {\n          hierarchy.push(elements[i]);\n          elements[i]._isParent = true;\n          element.setHierarchy(hierarchy);\n        }\n      }\n\n      i += 1;\n    }\n  };\n\n  BaseRenderer.prototype.addPendingElement = function (element) {\n    this.pendingElements.push(element);\n  };\n\n  function SVGRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1\n    };\n    this.renderConfig = {\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      progressiveLoad: config && config.progressiveLoad || false,\n      hideOnTransparent: config && config.hideOnTransparent === false ? false : true,\n      viewBoxOnly: config && config.viewBoxOnly || false,\n      className: config && config.className || ''\n    };\n    this.globalData.renderConfig = this.renderConfig;\n    this.elements = [];\n    this.pendingElements = [];\n    this.destroyed = false;\n  }\n\n  extendPrototype(BaseRenderer, SVGRenderer);\n\n  SVGRenderer.prototype.createBase = function (data) {\n    return new SVGBaseElement(data, this.layerElement, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createShape = function (data) {\n    return new IShapeElement(data, this.layerElement, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createText = function (data) {\n    return new SVGTextElement(data, this.layerElement, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createImage = function (data) {\n    return new IImageElement(data, this.layerElement, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createComp = function (data) {\n    return new ICompElement(data, this.layerElement, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createSolid = function (data) {\n    return new ISolidElement(data, this.layerElement, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.configAnimation = function (animData) {\n    this.layerElement = document.createElementNS(svgNS, 'svg');\n    this.layerElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    this.layerElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h);\n\n    if (!this.renderConfig.viewBoxOnly) {\n      this.layerElement.setAttribute('width', animData.w);\n      this.layerElement.setAttribute('height', animData.h);\n      this.layerElement.style.width = '100%';\n      this.layerElement.style.height = '100%';\n    }\n\n    if (this.renderConfig.className) {\n      this.layerElement.setAttribute('class', this.renderConfig.className);\n    }\n\n    this.layerElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio); //this.layerElement.style.transform = 'translate3d(0,0,0)';\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\n\n    this.animationItem.wrapper.appendChild(this.layerElement); //Mask animation\n\n    var defs = document.createElementNS(svgNS, 'defs');\n    this.globalData.defs = defs;\n    this.layerElement.appendChild(defs);\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.globalData.frameId = 0;\n    this.globalData.nm = animData.nm;\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h\n    };\n    this.data = animData;\n    this.globalData.frameRate = animData.fr;\n    var maskElement = document.createElementNS(svgNS, 'clipPath');\n    var rect = document.createElementNS(svgNS, 'rect');\n    rect.setAttribute('width', animData.w);\n    rect.setAttribute('height', animData.h);\n    rect.setAttribute('x', 0);\n    rect.setAttribute('y', 0);\n    var maskId = 'animationMask_' + randomString(10);\n    maskElement.setAttribute('id', maskId);\n    maskElement.appendChild(rect);\n    var maskedElement = document.createElementNS(svgNS, 'g');\n    maskedElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\" + maskId + \")\");\n    this.layerElement.appendChild(maskedElement);\n    defs.appendChild(maskElement);\n    this.layerElement = maskedElement;\n    this.layers = animData.layers;\n    this.globalData.fontManager = new FontManager();\n    this.globalData.fontManager.addChars(animData.chars);\n    this.globalData.fontManager.addFonts(animData.fonts, defs);\n    this.elements = Array.apply(null, {\n      length: animData.layers.length\n    });\n  };\n\n  SVGRenderer.prototype.destroy = function () {\n    this.animationItem.wrapper.innerHTML = '';\n    this.layerElement = null;\n    this.globalData.defs = null;\n    var i,\n        len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i++) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  SVGRenderer.prototype.updateContainerSize = function () {};\n\n  SVGRenderer.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty == 99) {\n      return;\n    }\n\n    elements[pos] = true;\n    var element = this.createItem(this.layers[pos]);\n    elements[pos] = element;\n\n    if (expressionsPlugin) {\n      if (this.layers[pos].ty === 0) {\n        this.globalData.projectInterface.registerComposition(element);\n      }\n\n      element.initExpressions();\n    }\n\n    this.appendElementInPos(element, pos);\n\n    if (this.layers[pos].tt) {\n      if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\n        this.buildItem(pos - 1);\n        this.addPendingElement(element);\n      } else {\n        element.setMatte(elements[pos - 1].layerId);\n      }\n    }\n  };\n\n  SVGRenderer.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n\n      if (element.data.tt) {\n        var i = 0,\n            len = this.elements.length;\n\n        while (i < len) {\n          if (this.elements[i] === element) {\n            element.setMatte(this.elements[i - 1].layerId);\n            break;\n          }\n\n          i += 1;\n        }\n      }\n    }\n  };\n\n  SVGRenderer.prototype.renderFrame = function (num) {\n    if (this.renderedFrame == num || this.destroyed) {\n      return;\n    }\n\n    if (num === null) {\n      num = this.renderedFrame;\n    } else {\n      this.renderedFrame = num;\n    } //clearPoints();\n\n    /*console.log('-------');\r\n    console.log('FRAME ',num);*/\n\n\n    this.globalData.frameNum = num;\n    this.globalData.frameId += 1;\n    this.globalData.projectInterface.currentFrame = num;\n    var i,\n        len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = len - 1; i >= 0; i--) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    for (i = len - 1; i >= 0; i--) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n\n  SVGRenderer.prototype.appendElementInPos = function (element, pos) {\n    var newElement = element.getBaseElement();\n\n    if (!newElement) {\n      return;\n    }\n\n    var i = 0;\n    var nextElement;\n\n    while (i < pos) {\n      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\n        nextElement = this.elements[i].getBaseElement();\n      }\n\n      i += 1;\n    }\n\n    if (nextElement) {\n      this.layerElement.insertBefore(newElement, nextElement);\n    } else {\n      this.layerElement.appendChild(newElement);\n    }\n  };\n\n  SVGRenderer.prototype.hide = function () {\n    this.layerElement.style.display = 'none';\n  };\n\n  SVGRenderer.prototype.show = function () {\n    this.layerElement.style.display = 'block';\n  };\n\n  SVGRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i,\n        len = assets.length;\n    var floatingContainer = document.createElementNS(svgNS, 'g');\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i], floatingContainer, this.globalData.comp, null);\n        comp.initExpressions(); //comp.compInterface = CompExpressionInterface(comp);\n        //Expressions.addLayersInterface(comp.elements, this.globalData.projectInterface);\n\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  function MaskElement(data, element, globalData) {\n    this.dynamicProperties = [];\n    this.data = data;\n    this.element = element;\n    this.globalData = globalData;\n    this.storedData = [];\n    this.masksProperties = this.data.masksProperties;\n    this.viewData = Array.apply(null, {\n      length: this.masksProperties.length\n    });\n    this.maskElement = null;\n    this.firstFrame = true;\n    var defs = this.globalData.defs;\n    var i,\n        len = this.masksProperties.length;\n    var path,\n        properties = this.masksProperties;\n    var count = 0;\n    var currentMasks = [];\n    var j, jLen;\n    var layerId = randomString(10);\n    var rect, expansor, feMorph, x;\n    var maskType = 'clipPath',\n        maskRef = 'clip-path';\n\n    for (i = 0; i < len; i++) {\n      if (properties[i].mode !== 'a' && properties[i].mode !== 'n' || properties[i].inv || properties[i].o.k !== 100) {\n        maskType = 'mask';\n        maskRef = 'mask';\n      }\n\n      if ((properties[i].mode == 's' || properties[i].mode == 'i') && count == 0) {\n        rect = document.createElementNS(svgNS, 'rect');\n        rect.setAttribute('fill', '#ffffff');\n        rect.setAttribute('width', this.element.comp.data.w);\n        rect.setAttribute('height', this.element.comp.data.h);\n        currentMasks.push(rect);\n      } else {\n        rect = null;\n      }\n\n      path = document.createElementNS(svgNS, 'path');\n\n      if (properties[i].mode == 'n') {\n        this.viewData[i] = {\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.dynamicProperties),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3, this.dynamicProperties, null),\n          elem: path\n        };\n        defs.appendChild(path);\n        continue;\n      }\n\n      count += 1;\n\n      if (properties[i].mode == 's') {\n        path.setAttribute('fill', '#000000');\n      } else {\n        path.setAttribute('fill', '#ffffff');\n      }\n\n      path.setAttribute('clip-rule', 'nonzero');\n\n      if (properties[i].x.k !== 0) {\n        maskType = 'mask';\n        maskRef = 'mask';\n        x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.dynamicProperties);\n        var filterID = 'fi_' + randomString(10);\n        expansor = document.createElementNS(svgNS, 'filter');\n        expansor.setAttribute('id', filterID);\n        feMorph = document.createElementNS(svgNS, 'feMorphology');\n        feMorph.setAttribute('operator', 'dilate');\n        feMorph.setAttribute('in', 'SourceGraphic');\n        feMorph.setAttribute('radius', '0');\n        expansor.appendChild(feMorph);\n        defs.appendChild(expansor);\n\n        if (properties[i].mode == 's') {\n          path.setAttribute('stroke', '#000000');\n        } else {\n          path.setAttribute('stroke', '#ffffff');\n        }\n      } else {\n        feMorph = null;\n        x = null;\n      }\n\n      this.storedData[i] = {\n        elem: path,\n        x: x,\n        expan: feMorph,\n        lastPath: '',\n        lastOperator: '',\n        filterId: filterID,\n        lastRadius: 0\n      };\n\n      if (properties[i].mode == 'i') {\n        jLen = currentMasks.length;\n        var g = document.createElementNS(svgNS, 'g');\n\n        for (j = 0; j < jLen; j += 1) {\n          g.appendChild(currentMasks[j]);\n        }\n\n        var mask = document.createElementNS(svgNS, 'mask');\n        mask.setAttribute('mask-type', 'alpha');\n        mask.setAttribute('id', layerId + '_' + count);\n        mask.appendChild(path);\n        defs.appendChild(mask);\n        g.setAttribute('mask', 'url(' + locationHref + '#' + layerId + '_' + count + ')');\n        currentMasks.length = 0;\n        currentMasks.push(g);\n      } else {\n        currentMasks.push(path);\n      }\n\n      if (properties[i].inv && !this.solidPath) {\n        this.solidPath = this.createLayerSolidPath();\n      }\n\n      this.viewData[i] = {\n        elem: path,\n        lastPath: '',\n        op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.dynamicProperties),\n        prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3, this.dynamicProperties, null)\n      };\n\n      if (rect) {\n        this.viewData[i].invRect = rect;\n      }\n\n      if (!this.viewData[i].prop.k) {\n        this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);\n      }\n    }\n\n    this.maskElement = document.createElementNS(svgNS, maskType);\n    len = currentMasks.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.maskElement.appendChild(currentMasks[i]);\n    }\n\n    this.maskElement.setAttribute('id', layerId);\n\n    if (count > 0) {\n      this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\n    }\n\n    defs.appendChild(this.maskElement);\n  }\n\n  ;\n\n  MaskElement.prototype.getMaskProperty = function (pos) {\n    return this.viewData[pos].prop;\n  };\n\n  MaskElement.prototype.prepareFrame = function () {\n    var i,\n        len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n  };\n\n  MaskElement.prototype.renderFrame = function (finalMat) {\n    var i,\n        len = this.masksProperties.length;\n\n    for (i = 0; i < len; i++) {\n      if (this.viewData[i].prop.mdf || this.firstFrame) {\n        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);\n      }\n\n      if (this.viewData[i].op.mdf || this.firstFrame) {\n        this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v);\n      }\n\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.viewData[i].invRect && (this.element.finalTransform.mProp.mdf || this.firstFrame)) {\n          this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\n          this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\n        }\n\n        if (this.storedData[i].x && (this.storedData[i].x.mdf || this.firstFrame)) {\n          var feMorph = this.storedData[i].expan;\n\n          if (this.storedData[i].x.v < 0) {\n            if (this.storedData[i].lastOperator !== 'erode') {\n              this.storedData[i].lastOperator = 'erode';\n              this.storedData[i].elem.setAttribute('filter', 'url(' + locationHref + '#' + this.storedData[i].filterId + ')');\n            }\n\n            feMorph.setAttribute('radius', -this.storedData[i].x.v);\n          } else {\n            if (this.storedData[i].lastOperator !== 'dilate') {\n              this.storedData[i].lastOperator = 'dilate';\n              this.storedData[i].elem.setAttribute('filter', null);\n            }\n\n            this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2);\n          }\n        }\n      }\n    }\n\n    this.firstFrame = false;\n  };\n\n  MaskElement.prototype.getMaskelement = function () {\n    return this.maskElement;\n  };\n\n  MaskElement.prototype.createLayerSolidPath = function () {\n    var path = 'M0,0 ';\n    path += ' h' + this.globalData.compSize.w;\n    path += ' v' + this.globalData.compSize.h;\n    path += ' h-' + this.globalData.compSize.w;\n    path += ' v-' + this.globalData.compSize.h + ' ';\n    return path;\n  };\n\n  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\n    var pathString = \" M\" + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\n    var i, len;\n    len = pathNodes._length;\n\n    for (i = 1; i < len; i += 1) {\n      //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\n      pathString += \" C\" + bm_rnd(pathNodes.o[i - 1][0]) + ',' + bm_rnd(pathNodes.o[i - 1][1]) + \" \" + bm_rnd(pathNodes.i[i][0]) + ',' + bm_rnd(pathNodes.i[i][1]) + \" \" + bm_rnd(pathNodes.v[i][0]) + ',' + bm_rnd(pathNodes.v[i][1]);\n    } //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\n\n\n    if (pathNodes.c && len > 1) {\n      pathString += \" C\" + bm_rnd(pathNodes.o[i - 1][0]) + ',' + bm_rnd(pathNodes.o[i - 1][1]) + \" \" + bm_rnd(pathNodes.i[0][0]) + ',' + bm_rnd(pathNodes.i[0][1]) + \" \" + bm_rnd(pathNodes.v[0][0]) + ',' + bm_rnd(pathNodes.v[0][1]);\n    } //pathNodes.__renderedString = pathString;\n\n\n    if (viewData.lastPath !== pathString) {\n      if (viewData.elem) {\n        if (!pathNodes.c) {\n          viewData.elem.setAttribute('d', '');\n        } else if (pathData.inv) {\n          viewData.elem.setAttribute('d', this.solidPath + pathString);\n        } else {\n          viewData.elem.setAttribute('d', pathString);\n        }\n      }\n\n      viewData.lastPath = pathString;\n    }\n  };\n\n  MaskElement.prototype.destroy = function () {\n    this.element = null;\n    this.globalData = null;\n    this.maskElement = null;\n    this.data = null;\n    this.masksProperties = null;\n  };\n\n  function BaseElement() {}\n\n  ;\n\n  BaseElement.prototype.checkMasks = function () {\n    if (!this.data.hasMask) {\n      return false;\n    }\n\n    var i = 0,\n        len = this.data.masksProperties.length;\n\n    while (i < len) {\n      if (this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  };\n\n  BaseElement.prototype.checkParenting = function () {\n    if (this.data.parent !== undefined) {\n      this.comp.buildElementParenting(this, this.data.parent);\n    }\n  };\n\n  BaseElement.prototype.prepareFrame = function (num) {\n    if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\n      if (this.isVisible !== true) {\n        this.elemMdf = true;\n        this.globalData.mdf = true;\n        this.isVisible = true;\n        this.firstFrame = true;\n\n        if (this.data.hasMask) {\n          this.maskManager.firstFrame = true;\n        }\n      }\n    } else {\n      if (this.isVisible !== false) {\n        this.elemMdf = true;\n        this.globalData.mdf = true;\n        this.isVisible = false;\n      }\n    }\n\n    var i,\n        len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.isVisible || this._isParent && this.dynamicProperties[i].type === 'transform') {\n        this.dynamicProperties[i].getValue();\n\n        if (this.dynamicProperties[i].mdf) {\n          this.elemMdf = true;\n          this.globalData.mdf = true;\n        }\n      }\n    }\n\n    if (this.data.hasMask && this.isVisible) {\n      this.maskManager.prepareFrame(num * this.data.sr);\n    }\n    /* TODO check this\r\n    if(this.data.sy){\r\n        if(this.data.sy[0].renderedData[num]){\r\n            if(this.data.sy[0].renderedData[num].c){\r\n                this.feFlood.setAttribute('flood-color','rgb('+Math.round(this.data.sy[0].renderedData[num].c[0])+','+Math.round(this.data.sy[0].renderedData[num].c[1])+','+Math.round(this.data.sy[0].renderedData[num].c[2])+')');\r\n            }\r\n            if(this.data.sy[0].renderedData[num].s){\r\n                this.feMorph.setAttribute('radius',this.data.sy[0].renderedData[num].s);\r\n            }\r\n        }\r\n    }\r\n    */\n\n\n    this.currentFrameNum = num * this.data.sr;\n    return this.isVisible;\n  };\n\n  BaseElement.prototype.globalToLocal = function (pt) {\n    var transforms = [];\n    transforms.push(this.finalTransform);\n    var flag = true;\n    var comp = this.comp;\n\n    while (flag) {\n      if (comp.finalTransform) {\n        if (comp.data.hasMask) {\n          transforms.splice(0, 0, comp.finalTransform);\n        }\n\n        comp = comp.comp;\n      } else {\n        flag = false;\n      }\n    }\n\n    var i,\n        len = transforms.length,\n        ptNew;\n\n    for (i = 0; i < len; i += 1) {\n      ptNew = transforms[i].mat.applyToPointArray(0, 0, 0); //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\n\n      pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\n    }\n\n    return pt;\n  };\n\n  BaseElement.prototype.initExpressions = function () {\n    this.layerInterface = LayerExpressionInterface(this); //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\n    //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\n\n    if (this.data.hasMask) {\n      this.layerInterface.registerMaskInterface(this.maskManager);\n    }\n\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);\n    this.layerInterface.registerEffectsInterface(effectsInterface);\n\n    if (this.data.ty === 0 || this.data.xt) {\n      this.compInterface = CompExpressionInterface(this);\n    } else if (this.data.ty === 4) {\n      this.layerInterface.shapeInterface = ShapeExpressionInterface.createShapeInterface(this.shapesData, this.itemsData, this.layerInterface);\n    } else if (this.data.ty === 5) {\n      this.layerInterface.textInterface = TextExpressionInterface(this);\n    }\n  };\n\n  BaseElement.prototype.setBlendMode = function () {\n    var blendModeValue = '';\n\n    switch (this.data.bm) {\n      case 1:\n        blendModeValue = 'multiply';\n        break;\n\n      case 2:\n        blendModeValue = 'screen';\n        break;\n\n      case 3:\n        blendModeValue = 'overlay';\n        break;\n\n      case 4:\n        blendModeValue = 'darken';\n        break;\n\n      case 5:\n        blendModeValue = 'lighten';\n        break;\n\n      case 6:\n        blendModeValue = 'color-dodge';\n        break;\n\n      case 7:\n        blendModeValue = 'color-burn';\n        break;\n\n      case 8:\n        blendModeValue = 'hard-light';\n        break;\n\n      case 9:\n        blendModeValue = 'soft-light';\n        break;\n\n      case 10:\n        blendModeValue = 'difference';\n        break;\n\n      case 11:\n        blendModeValue = 'exclusion';\n        break;\n\n      case 12:\n        blendModeValue = 'hue';\n        break;\n\n      case 13:\n        blendModeValue = 'saturation';\n        break;\n\n      case 14:\n        blendModeValue = 'color';\n        break;\n\n      case 15:\n        blendModeValue = 'luminosity';\n        break;\n    }\n\n    var elem = this.baseElement || this.layerElement;\n    elem.style['mix-blend-mode'] = blendModeValue;\n  };\n\n  BaseElement.prototype.init = function () {\n    if (!this.data.sr) {\n      this.data.sr = 1;\n    }\n\n    this.dynamicProperties = this.dynamicProperties || [];\n\n    if (this.data.ef) {\n      this.effects = new EffectsManager(this.data, this, this.dynamicProperties); //this.effect = this.effectsManager.bind(this.effectsManager);\n    } //this.elemInterface = buildLayerExpressionInterface(this);\n\n\n    this.hidden = false;\n    this.firstFrame = true;\n    this.isVisible = false;\n    this._isParent = false;\n    this.currentFrameNum = -99999;\n    this.lastNum = -99999;\n\n    if (this.data.ks) {\n      this.finalTransform = {\n        mProp: PropertyFactory.getProp(this, this.data.ks, 2, null, this.dynamicProperties),\n        matMdf: false,\n        opMdf: false,\n        mat: new Matrix(),\n        opacity: 1\n      };\n\n      if (this.data.ao) {\n        this.finalTransform.mProp.autoOriented = true;\n      }\n\n      this.finalTransform.op = this.finalTransform.mProp.o;\n      this.transform = this.finalTransform.mProp;\n\n      if (this.data.ty !== 11) {\n        this.createElements();\n      }\n\n      if (this.data.hasMask) {\n        this.addMasks(this.data);\n      }\n    }\n\n    this.elemMdf = false;\n  };\n\n  BaseElement.prototype.getType = function () {\n    return this.type;\n  };\n\n  BaseElement.prototype.resetHierarchy = function () {\n    if (!this.hierarchy) {\n      this.hierarchy = [];\n    } else {\n      this.hierarchy.length = 0;\n    }\n  };\n\n  BaseElement.prototype.getHierarchy = function () {\n    if (!this.hierarchy) {\n      this.hierarchy = [];\n    }\n\n    return this.hierarchy;\n  };\n\n  BaseElement.prototype.setHierarchy = function (hierarchy) {\n    this.hierarchy = hierarchy;\n  };\n\n  BaseElement.prototype.getLayerSize = function () {\n    if (this.data.ty === 5) {\n      return {\n        w: this.data.textData.width,\n        h: this.data.textData.height\n      };\n    } else {\n      return {\n        w: this.data.width,\n        h: this.data.height\n      };\n    }\n  };\n\n  BaseElement.prototype.hide = function () {};\n\n  BaseElement.prototype.sourceRectAtTime = function () {\n    return {\n      top: 0,\n      left: 0,\n      width: 100,\n      height: 100\n    };\n  };\n\n  BaseElement.prototype.mHelper = new Matrix();\n\n  function SVGBaseElement(data, parentContainer, globalData, comp, placeholder) {\n    this.globalData = globalData;\n    this.comp = comp;\n    this.data = data;\n    this.matteElement = null;\n    this.transformedElement = null;\n    this.isTransparent = false;\n    this.parentContainer = parentContainer;\n    this.layerId = placeholder ? placeholder.layerId : 'ly_' + randomString(10);\n    this.placeholder = placeholder;\n    this._sizeChanged = false;\n    this.init();\n  }\n\n  ;\n  createElement(BaseElement, SVGBaseElement);\n\n  SVGBaseElement.prototype.createElements = function () {\n    this.layerElement = document.createElementNS(svgNS, 'g');\n    this.transformedElement = this.layerElement;\n\n    if (this.data.hasMask) {\n      this.maskedElement = this.layerElement;\n    }\n\n    var layerElementParent = null;\n\n    if (this.data.td) {\n      if (this.data.td == 3 || this.data.td == 1) {\n        var masker = document.createElementNS(svgNS, 'mask');\n        masker.setAttribute('id', this.layerId);\n        masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\n        masker.appendChild(this.layerElement);\n        layerElementParent = masker;\n        this.globalData.defs.appendChild(masker); ////// This is only for IE and Edge when mask if of type alpha\n\n        if (!featureSupport.maskType && this.data.td == 1) {\n          masker.setAttribute('mask-type', 'luminance');\n          var filId = randomString(10);\n          var fil = filtersFactory.createFilter(filId);\n          this.globalData.defs.appendChild(fil);\n          fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n          var gg = document.createElementNS(svgNS, 'g');\n          gg.appendChild(this.layerElement);\n          layerElementParent = gg;\n          masker.appendChild(gg);\n          gg.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\n        }\n      } else if (this.data.td == 2) {\n        var maskGroup = document.createElementNS(svgNS, 'mask');\n        maskGroup.setAttribute('id', this.layerId);\n        maskGroup.setAttribute('mask-type', 'alpha');\n        var maskGrouper = document.createElementNS(svgNS, 'g');\n        maskGroup.appendChild(maskGrouper);\n        var filId = randomString(10);\n        var fil = filtersFactory.createFilter(filId); ////\n\n        var feColorMatrix = document.createElementNS(svgNS, 'feColorMatrix');\n        feColorMatrix.setAttribute('type', 'matrix');\n        feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n        feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\n        fil.appendChild(feColorMatrix); ////\n\n        /*var feCTr = document.createElementNS(svgNS,'feComponentTransfer');\r\n        feCTr.setAttribute('in','SourceGraphic');\r\n        fil.appendChild(feCTr);\r\n        var feFunc = document.createElementNS(svgNS,'feFuncA');\r\n        feFunc.setAttribute('type','table');\r\n        feFunc.setAttribute('tableValues','1.0 0.0');\r\n        feCTr.appendChild(feFunc);*/\n\n        this.globalData.defs.appendChild(fil);\n        var alphaRect = document.createElementNS(svgNS, 'rect');\n        alphaRect.setAttribute('width', this.comp.data.w);\n        alphaRect.setAttribute('height', this.comp.data.h);\n        alphaRect.setAttribute('x', '0');\n        alphaRect.setAttribute('y', '0');\n        alphaRect.setAttribute('fill', '#ffffff');\n        alphaRect.setAttribute('opacity', '0');\n        maskGrouper.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\n        maskGrouper.appendChild(alphaRect);\n        maskGrouper.appendChild(this.layerElement);\n        layerElementParent = maskGrouper;\n\n        if (!featureSupport.maskType) {\n          maskGroup.setAttribute('mask-type', 'luminance');\n          fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n          var gg = document.createElementNS(svgNS, 'g');\n          maskGrouper.appendChild(alphaRect);\n          gg.appendChild(this.layerElement);\n          layerElementParent = gg;\n          maskGrouper.appendChild(gg);\n        }\n\n        this.globalData.defs.appendChild(maskGroup);\n      }\n    } else if (this.data.hasMask || this.data.tt) {\n      if (this.data.tt) {\n        this.matteElement = document.createElementNS(svgNS, 'g');\n        this.matteElement.appendChild(this.layerElement);\n        layerElementParent = this.matteElement;\n        this.baseElement = this.matteElement;\n      } else {\n        this.baseElement = this.layerElement;\n      }\n    } else {\n      this.baseElement = this.layerElement;\n    }\n\n    if ((this.data.ln || this.data.cl) && (this.data.ty === 4 || this.data.ty === 0)) {\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln);\n      }\n\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl);\n      }\n    }\n\n    if (this.data.ty === 0) {\n      var cp = document.createElementNS(svgNS, 'clipPath');\n      var pt = document.createElementNS(svgNS, 'path');\n      pt.setAttribute('d', 'M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\n      var clipId = 'cp_' + randomString(8);\n      cp.setAttribute('id', clipId);\n      cp.appendChild(pt);\n      this.globalData.defs.appendChild(cp);\n\n      if (this.checkMasks()) {\n        var cpGroup = document.createElementNS(svgNS, 'g');\n        cpGroup.setAttribute('clip-path', 'url(' + locationHref + '#' + clipId + ')');\n        cpGroup.appendChild(this.layerElement);\n        this.transformedElement = cpGroup;\n\n        if (layerElementParent) {\n          layerElementParent.appendChild(this.transformedElement);\n        } else {\n          this.baseElement = this.transformedElement;\n        }\n      } else {\n        this.layerElement.setAttribute('clip-path', 'url(' + locationHref + '#' + clipId + ')');\n      }\n    }\n\n    if (this.data.bm !== 0) {\n      this.setBlendMode();\n    }\n\n    if (this.layerElement !== this.parentContainer) {\n      this.placeholder = null;\n    }\n    /* Todo performance killer\r\n    if(this.data.sy){\r\n        var filterID = 'st_'+randomString(10);\r\n        var c = this.data.sy[0].c.k;\r\n        var r = this.data.sy[0].s.k;\r\n        var expansor = document.createElementNS(svgNS,'filter');\r\n        expansor.setAttribute('id',filterID);\r\n        var feFlood = document.createElementNS(svgNS,'feFlood');\r\n        this.feFlood = feFlood;\r\n        if(!c[0].e){\r\n            feFlood.setAttribute('flood-color','rgb('+c[0]+','+c[1]+','+c[2]+')');\r\n        }\r\n        feFlood.setAttribute('result','base');\r\n        expansor.appendChild(feFlood);\r\n        var feMorph = document.createElementNS(svgNS,'feMorphology');\r\n        feMorph.setAttribute('operator','dilate');\r\n        feMorph.setAttribute('in','SourceGraphic');\r\n        feMorph.setAttribute('result','bigger');\r\n        this.feMorph = feMorph;\r\n        if(!r.length){\r\n            feMorph.setAttribute('radius',this.data.sy[0].s.k);\r\n        }\r\n        expansor.appendChild(feMorph);\r\n        var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n        feColorMatrix.setAttribute('result','mask');\r\n        feColorMatrix.setAttribute('in','bigger');\r\n        feColorMatrix.setAttribute('type','matrix');\r\n        feColorMatrix.setAttribute('values','0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0');\r\n        expansor.appendChild(feColorMatrix);\r\n        var feComposite = document.createElementNS(svgNS,'feComposite');\r\n        feComposite.setAttribute('result','drop');\r\n        feComposite.setAttribute('in','base');\r\n        feComposite.setAttribute('in2','mask');\r\n        feComposite.setAttribute('operator','in');\r\n        expansor.appendChild(feComposite);\r\n        var feBlend = document.createElementNS(svgNS,'feBlend');\r\n        feBlend.setAttribute('in','SourceGraphic');\r\n        feBlend.setAttribute('in2','drop');\r\n        feBlend.setAttribute('mode','normal');\r\n        expansor.appendChild(feBlend);\r\n        this.globalData.defs.appendChild(expansor);\r\n        var cont = document.createElementNS(svgNS,'g');\r\n        if(this.layerElement === this.parentContainer){\r\n            this.layerElement = cont;\r\n        }else{\r\n            cont.appendChild(this.layerElement);\r\n        }\r\n        cont.setAttribute('filter','url(#'+filterID+')');\r\n        if(this.data.td){\r\n            cont.setAttribute('data-td',this.data.td);\r\n        }\r\n        if(this.data.td == 3){\r\n            this.globalData.defs.appendChild(cont);\r\n        }else if(this.data.td == 2){\r\n            maskGrouper.appendChild(cont);\r\n        }else if(this.data.td == 1){\r\n            masker.appendChild(cont);\r\n        }else{\r\n            if(this.data.hasMask && this.data.tt){\r\n                this.matteElement.appendChild(cont);\r\n            }else{\r\n                this.appendNodeToParent(cont);\r\n            }\r\n        }\r\n    }*/\n\n\n    if (this.data.ef) {\n      this.effectsManager = new SVGEffects(this);\n    }\n\n    this.checkParenting();\n  };\n\n  SVGBaseElement.prototype.setBlendMode = BaseElement.prototype.setBlendMode;\n\n  SVGBaseElement.prototype.renderFrame = function (parentTransform) {\n    if (this.data.ty === 3 || this.data.hd || !this.isVisible) {\n      return false;\n    }\n\n    this.lastNum = this.currentFrameNum;\n    this.finalTransform.opMdf = this.firstFrame || this.finalTransform.op.mdf;\n    this.finalTransform.matMdf = this.firstFrame || this.finalTransform.mProp.mdf;\n    this.finalTransform.opacity = this.finalTransform.op.v;\n    var mat;\n    var finalMat = this.finalTransform.mat;\n\n    if (this.hierarchy) {\n      var i = 0,\n          len = this.hierarchy.length;\n\n      if (!this.finalTransform.matMdf) {\n        while (i < len) {\n          if (this.hierarchy[i].finalTransform.mProp.mdf) {\n            this.finalTransform.matMdf = true;\n            break;\n          }\n\n          i += 1;\n        }\n      }\n\n      if (this.finalTransform.matMdf) {\n        mat = this.finalTransform.mProp.v.props;\n        finalMat.cloneFromProps(mat);\n\n        for (i = 0; i < len; i += 1) {\n          mat = this.hierarchy[i].finalTransform.mProp.v.props;\n          finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\n        }\n      }\n    } else if (this.isVisible) {\n      finalMat = this.finalTransform.mProp.v;\n    }\n\n    if (this.finalTransform.matMdf && this.layerElement) {\n      this.transformedElement.setAttribute('transform', finalMat.to2dCSS());\n    }\n\n    if (this.finalTransform.opMdf && this.layerElement) {\n      if (this.finalTransform.op.v <= 0) {\n        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\n          this.isTransparent = true;\n          this.hide();\n        }\n      } else if (this.hidden && this.isTransparent) {\n        this.isTransparent = false;\n        this.show();\n      }\n\n      this.transformedElement.setAttribute('opacity', this.finalTransform.op.v);\n    }\n\n    if (this.data.hasMask) {\n      this.maskManager.renderFrame(finalMat);\n    }\n\n    if (this.effectsManager) {\n      this.effectsManager.renderFrame(this.firstFrame);\n    }\n\n    return this.isVisible;\n  };\n\n  SVGBaseElement.prototype.destroy = function () {\n    this.layerElement = null;\n    this.parentContainer = null;\n\n    if (this.matteElement) {\n      this.matteElement = null;\n    }\n\n    if (this.maskManager) {\n      this.maskManager.destroy();\n    }\n  };\n\n  SVGBaseElement.prototype.getBaseElement = function () {\n    return this.baseElement;\n  };\n\n  SVGBaseElement.prototype.addMasks = function (data) {\n    this.maskManager = new MaskElement(data, this, this.globalData);\n  };\n\n  SVGBaseElement.prototype.setMatte = function (id) {\n    if (!this.matteElement) {\n      return;\n    }\n\n    this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\n  };\n\n  SVGBaseElement.prototype.hide = function () {\n    if (!this.hidden) {\n      this.layerElement.style.display = 'none';\n      this.hidden = true;\n    }\n  };\n\n  SVGBaseElement.prototype.show = function () {\n    if (this.isVisible && !this.isTransparent) {\n      this.hidden = false;\n      this.layerElement.style.display = 'block';\n    }\n  };\n\n  function IShapeElement(data, parentContainer, globalData, comp, placeholder) {\n    this.shapes = [];\n    this.shapesData = data.shapes;\n    this.stylesList = [];\n    this.itemsData = [];\n    this.prevViewData = [];\n    this.shapeModifiers = [];\n    this.processedElements = [];\n\n    this._parent.constructor.call(this, data, parentContainer, globalData, comp, placeholder);\n  }\n\n  createElement(SVGBaseElement, IShapeElement);\n  IShapeElement.prototype.identityMatrix = new Matrix();\n  IShapeElement.prototype.lcEnum = {\n    '1': 'butt',\n    '2': 'round',\n    '3': 'square'\n  };\n  IShapeElement.prototype.ljEnum = {\n    '1': 'miter',\n    '2': 'round',\n    '3': 'butt'\n  };\n\n  IShapeElement.prototype.searchProcessedElement = function (elem) {\n    var i = this.processedElements.length;\n\n    while (i) {\n      i -= 1;\n\n      if (this.processedElements[i].elem === elem) {\n        return this.processedElements[i].pos;\n      }\n    }\n\n    return 0;\n  };\n\n  IShapeElement.prototype.addProcessedElement = function (elem, pos) {\n    var i = this.processedElements.length;\n\n    while (i) {\n      i -= 1;\n\n      if (this.processedElements[i].elem === elem) {\n        this.processedElements[i].pos = pos;\n        break;\n      }\n    }\n\n    if (i === 0) {\n      this.processedElements.push({\n        elem: elem,\n        pos: pos\n      });\n    }\n  };\n\n  IShapeElement.prototype.buildExpressionInterface = function () {};\n\n  IShapeElement.prototype.createElements = function () {\n    //TODO check if I can use symbol so i can set its viewBox\n    this._parent.createElements.call(this);\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, this.dynamicProperties, 0, [], true);\n\n    if (!this.data.hd || this.data.td) {\n      styleUnselectableDiv(this.layerElement);\n    }\n  };\n\n  IShapeElement.prototype.setGradientData = function (pathElement, arr, data) {\n    var gradientId = 'gr_' + randomString(10);\n    var gfill;\n\n    if (arr.t === 1) {\n      gfill = document.createElementNS(svgNS, 'linearGradient');\n    } else {\n      gfill = document.createElementNS(svgNS, 'radialGradient');\n    }\n\n    gfill.setAttribute('id', gradientId);\n    gfill.setAttribute('spreadMethod', 'pad');\n    gfill.setAttribute('gradientUnits', 'userSpaceOnUse');\n    var stops = [];\n    var stop, j, jLen;\n    jLen = arr.g.p * 4;\n\n    for (j = 0; j < jLen; j += 4) {\n      stop = document.createElementNS(svgNS, 'stop');\n      gfill.appendChild(stop);\n      stops.push(stop);\n    }\n\n    pathElement.setAttribute(arr.ty === 'gf' ? 'fill' : 'stroke', 'url(#' + gradientId + ')');\n    this.globalData.defs.appendChild(gfill);\n    data.gf = gfill;\n    data.cst = stops;\n  };\n\n  IShapeElement.prototype.setGradientOpacity = function (arr, data, styleOb) {\n    if (arr.g.k.k[0].s && arr.g.k.k[0].s.length > arr.g.p * 4 || arr.g.k.k.length > arr.g.p * 4) {\n      var opFill;\n      var stop, j, jLen;\n      var mask = document.createElementNS(svgNS, \"mask\");\n      var maskElement = document.createElementNS(svgNS, 'path');\n      mask.appendChild(maskElement);\n      var opacityId = 'op_' + randomString(10);\n      var maskId = 'mk_' + randomString(10);\n      mask.setAttribute('id', maskId);\n\n      if (arr.t === 1) {\n        opFill = document.createElementNS(svgNS, 'linearGradient');\n      } else {\n        opFill = document.createElementNS(svgNS, 'radialGradient');\n      }\n\n      opFill.setAttribute('id', opacityId);\n      opFill.setAttribute('spreadMethod', 'pad');\n      opFill.setAttribute('gradientUnits', 'userSpaceOnUse');\n      jLen = arr.g.k.k[0].s ? arr.g.k.k[0].s.length : arr.g.k.k.length;\n      var stops = [];\n\n      for (j = arr.g.p * 4; j < jLen; j += 2) {\n        stop = document.createElementNS(svgNS, 'stop');\n        stop.setAttribute('stop-color', 'rgb(255,255,255)'); //stop.setAttribute('offset',Math.round(arr.y[j][0]*100)+'%');\n        //stop.setAttribute('style','stop-color:rgb(255,255,255);stop-opacity:'+arr.y[j][1]);\n\n        opFill.appendChild(stop);\n        stops.push(stop);\n      }\n\n      maskElement.setAttribute(arr.ty === 'gf' ? 'fill' : 'stroke', 'url(#' + opacityId + ')');\n      this.globalData.defs.appendChild(opFill);\n      this.globalData.defs.appendChild(mask);\n      data.of = opFill;\n      data.ost = stops;\n      styleOb.msElem = maskElement;\n      return maskId;\n    }\n  };\n\n  IShapeElement.prototype.createStyleElement = function (data, level, dynamicProperties) {\n    var elementData = {};\n    var styleOb = {\n      data: data,\n      type: data.ty,\n      d: '',\n      ld: '',\n      lvl: level,\n      mdf: false,\n      closed: false\n    };\n    var pathElement = document.createElementNS(svgNS, \"path\");\n    elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, dynamicProperties);\n\n    if (data.ty == 'st' || data.ty == 'gs') {\n      pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round'); ////pathElement.style.strokeLinecap = this.lcEnum[data.lc] || 'round';\n\n      pathElement.setAttribute('stroke-linejoin', this.ljEnum[data.lj] || 'round'); ////pathElement.style.strokeLinejoin = this.ljEnum[data.lj] || 'round';\n\n      pathElement.setAttribute('fill-opacity', '0'); ////pathElement.style.fillOpacity = 0;\n\n      if (data.lj == 1) {\n        pathElement.setAttribute('stroke-miterlimit', data.ml); ////pathElement.style.strokeMiterlimit = data.ml;\n      }\n\n      elementData.w = PropertyFactory.getProp(this, data.w, 0, null, dynamicProperties);\n\n      if (data.d) {\n        var d = PropertyFactory.getDashProp(this, data.d, 'svg', dynamicProperties);\n\n        if (!d.k) {\n          pathElement.setAttribute('stroke-dasharray', d.dasharray); ////pathElement.style.strokeDasharray = d.dasharray;\n\n          pathElement.setAttribute('stroke-dashoffset', d.dashoffset); ////pathElement.style.strokeDashoffset = d.dashoffset;\n        }\n\n        elementData.d = d;\n      }\n    }\n\n    if (data.ty == 'fl' || data.ty == 'st') {\n      elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, dynamicProperties);\n    } else {\n      elementData.g = PropertyFactory.getGradientProp(this, data.g, dynamicProperties);\n\n      if (data.t == 2) {\n        elementData.h = PropertyFactory.getProp(this, data.h, 0, 0.01, dynamicProperties);\n        elementData.a = PropertyFactory.getProp(this, data.a, 0, degToRads, dynamicProperties);\n      }\n\n      elementData.s = PropertyFactory.getProp(this, data.s, 1, null, dynamicProperties);\n      elementData.e = PropertyFactory.getProp(this, data.e, 1, null, dynamicProperties);\n      this.setGradientData(pathElement, data, elementData, styleOb);\n      var maskId = this.setGradientOpacity(data, elementData, styleOb);\n\n      if (maskId) {\n        pathElement.setAttribute('mask', 'url(#' + maskId + ')');\n      }\n    }\n\n    elementData.elem = pathElement; //container.appendChild(pathElement);\n\n    if (data.r === 2) {\n      pathElement.setAttribute('fill-rule', 'evenodd');\n    }\n\n    if (data.ln) {\n      pathElement.setAttribute('id', data.ln);\n    }\n\n    if (data.cl) {\n      pathElement.setAttribute('class', data.cl);\n    }\n\n    styleOb.pElem = pathElement;\n    this.stylesList.push(styleOb);\n    elementData.style = styleOb;\n    return elementData;\n  };\n\n  IShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = {\n      it: [],\n      prevViewData: []\n    };\n    var g = document.createElementNS(svgNS, 'g');\n    elementData.gr = g;\n\n    if (data.ln) {\n      elementData.gr.setAttribute('id', data.ln);\n    }\n\n    return elementData;\n  };\n\n  IShapeElement.prototype.createTransformElement = function (data, dynamicProperties) {\n    var elementData = {\n      transform: {\n        op: PropertyFactory.getProp(this, data.o, 0, 0.01, dynamicProperties),\n        mProps: PropertyFactory.getProp(this, data, 2, null, dynamicProperties)\n      },\n      elements: []\n    };\n    return elementData;\n  };\n\n  IShapeElement.prototype.createShapeElement = function (data, ownTransformers, level, dynamicProperties) {\n    var elementData = {\n      elements: [],\n      caches: [],\n      styles: [],\n      transformers: ownTransformers,\n      lStr: ''\n    };\n    var ty = 4;\n\n    if (data.ty == 'rc') {\n      ty = 5;\n    } else if (data.ty == 'el') {\n      ty = 6;\n    } else if (data.ty == 'sr') {\n      ty = 7;\n    }\n\n    elementData.sh = ShapePropertyFactory.getShapeProp(this, data, ty, dynamicProperties);\n    elementData.lvl = level;\n    this.shapes.push(elementData.sh);\n    this.addShapeToModifiers(elementData);\n    return elementData;\n  };\n\n  var cont = 0;\n\n  IShapeElement.prototype.setElementStyles = function () {\n    var j,\n        jLen = this.stylesList.length;\n    var arr = [];\n\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        arr.push(this.stylesList[j]);\n      }\n    }\n\n    return arr;\n  };\n\n  IShapeElement.prototype.reloadShapes = function () {\n    this.firstFrame = true;\n    var i,\n        len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, this.dynamicProperties, 0, [], true);\n    var i,\n        len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n  };\n\n  IShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, dynamicProperties, level, transformers, render) {\n    var ownTransformers = [].concat(transformers);\n    var i,\n        len = arr.length - 1;\n    var j, jLen;\n    var ownStyles = [],\n        ownModifiers = [],\n        styleOb,\n        currentTransform,\n        modifier,\n        processedPos;\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._render = render;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], level, dynamicProperties);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        if (arr[i]._render) {\n          container.appendChild(itemsData[i].elem);\n        }\n\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty == 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, dynamicProperties, level + 1, ownTransformers, render);\n\n        if (arr[i]._render) {\n          container.appendChild(itemsData[i].gr);\n        }\n      } else if (arr[i].ty == 'tr') {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], dynamicProperties);\n        }\n\n        currentTransform = itemsData[i].transform;\n        ownTransformers.push(currentTransform);\n      } else if (arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level, dynamicProperties);\n        }\n\n        itemsData[i].elements = this.setElementStyles();\n      } else if (arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i], dynamicProperties);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty == 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData, dynamicProperties);\n          this.shapeModifiers.push(modifier);\n          render = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    len = ownStyles.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownStyles[i].closed = true;\n    }\n\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  IShapeElement.prototype.addShapeToModifiers = function (data) {\n    var i,\n        len = this.shapeModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.shapeModifiers[i].addShape(data);\n    }\n  };\n\n  IShapeElement.prototype.renderModifiers = function () {\n    if (!this.shapeModifiers.length) {\n      return;\n    }\n\n    var i,\n        len = this.shapes.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.shapes[i].reset();\n    }\n\n    len = this.shapeModifiers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      this.shapeModifiers[i].processShapes(this.firstFrame);\n    }\n  };\n\n  IShapeElement.prototype.renderFrame = function (parentMatrix) {\n    //this.reloadShapes();\n    var renderParent = this._parent.renderFrame.call(this, parentMatrix);\n\n    if (renderParent === false) {\n      this.hide();\n      return;\n    }\n\n    if (this.hidden) {\n      this.layerElement.style.display = 'block';\n      this.hidden = false;\n    }\n\n    this.renderModifiers();\n    var i,\n        len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.stylesList[i].d = '';\n      this.stylesList[i].mdf = false;\n    }\n\n    this.renderShape(this.shapesData, this.itemsData, null);\n\n    for (i = 0; i < len; i += 1) {\n      if (this.stylesList[i].ld === '0') {\n        this.stylesList[i].ld = '1';\n        this.stylesList[i].pElem.style.display = 'block'; //this.stylesList[i].parent.appendChild(this.stylesList[i].pElem);\n      }\n\n      if (this.stylesList[i].mdf || this.firstFrame) {\n        this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d);\n\n        if (this.stylesList[i].msElem) {\n          this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\n        }\n      }\n    }\n\n    if (this.firstFrame) {\n      this.firstFrame = false;\n    }\n  };\n\n  IShapeElement.prototype.hide = function () {\n    if (!this.hidden) {\n      this.layerElement.style.display = 'none';\n      var i,\n          len = this.stylesList.length;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.stylesList[i].ld !== '0') {\n          this.stylesList[i].ld = '0';\n          this.stylesList[i].pElem.style.display = 'none';\n\n          if (this.stylesList[i].pElem.parentNode) {\n            this.stylesList[i].parent = this.stylesList[i].pElem.parentNode; //this.stylesList[i].pElem.parentNode.removeChild(this.stylesList[i].pElem);\n          }\n        }\n      }\n\n      this.hidden = true;\n    }\n  };\n\n  IShapeElement.prototype.renderShape = function (items, data, container) {\n    var i,\n        len = items.length - 1;\n    var ty;\n\n    for (i = len; i >= 0; i -= 1) {\n      ty = items[i].ty;\n\n      if (ty == 'tr') {\n        if (this.firstFrame || data[i].transform.op.mdf && container) {\n          container.setAttribute('opacity', data[i].transform.op.v);\n        }\n\n        if (this.firstFrame || data[i].transform.mProps.mdf && container) {\n          container.setAttribute('transform', data[i].transform.mProps.v.to2dCSS());\n        }\n      } else if (ty == 'sh' || ty == 'el' || ty == 'rc' || ty == 'sr') {\n        this.renderPath(items[i], data[i]);\n      } else if (ty == 'fl') {\n        this.renderFill(items[i], data[i]);\n      } else if (ty == 'gf') {\n        this.renderGradient(items[i], data[i]);\n      } else if (ty == 'gs') {\n        this.renderGradient(items[i], data[i]);\n        this.renderStroke(items[i], data[i]);\n      } else if (ty == 'st') {\n        this.renderStroke(items[i], data[i]);\n      } else if (ty == 'gr') {\n        this.renderShape(items[i].it, data[i].it, data[i].gr);\n      } else if (ty == 'tm') {//\n      }\n    }\n  };\n\n  IShapeElement.prototype.buildShapeString = function (pathNodes, length, closed, mat) {\n    var i,\n        shapeString = '';\n\n    for (i = 1; i < length; i += 1) {\n      if (i === 1) {\n        shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\n      }\n\n      shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[i][0], pathNodes.i[i][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[i][0], pathNodes.v[i][1]);\n    }\n\n    if (length === 1) {\n      shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\n    }\n\n    if (closed && length) {\n      shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[0][0], pathNodes.i[0][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\n      shapeString += 'z';\n    }\n\n    return shapeString;\n  };\n\n  IShapeElement.prototype.renderPath = function (pathData, itemData) {\n    var len,\n        i,\n        j,\n        jLen,\n        pathStringTransformed,\n        redraw,\n        pathNodes,\n        l,\n        lLen = itemData.elements.length;\n    var lvl = itemData.lvl;\n\n    if (!pathData._render) {\n      return;\n    }\n\n    for (l = 0; l < lLen; l += 1) {\n      if (itemData.elements[l].data._render) {\n        redraw = itemData.sh.mdf || this.firstFrame;\n        pathStringTransformed = 'M0 0';\n        var paths = itemData.sh.paths;\n        jLen = paths._length;\n\n        if (itemData.elements[l].lvl < lvl) {\n          var mat = this.mHelper.reset(),\n              props;\n          var iterations = lvl - itemData.elements[l].lvl;\n          var k = itemData.transformers.length - 1;\n\n          while (iterations > 0) {\n            redraw = itemData.transformers[k].mProps.mdf || redraw;\n            props = itemData.transformers[k].mProps.v.props;\n            mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n            iterations--;\n            k--;\n          }\n\n          if (redraw) {\n            for (j = 0; j < jLen; j += 1) {\n              pathNodes = paths.shapes[j];\n\n              if (pathNodes && pathNodes._length) {\n                pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\n              }\n            }\n\n            itemData.caches[l] = pathStringTransformed;\n          } else {\n            pathStringTransformed = itemData.caches[l];\n          }\n        } else {\n          if (redraw) {\n            for (j = 0; j < jLen; j += 1) {\n              pathNodes = paths.shapes[j];\n\n              if (pathNodes && pathNodes._length) {\n                pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, this.identityMatrix);\n              }\n            }\n\n            itemData.caches[l] = pathStringTransformed;\n          } else {\n            pathStringTransformed = itemData.caches[l];\n          }\n        }\n\n        itemData.elements[l].d += pathStringTransformed;\n        itemData.elements[l].mdf = redraw || itemData.elements[l].mdf;\n      } else {\n        itemData.elements[l].mdf = true;\n      }\n    }\n  };\n\n  IShapeElement.prototype.renderFill = function (styleData, itemData) {\n    var styleElem = itemData.style;\n\n    if (itemData.c.mdf || this.firstFrame) {\n      styleElem.pElem.setAttribute('fill', 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')'); ////styleElem.pElem.style.fill = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\n    }\n\n    if (itemData.o.mdf || this.firstFrame) {\n      styleElem.pElem.setAttribute('fill-opacity', itemData.o.v);\n    }\n  };\n\n  IShapeElement.prototype.renderGradient = function (styleData, itemData) {\n    var gfill = itemData.gf;\n    var opFill = itemData.of;\n    var pt1 = itemData.s.v,\n        pt2 = itemData.e.v;\n\n    if (itemData.o.mdf || this.firstFrame) {\n      var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\n      itemData.elem.setAttribute(attr, itemData.o.v);\n    } //clippedElement.setAttribute('transform','matrix(1,0,0,1,-100,0)');\n\n\n    if (itemData.s.mdf || this.firstFrame) {\n      var attr1 = styleData.t === 1 ? 'x1' : 'cx';\n      var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\n      gfill.setAttribute(attr1, pt1[0]);\n      gfill.setAttribute(attr2, pt1[1]);\n\n      if (opFill) {\n        opFill.setAttribute(attr1, pt1[0]);\n        opFill.setAttribute(attr2, pt1[1]);\n      }\n    }\n\n    var stops, i, len, stop;\n\n    if (itemData.g.cmdf || this.firstFrame) {\n      stops = itemData.cst;\n      var cValues = itemData.g.c;\n      len = stops.length;\n\n      for (i = 0; i < len; i += 1) {\n        stop = stops[i];\n        stop.setAttribute('offset', cValues[i * 4] + '%');\n        stop.setAttribute('stop-color', 'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')');\n      }\n    }\n\n    if (opFill && (itemData.g.omdf || this.firstFrame)) {\n      stops = itemData.ost;\n      var oValues = itemData.g.o;\n      len = stops.length;\n\n      for (i = 0; i < len; i += 1) {\n        stop = stops[i];\n        stop.setAttribute('offset', oValues[i * 2] + '%');\n        stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\n      }\n    }\n\n    if (styleData.t === 1) {\n      if (itemData.e.mdf || this.firstFrame) {\n        gfill.setAttribute('x2', pt2[0]);\n        gfill.setAttribute('y2', pt2[1]);\n\n        if (opFill) {\n          opFill.setAttribute('x2', pt2[0]);\n          opFill.setAttribute('y2', pt2[1]);\n        }\n      }\n    } else {\n      var rad;\n\n      if (itemData.s.mdf || itemData.e.mdf || this.firstFrame) {\n        rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n        gfill.setAttribute('r', rad);\n\n        if (opFill) {\n          opFill.setAttribute('r', rad);\n        }\n      }\n\n      if (itemData.e.mdf || itemData.h.mdf || itemData.a.mdf || this.firstFrame) {\n        if (!rad) {\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n        }\n\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n        var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99 : itemData.h.v;\n        var dist = rad * percent;\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n        gfill.setAttribute('fx', x);\n        gfill.setAttribute('fy', y);\n\n        if (opFill) {\n          opFill.setAttribute('fx', x);\n          opFill.setAttribute('fy', y);\n        }\n      } //gfill.setAttribute('fy','200');\n\n    }\n  };\n\n  IShapeElement.prototype.renderStroke = function (styleData, itemData) {\n    var styleElem = itemData.style; //TODO fix dashes\n\n    var d = itemData.d;\n    var dasharray, dashoffset;\n\n    if (d && d.k && (d.mdf || this.firstFrame)) {\n      styleElem.pElem.setAttribute('stroke-dasharray', d.dasharray); ////styleElem.pElem.style.strokeDasharray = d.dasharray;\n\n      styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset); ////styleElem.pElem.style.strokeDashoffset = d.dashoffset;\n    }\n\n    if (itemData.c && (itemData.c.mdf || this.firstFrame)) {\n      styleElem.pElem.setAttribute('stroke', 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')'); ////styleElem.pElem.style.stroke = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\n    }\n\n    if (itemData.o.mdf || this.firstFrame) {\n      styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\n    }\n\n    if (itemData.w.mdf || this.firstFrame) {\n      styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\n\n      if (styleElem.msElem) {\n        styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\n      } ////styleElem.pElem.style.strokeWidth = itemData.w.v;\n\n    }\n  };\n\n  IShapeElement.prototype.destroy = function () {\n    this._parent.destroy.call(this._parent);\n\n    this.shapeData = null;\n    this.itemsData = null;\n    this.parentContainer = null;\n    this.placeholder = null;\n  };\n\n  function ITextElement(data, animationItem, parentContainer, globalData) {}\n\n  ITextElement.prototype.init = function () {\n    this.lettersChangedFlag = true;\n    this.dynamicProperties = this.dynamicProperties || [];\n    this.textAnimator = new TextAnimatorProperty(this.data.t, this.renderType, this);\n    this.textProperty = new TextProperty(this, this.data.t, this.dynamicProperties);\n\n    this._parent.init.call(this);\n\n    this.textAnimator.searchProperties(this.dynamicProperties);\n  };\n\n  ITextElement.prototype.prepareFrame = function (num) {\n    this._parent.prepareFrame.call(this, num);\n\n    if (this.textProperty.mdf || this.textProperty.firstFrame) {\n      this.buildNewText();\n      this.textProperty.firstFrame = false;\n    }\n  };\n\n  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\n    var j,\n        jLen = shapes.length;\n    var k, kLen, pathNodes;\n    var shapeStr = '';\n\n    for (j = 0; j < jLen; j += 1) {\n      pathNodes = shapes[j].ks.k;\n      shapeStr += this.buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\n    }\n\n    return shapeStr;\n  };\n\n  ITextElement.prototype.updateDocumentData = function (newData, index) {\n    this.textProperty.updateDocumentData(newData, index);\n  };\n\n  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\n    if (documentData.ps) {\n      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n    }\n\n    matrixHelper.translate(0, -documentData.ls, 0);\n\n    switch (documentData.j) {\n      case 1:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);\n        break;\n\n      case 2:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);\n        break;\n    }\n\n    matrixHelper.translate(xPos, yPos, 0);\n  };\n\n  ITextElement.prototype.buildColor = function (colorData) {\n    return 'rgb(' + Math.round(colorData[0] * 255) + ',' + Math.round(colorData[1] * 255) + ',' + Math.round(colorData[2] * 255) + ')';\n  };\n\n  ITextElement.prototype.buildShapeString = IShapeElement.prototype.buildShapeString;\n  ITextElement.prototype.emptyProp = new LetterProps();\n\n  ITextElement.prototype.destroy = function () {\n    this._parent.destroy.call(this._parent);\n  };\n\n  function SVGTextElement(data, parentContainer, globalData, comp, placeholder) {\n    this.textSpans = [];\n    this.renderType = 'svg';\n\n    this._parent.constructor.call(this, data, parentContainer, globalData, comp, placeholder);\n  }\n\n  createElement(SVGBaseElement, SVGTextElement);\n  extendPrototype(ITextElement, SVGTextElement);\n\n  SVGTextElement.prototype.createElements = function () {\n    this._parent.createElements.call(this);\n\n    if (this.data.ln) {\n      this.layerElement.setAttribute('id', this.data.ln);\n    }\n\n    if (this.data.cl) {\n      this.layerElement.setAttribute('class', this.data.cl);\n    }\n\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\n      this.textContainer = document.createElementNS(svgNS, 'text');\n    }\n  };\n\n  SVGTextElement.prototype.buildNewText = function () {\n    var i, len;\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = Array.apply(null, {\n      length: documentData ? documentData.l.length : 0\n    });\n\n    if (documentData.fc) {\n      this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\n    } else {\n      this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\n    }\n\n    if (documentData.sc) {\n      this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\n      this.layerElement.setAttribute('stroke-width', documentData.sw);\n    }\n\n    this.layerElement.setAttribute('font-size', documentData.s);\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (fontData.fClass) {\n      this.layerElement.setAttribute('class', fontData.fClass);\n    } else {\n      this.layerElement.setAttribute('font-family', fontData.fFamily);\n      var fWeight = documentData.fWeight,\n          fStyle = documentData.fStyle;\n      this.layerElement.setAttribute('font-style', fStyle);\n      this.layerElement.setAttribute('font-weight', fWeight);\n    }\n\n    var letters = documentData.l || [];\n    var usesGlyphs = this.globalData.fontManager.chars;\n    len = letters.length;\n\n    if (!len) {\n      return;\n    }\n\n    var tSpan;\n    var matrixHelper = this.mHelper;\n    var shapes,\n        shapeStr = '',\n        singleShape = this.data.singleShape;\n    var xPos = 0,\n        yPos = 0,\n        firstLine = true;\n    var trackingOffset = documentData.tr / 1000 * documentData.s;\n\n    if (singleShape && !usesGlyphs) {\n      var tElement = this.textContainer;\n      var justify = '';\n\n      switch (documentData.j) {\n        case 1:\n          justify = 'end';\n          break;\n\n        case 2:\n          justify = 'middle';\n          break;\n\n        case 2:\n          justify = 'start';\n          break;\n      }\n\n      tElement.setAttribute('text-anchor', justify);\n      tElement.setAttribute('letter-spacing', trackingOffset);\n      var textContent = documentData.t.split(String.fromCharCode(13));\n      len = textContent.length;\n      var yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\n\n      for (i = 0; i < len; i += 1) {\n        tSpan = this.textSpans[i] || document.createElementNS(svgNS, 'tspan');\n        tSpan.textContent = textContent[i];\n        tSpan.setAttribute('x', 0);\n        tSpan.setAttribute('y', yPos);\n        tSpan.style.display = 'inherit';\n        tElement.appendChild(tSpan);\n        this.textSpans[i] = tSpan;\n        yPos += documentData.lh;\n      }\n\n      this.layerElement.appendChild(tElement);\n    } else {\n      var cachedSpansLength = this.textSpans.length;\n      var shapeData, charData;\n\n      for (i = 0; i < len; i += 1) {\n        if (!usesGlyphs || !singleShape || i === 0) {\n          tSpan = cachedSpansLength > i ? this.textSpans[i] : document.createElementNS(svgNS, usesGlyphs ? 'path' : 'text');\n\n          if (cachedSpansLength <= i) {\n            tSpan.setAttribute('stroke-linecap', 'butt');\n            tSpan.setAttribute('stroke-linejoin', 'round');\n            tSpan.setAttribute('stroke-miterlimit', '4');\n            this.textSpans[i] = tSpan;\n            this.layerElement.appendChild(tSpan);\n          }\n\n          tSpan.style.display = 'inherit';\n        }\n\n        matrixHelper.reset();\n\n        if (usesGlyphs) {\n          matrixHelper.scale(documentData.s / 100, documentData.s / 100);\n\n          if (singleShape) {\n            if (letters[i].n) {\n              xPos = -trackingOffset;\n              yPos += documentData.yOffset;\n              yPos += firstLine ? 1 : 0;\n              firstLine = false;\n            }\n\n            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n            xPos += letters[i].l || 0; //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\n\n            xPos += trackingOffset;\n          }\n\n          charData = this.globalData.fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n          shapeData = charData && charData.data || {};\n          shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\n\n          if (!singleShape) {\n            tSpan.setAttribute('d', this.createPathShape(matrixHelper, shapes));\n          } else {\n            shapeStr += this.createPathShape(matrixHelper, shapes);\n          }\n        } else {\n          tSpan.textContent = letters[i].val;\n          tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n        } //\n\n      }\n\n      if (singleShape) {\n        tSpan.setAttribute('d', shapeStr);\n      }\n    }\n\n    while (i < this.textSpans.length) {\n      this.textSpans[i].style.display = 'none';\n      i += 1;\n    }\n\n    this._sizeChanged = true;\n  };\n\n  SVGTextElement.prototype.sourceRectAtTime = function (time) {\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\n    this.renderLetters();\n\n    if (this._sizeChanged) {\n      this._sizeChanged = false;\n      var textBox = this.layerElement.getBBox();\n      this.bbox = {\n        top: textBox.y,\n        left: textBox.x,\n        width: textBox.width,\n        height: textBox.height\n      };\n    }\n\n    return this.bbox;\n  };\n\n  SVGTextElement.prototype.renderLetters = function () {\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n        this._sizeChanged = true;\n        var i, len;\n        var renderedLetters = this.textAnimator.renderedLetters;\n        var letters = this.textProperty.currentData.l;\n        len = letters.length;\n        var renderedLetter, textSpan;\n\n        for (i = 0; i < len; i += 1) {\n          if (letters[i].n) {\n            continue;\n          }\n\n          renderedLetter = renderedLetters[i];\n          textSpan = this.textSpans[i];\n\n          if (renderedLetter.mdf.m) {\n            textSpan.setAttribute('transform', renderedLetter.m);\n          }\n\n          if (renderedLetter.mdf.o) {\n            textSpan.setAttribute('opacity', renderedLetter.o);\n          }\n\n          if (renderedLetter.mdf.sw) {\n            textSpan.setAttribute('stroke-width', renderedLetter.sw);\n          }\n\n          if (renderedLetter.mdf.sc) {\n            textSpan.setAttribute('stroke', renderedLetter.sc);\n          }\n\n          if (renderedLetter.mdf.fc) {\n            textSpan.setAttribute('fill', renderedLetter.fc);\n          }\n        }\n      }\n    }\n  };\n\n  SVGTextElement.prototype.renderFrame = function (parentMatrix) {\n    var renderParent = this._parent.renderFrame.call(this, parentMatrix);\n\n    if (renderParent === false) {\n      this.hide();\n      return;\n    }\n\n    if (this.hidden) {\n      this.show();\n    }\n\n    if (this.firstFrame) {\n      this.firstFrame = false;\n    }\n\n    this.renderLetters();\n  };\n\n  function SVGTintFilter(filter, filterManager) {\n    this.filterManager = filterManager;\n    var feColorMatrix = document.createElementNS(svgNS, 'feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', 'f1');\n    filter.appendChild(feColorMatrix);\n    feColorMatrix = document.createElementNS(svgNS, 'feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', 'f2');\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n\n    if (filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k) {\n      var feMerge = document.createElementNS(svgNS, 'feMerge');\n      filter.appendChild(feMerge);\n      var feMergeNode;\n      feMergeNode = document.createElementNS(svgNS, 'feMergeNode');\n      feMergeNode.setAttribute('in', 'SourceGraphic');\n      feMerge.appendChild(feMergeNode);\n      feMergeNode = document.createElementNS(svgNS, 'feMergeNode');\n      feMergeNode.setAttribute('in', 'f2');\n      feMerge.appendChild(feMergeNode);\n    }\n  }\n\n  SVGTintFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager.mdf) {\n      var colorBlack = this.filterManager.effectElements[0].p.v;\n      var colorWhite = this.filterManager.effectElements[1].p.v;\n      var opacity = this.filterManager.effectElements[2].p.v / 100;\n      this.matrixFilter.setAttribute('values', colorWhite[0] - colorBlack[0] + ' 0 0 0 ' + colorBlack[0] + ' ' + (colorWhite[1] - colorBlack[1]) + ' 0 0 0 ' + colorBlack[1] + ' ' + (colorWhite[2] - colorBlack[2]) + ' 0 0 0 ' + colorBlack[2] + ' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGFillFilter(filter, filterManager) {\n    this.filterManager = filterManager;\n    var feColorMatrix = document.createElementNS(svgNS, 'feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n  }\n\n  SVGFillFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager.mdf) {\n      var color = this.filterManager.effectElements[2].p.v;\n      var opacity = this.filterManager.effectElements[6].p.v;\n      this.matrixFilter.setAttribute('values', '0 0 0 0 ' + color[0] + ' 0 0 0 0 ' + color[1] + ' 0 0 0 0 ' + color[2] + ' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGStrokeEffect(elem, filterManager) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.elem = elem;\n    this.paths = [];\n  }\n\n  SVGStrokeEffect.prototype.initialize = function () {\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n    var path, groupPath, i, len;\n\n    if (this.filterManager.effectElements[1].p.v === 1) {\n      len = this.elem.maskManager.masksProperties.length;\n      i = 0;\n    } else {\n      i = this.filterManager.effectElements[0].p.v - 1;\n      len = i + 1;\n    }\n\n    groupPath = document.createElementNS(svgNS, 'g');\n    groupPath.setAttribute('fill', 'none');\n    groupPath.setAttribute('stroke-linecap', 'round');\n    groupPath.setAttribute('stroke-dashoffset', 1);\n\n    for (i; i < len; i += 1) {\n      path = document.createElementNS(svgNS, 'path');\n      groupPath.appendChild(path);\n      this.paths.push({\n        p: path,\n        m: i\n      });\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 3) {\n      var mask = document.createElementNS(svgNS, 'mask');\n      var id = 'stms_' + randomString(10);\n      mask.setAttribute('id', id);\n      mask.setAttribute('mask-type', 'alpha');\n      mask.appendChild(groupPath);\n      this.elem.globalData.defs.appendChild(mask);\n      var g = document.createElementNS(svgNS, 'g');\n      g.setAttribute('mask', 'url(' + locationHref + '#' + id + ')');\n\n      if (elemChildren[0]) {\n        g.appendChild(elemChildren[0]);\n      }\n\n      this.elem.layerElement.appendChild(g);\n      this.masker = mask;\n      groupPath.setAttribute('stroke', '#fff');\n    } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (this.filterManager.effectElements[10].p.v === 2) {\n        var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n\n        while (elemChildren.length) {\n          this.elem.layerElement.removeChild(elemChildren[0]);\n        }\n      }\n\n      this.elem.layerElement.appendChild(groupPath);\n      this.elem.layerElement.removeAttribute('mask');\n      groupPath.setAttribute('stroke', '#fff');\n    }\n\n    this.initialized = true;\n    this.pathMasker = groupPath;\n  };\n\n  SVGStrokeEffect.prototype.renderFrame = function (forceRender) {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    var i,\n        len = this.paths.length;\n    var mask, path;\n\n    for (i = 0; i < len; i += 1) {\n      mask = this.elem.maskManager.viewData[this.paths[i].m];\n      path = this.paths[i].p;\n\n      if (forceRender || this.filterManager.mdf || mask.prop.mdf) {\n        path.setAttribute('d', mask.lastPath);\n      }\n\n      if (forceRender || this.filterManager.effectElements[9].p.mdf || this.filterManager.effectElements[4].p.mdf || this.filterManager.effectElements[7].p.mdf || this.filterManager.effectElements[8].p.mdf || mask.prop.mdf) {\n        var dasharrayValue;\n\n        if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {\n          var s = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) / 100;\n          var e = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) / 100;\n          var l = path.getTotalLength();\n          dasharrayValue = '0 0 0 ' + l * s + ' ';\n          var lineLength = l * (e - s);\n          var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v / 100;\n          var units = Math.floor(lineLength / segment);\n          var j;\n\n          for (j = 0; j < units; j += 1) {\n            dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v / 100 + ' ';\n          }\n\n          dasharrayValue += '0 ' + l * 10 + ' 0 0';\n        } else {\n          dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v / 100;\n        }\n\n        path.setAttribute('stroke-dasharray', dasharrayValue);\n      }\n    }\n\n    if (forceRender || this.filterManager.effectElements[4].p.mdf) {\n      this.pathMasker.setAttribute('stroke-width', this.filterManager.effectElements[4].p.v * 2);\n    }\n\n    if (forceRender || this.filterManager.effectElements[6].p.mdf) {\n      this.pathMasker.setAttribute('opacity', this.filterManager.effectElements[6].p.v);\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (forceRender || this.filterManager.effectElements[3].p.mdf) {\n        var color = this.filterManager.effectElements[3].p.v;\n        this.pathMasker.setAttribute('stroke', 'rgb(' + bm_floor(color[0] * 255) + ',' + bm_floor(color[1] * 255) + ',' + bm_floor(color[2] * 255) + ')');\n      }\n    }\n  };\n\n  function SVGTritoneFilter(filter, filterManager) {\n    this.filterManager = filterManager;\n    var feColorMatrix = document.createElementNS(svgNS, 'feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', 'f1');\n    filter.appendChild(feColorMatrix);\n    var feComponentTransfer = document.createElementNS(svgNS, 'feComponentTransfer');\n    feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n    filter.appendChild(feComponentTransfer);\n    this.matrixFilter = feComponentTransfer;\n    var feFuncR = document.createElementNS(svgNS, 'feFuncR');\n    feFuncR.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncR);\n    this.feFuncR = feFuncR;\n    var feFuncG = document.createElementNS(svgNS, 'feFuncG');\n    feFuncG.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncG);\n    this.feFuncG = feFuncG;\n    var feFuncB = document.createElementNS(svgNS, 'feFuncB');\n    feFuncB.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncB);\n    this.feFuncB = feFuncB;\n  }\n\n  SVGTritoneFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager.mdf) {\n      var color1 = this.filterManager.effectElements[0].p.v;\n      var color2 = this.filterManager.effectElements[1].p.v;\n      var color3 = this.filterManager.effectElements[2].p.v;\n      var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\n      var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\n      var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\n      this.feFuncR.setAttribute('tableValues', tableR);\n      this.feFuncG.setAttribute('tableValues', tableG);\n      this.feFuncB.setAttribute('tableValues', tableB); //var opacity = this.filterManager.effectElements[2].p.v/100;\n      //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGProLevelsFilter(filter, filterManager) {\n    this.filterManager = filterManager;\n    var effectElements = this.filterManager.effectElements;\n    var feComponentTransfer = document.createElementNS(svgNS, 'feComponentTransfer');\n    var feFuncR, feFuncG, feFuncB;\n\n    if (effectElements[9].p.k || effectElements[9].p.v !== 0 || effectElements[10].p.k || effectElements[10].p.v !== 1 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 0 || effectElements[13].p.k || effectElements[13].p.v !== 1) {\n      this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\n    }\n\n    if (effectElements[16].p.k || effectElements[16].p.v !== 0 || effectElements[17].p.k || effectElements[17].p.v !== 1 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 0 || effectElements[20].p.k || effectElements[20].p.v !== 1) {\n      this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\n    }\n\n    if (effectElements[23].p.k || effectElements[23].p.v !== 0 || effectElements[24].p.k || effectElements[24].p.v !== 1 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 0 || effectElements[27].p.k || effectElements[27].p.v !== 1) {\n      this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\n    }\n\n    if (effectElements[30].p.k || effectElements[30].p.v !== 0 || effectElements[31].p.k || effectElements[31].p.v !== 1 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 0 || effectElements[34].p.k || effectElements[34].p.v !== 1) {\n      this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\n    }\n\n    if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      filter.appendChild(feComponentTransfer);\n      feComponentTransfer = document.createElementNS(svgNS, 'feComponentTransfer');\n    }\n\n    if (effectElements[2].p.k || effectElements[2].p.v !== 0 || effectElements[3].p.k || effectElements[3].p.v !== 1 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 0 || effectElements[6].p.k || effectElements[6].p.v !== 1) {\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      filter.appendChild(feComponentTransfer);\n      this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\n      this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\n      this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\n    }\n  }\n\n  SVGProLevelsFilter.prototype.createFeFunc = function (type, feComponentTransfer) {\n    var feFunc = document.createElementNS(svgNS, type);\n    feFunc.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFunc);\n    return feFunc;\n  };\n\n  SVGProLevelsFilter.prototype.getTableValue = function (inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\n    var cnt = 0;\n    var segments = 256;\n    var perc;\n    var min = Math.min(inputBlack, inputWhite);\n    var max = Math.max(inputBlack, inputWhite);\n    var table = Array.call(null, {\n      length: segments\n    });\n    var colorValue;\n    var pos = 0;\n    var outputDelta = outputWhite - outputBlack;\n    var inputDelta = inputWhite - inputBlack;\n\n    while (cnt <= 256) {\n      perc = cnt / 256;\n\n      if (perc <= min) {\n        colorValue = inputDelta < 0 ? outputWhite : outputBlack;\n      } else if (perc >= max) {\n        colorValue = inputDelta < 0 ? outputBlack : outputWhite;\n      } else {\n        colorValue = outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma);\n      }\n\n      table[pos++] = colorValue;\n      cnt += 256 / (segments - 1);\n    }\n\n    return table.join(' ');\n  };\n\n  SVGProLevelsFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager.mdf) {\n      var val, cnt, perc, bezier;\n      var effectElements = this.filterManager.effectElements;\n\n      if (this.feFuncRComposed && (forceRender || effectElements[2].p.mdf || effectElements[3].p.mdf || effectElements[4].p.mdf || effectElements[5].p.mdf || effectElements[6].p.mdf)) {\n        val = this.getTableValue(effectElements[2].p.v, effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v);\n        this.feFuncRComposed.setAttribute('tableValues', val);\n        this.feFuncGComposed.setAttribute('tableValues', val);\n        this.feFuncBComposed.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncR && (forceRender || effectElements[9].p.mdf || effectElements[10].p.mdf || effectElements[11].p.mdf || effectElements[12].p.mdf || effectElements[13].p.mdf)) {\n        val = this.getTableValue(effectElements[9].p.v, effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v);\n        this.feFuncR.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncG && (forceRender || effectElements[16].p.mdf || effectElements[17].p.mdf || effectElements[18].p.mdf || effectElements[19].p.mdf || effectElements[20].p.mdf)) {\n        val = this.getTableValue(effectElements[16].p.v, effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v);\n        this.feFuncG.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncB && (forceRender || effectElements[23].p.mdf || effectElements[24].p.mdf || effectElements[25].p.mdf || effectElements[26].p.mdf || effectElements[27].p.mdf)) {\n        val = this.getTableValue(effectElements[23].p.v, effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v);\n        this.feFuncB.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncA && (forceRender || effectElements[30].p.mdf || effectElements[31].p.mdf || effectElements[32].p.mdf || effectElements[33].p.mdf || effectElements[34].p.mdf)) {\n        val = this.getTableValue(effectElements[30].p.v, effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v);\n        this.feFuncA.setAttribute('tableValues', val);\n      }\n    }\n  };\n\n  function SVGDropShadowEffect(filter, filterManager) {\n    /*<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/> <!-- stdDeviation is how much to blur -->\r\n    <feOffset dx=\"2\" dy=\"2\" result=\"offsetblur\"/> <!-- how much to offset -->\r\n    <feMerge> \r\n    <feMergeNode/> <!-- this contains the offset blurred image -->\r\n    <feMergeNode in=\"SourceGraphic\"/> <!-- this contains the element that the filter is applied to -->\r\n    </feMerge>*/\n\n    /*<feFlood flood-color=\"#3D4574\" flood-opacity=\"0.5\" result=\"offsetColor\"/>*/\n    filter.setAttribute('x', '-100%');\n    filter.setAttribute('y', '-100%');\n    filter.setAttribute('width', '400%');\n    filter.setAttribute('height', '400%');\n    this.filterManager = filterManager;\n    var feGaussianBlur = document.createElementNS(svgNS, 'feGaussianBlur');\n    feGaussianBlur.setAttribute('in', 'SourceAlpha');\n    feGaussianBlur.setAttribute('result', 'drop_shadow_1');\n    feGaussianBlur.setAttribute('stdDeviation', '0');\n    this.feGaussianBlur = feGaussianBlur;\n    filter.appendChild(feGaussianBlur);\n    var feOffset = document.createElementNS(svgNS, 'feOffset');\n    feOffset.setAttribute('dx', '25');\n    feOffset.setAttribute('dy', '0');\n    feOffset.setAttribute('in', 'drop_shadow_1');\n    feOffset.setAttribute('result', 'drop_shadow_2');\n    this.feOffset = feOffset;\n    filter.appendChild(feOffset);\n    var feFlood = document.createElementNS(svgNS, 'feFlood');\n    feFlood.setAttribute('flood-color', '#00ff00');\n    feFlood.setAttribute('flood-opacity', '1');\n    feFlood.setAttribute('result', 'drop_shadow_3');\n    this.feFlood = feFlood;\n    filter.appendChild(feFlood);\n    var feComposite = document.createElementNS(svgNS, 'feComposite');\n    feComposite.setAttribute('in', 'drop_shadow_3');\n    feComposite.setAttribute('in2', 'drop_shadow_2');\n    feComposite.setAttribute('operator', 'in');\n    feComposite.setAttribute('result', 'drop_shadow_4');\n    filter.appendChild(feComposite);\n    var feMerge = document.createElementNS(svgNS, 'feMerge');\n    filter.appendChild(feMerge);\n    var feMergeNode;\n    feMergeNode = document.createElementNS(svgNS, 'feMergeNode');\n    feMerge.appendChild(feMergeNode);\n    feMergeNode = document.createElementNS(svgNS, 'feMergeNode');\n    feMergeNode.setAttribute('in', 'SourceGraphic');\n    this.feMergeNode = feMergeNode;\n    this.feMerge = feMerge;\n    this.originalNodeAdded = false;\n    feMerge.appendChild(feMergeNode);\n  }\n\n  SVGDropShadowEffect.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager.mdf) {\n      if (forceRender || this.filterManager.effectElements[4].p.mdf) {\n        this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\n      }\n\n      if (forceRender || this.filterManager.effectElements[0].p.mdf) {\n        var col = this.filterManager.effectElements[0].p.v;\n        this.feFlood.setAttribute('flood-color', rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));\n      }\n\n      if (forceRender || this.filterManager.effectElements[1].p.mdf) {\n        this.feFlood.setAttribute('flood-opacity', this.filterManager.effectElements[1].p.v / 255);\n      }\n\n      if (forceRender || this.filterManager.effectElements[2].p.mdf || this.filterManager.effectElements[3].p.mdf) {\n        var distance = this.filterManager.effectElements[3].p.v;\n        var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\n        var x = distance * Math.cos(angle);\n        var y = distance * Math.sin(angle);\n        this.feOffset.setAttribute('dx', x);\n        this.feOffset.setAttribute('dy', y);\n      }\n      /*if(forceRender || this.filterManager.effectElements[5].p.mdf){\r\n          if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n              this.feMerge.removeChild(this.feMergeNode);\r\n              this.originalNodeAdded = false;\r\n          } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n              this.feMerge.appendChild(this.feMergeNode);\r\n              this.originalNodeAdded = true;\r\n          }\r\n      }*/\n\n    }\n  };\n\n  function SVGMatte3Effect(filterElem, filterManager, elem) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.filterElem = filterElem;\n    this.elem = elem;\n    elem.matteElement = document.createElementNS(svgNS, 'g');\n    elem.matteElement.appendChild(elem.layerElement);\n    elem.matteElement.appendChild(elem.transformedElement);\n    elem.baseElement = elem.matteElement;\n  }\n\n  SVGMatte3Effect.prototype.setElementAsMask = function (elem, mask) {\n    var masker = document.createElementNS(svgNS, 'mask');\n    masker.setAttribute('id', mask.layerId);\n    masker.setAttribute('mask-type', 'alpha');\n    masker.appendChild(mask.layerElement);\n    elem.setMatte(mask.layerId);\n    mask.data.hd = false;\n    var defs = elem.globalData.defs;\n    defs.appendChild(masker);\n  };\n\n  SVGMatte3Effect.prototype.initialize = function () {\n    var ind = this.filterManager.effectElements[0].p.v;\n    var i = 0,\n        len = this.elem.comp.elements.length;\n\n    while (i < len) {\n      if (this.elem.comp.elements[i].data.ind === ind) {\n        this.setElementAsMask(this.elem, this.elem.comp.elements[i]);\n      }\n\n      i += 1;\n    }\n\n    this.initialized = true;\n  };\n\n  SVGMatte3Effect.prototype.renderFrame = function () {\n    if (!this.initialized) {\n      this.initialize();\n    }\n  };\n\n  function SVGEffects(elem) {\n    var i,\n        len = elem.data.ef.length;\n    var filId = randomString(10);\n    var fil = filtersFactory.createFilter(filId);\n    var count = 0;\n    this.filters = [];\n    var filterManager;\n\n    for (i = 0; i < len; i += 1) {\n      if (elem.data.ef[i].ty === 20) {\n        count += 1;\n        filterManager = new SVGTintFilter(fil, elem.effects.effectElements[i]);\n        this.filters.push(filterManager);\n      } else if (elem.data.ef[i].ty === 21) {\n        count += 1;\n        filterManager = new SVGFillFilter(fil, elem.effects.effectElements[i]);\n        this.filters.push(filterManager);\n      } else if (elem.data.ef[i].ty === 22) {\n        filterManager = new SVGStrokeEffect(elem, elem.effects.effectElements[i]);\n        this.filters.push(filterManager);\n      } else if (elem.data.ef[i].ty === 23) {\n        count += 1;\n        filterManager = new SVGTritoneFilter(fil, elem.effects.effectElements[i]);\n        this.filters.push(filterManager);\n      } else if (elem.data.ef[i].ty === 24) {\n        count += 1;\n        filterManager = new SVGProLevelsFilter(fil, elem.effects.effectElements[i]);\n        this.filters.push(filterManager);\n      } else if (elem.data.ef[i].ty === 25) {\n        count += 1;\n        filterManager = new SVGDropShadowEffect(fil, elem.effects.effectElements[i]);\n        this.filters.push(filterManager);\n      } else if (elem.data.ef[i].ty === 28) {\n        //count += 1;\n        filterManager = new SVGMatte3Effect(fil, elem.effects.effectElements[i], elem);\n        this.filters.push(filterManager);\n      }\n    }\n\n    if (count) {\n      elem.globalData.defs.appendChild(fil);\n      elem.layerElement.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\n    }\n  }\n\n  SVGEffects.prototype.renderFrame = function (firstFrame) {\n    var i,\n        len = this.filters.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(firstFrame);\n    }\n  };\n\n  function ICompElement(data, parentContainer, globalData, comp, placeholder) {\n    this._parent.constructor.call(this, data, parentContainer, globalData, comp, placeholder);\n\n    this.layers = data.layers;\n    this.supports3d = true;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? Array.apply(null, {\n      length: this.layers.length\n    }) : [];\n\n    if (this.data.tm) {\n      this.tm = PropertyFactory.getProp(this, this.data.tm, 0, globalData.frameRate, this.dynamicProperties);\n    }\n\n    if (this.data.xt) {\n      this.layerElement = document.createElementNS(svgNS, 'g');\n      this.buildAllItems();\n    } else if (!globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n  }\n\n  createElement(SVGBaseElement, ICompElement);\n\n  ICompElement.prototype.hide = function () {\n    if (!this.hidden) {\n      this._parent.hide.call(this);\n\n      var i,\n          len = this.elements.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.elements[i]) {\n          this.elements[i].hide();\n        }\n      }\n    }\n  };\n\n  ICompElement.prototype.prepareFrame = function (num) {\n    this._parent.prepareFrame.call(this, num);\n\n    if (this.isVisible === false && !this.data.xt) {\n      return;\n    }\n\n    if (this.tm) {\n      var timeRemapped = this.tm.v;\n\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1;\n      }\n\n      this.renderedFrame = timeRemapped;\n    } else {\n      this.renderedFrame = num / this.data.sr;\n    }\n\n    var i,\n        len = this.elements.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(this.renderedFrame);\n    }\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\n      }\n    }\n  };\n\n  ICompElement.prototype.renderFrame = function (parentMatrix) {\n    var renderParent = this._parent.renderFrame.call(this, parentMatrix);\n\n    var i,\n        len = this.layers.length;\n\n    if (renderParent === false) {\n      this.hide();\n      return;\n    }\n\n    if (this.hidden) {\n      this.show();\n    }\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n\n    if (this.firstFrame) {\n      this.firstFrame = false;\n    }\n  };\n\n  ICompElement.prototype.setElements = function (elems) {\n    this.elements = elems;\n  };\n\n  ICompElement.prototype.getElements = function () {\n    return this.elements;\n  };\n\n  ICompElement.prototype.destroy = function () {\n    this._parent.destroy.call(this._parent);\n\n    var i,\n        len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n  };\n\n  ICompElement.prototype.checkLayers = SVGRenderer.prototype.checkLayers;\n  ICompElement.prototype.buildItem = SVGRenderer.prototype.buildItem;\n  ICompElement.prototype.buildAllItems = SVGRenderer.prototype.buildAllItems;\n  ICompElement.prototype.buildElementParenting = SVGRenderer.prototype.buildElementParenting;\n  ICompElement.prototype.createItem = SVGRenderer.prototype.createItem;\n  ICompElement.prototype.createImage = SVGRenderer.prototype.createImage;\n  ICompElement.prototype.createComp = SVGRenderer.prototype.createComp;\n  ICompElement.prototype.createSolid = SVGRenderer.prototype.createSolid;\n  ICompElement.prototype.createShape = SVGRenderer.prototype.createShape;\n  ICompElement.prototype.createText = SVGRenderer.prototype.createText;\n  ICompElement.prototype.createBase = SVGRenderer.prototype.createBase;\n  ICompElement.prototype.appendElementInPos = SVGRenderer.prototype.appendElementInPos;\n  ICompElement.prototype.checkPendingElements = SVGRenderer.prototype.checkPendingElements;\n  ICompElement.prototype.addPendingElement = SVGRenderer.prototype.addPendingElement;\n\n  function IImageElement(data, parentContainer, globalData, comp, placeholder) {\n    this.assetData = globalData.getAssetData(data.refId);\n\n    this._parent.constructor.call(this, data, parentContainer, globalData, comp, placeholder);\n  }\n\n  createElement(SVGBaseElement, IImageElement);\n\n  IImageElement.prototype.createElements = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n\n    this._parent.createElements.call(this);\n\n    this.innerElem = document.createElementNS(svgNS, 'image');\n    this.innerElem.setAttribute('width', this.assetData.w + \"px\");\n    this.innerElem.setAttribute('height', this.assetData.h + \"px\");\n    this.innerElem.setAttribute('preserveAspectRatio', 'xMidYMid slice');\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n    this.maskedElement = this.innerElem;\n    this.layerElement.appendChild(this.innerElem);\n\n    if (this.data.ln) {\n      this.layerElement.setAttribute('id', this.data.ln);\n    }\n\n    if (this.data.cl) {\n      this.layerElement.setAttribute('class', this.data.cl);\n    }\n  };\n\n  IImageElement.prototype.renderFrame = function (parentMatrix) {\n    var renderParent = this._parent.renderFrame.call(this, parentMatrix);\n\n    if (renderParent === false) {\n      this.hide();\n      return;\n    }\n\n    if (this.hidden) {\n      this.show();\n    }\n\n    if (this.firstFrame) {\n      this.firstFrame = false;\n    }\n  };\n\n  IImageElement.prototype.destroy = function () {\n    this._parent.destroy.call(this._parent);\n\n    this.innerElem = null;\n  };\n\n  function ISolidElement(data, parentContainer, globalData, comp, placeholder) {\n    this._parent.constructor.call(this, data, parentContainer, globalData, comp, placeholder);\n  }\n\n  createElement(SVGBaseElement, ISolidElement);\n\n  ISolidElement.prototype.createElements = function () {\n    this._parent.createElements.call(this);\n\n    var rect = document.createElementNS(svgNS, 'rect'); ////rect.style.width = this.data.sw;\n    ////rect.style.height = this.data.sh;\n    ////rect.style.fill = this.data.sc;\n\n    rect.setAttribute('width', this.data.sw);\n    rect.setAttribute('height', this.data.sh);\n    rect.setAttribute('fill', this.data.sc);\n    this.layerElement.appendChild(rect);\n    this.innerElem = rect;\n\n    if (this.data.ln) {\n      this.layerElement.setAttribute('id', this.data.ln);\n    }\n\n    if (this.data.cl) {\n      this.layerElement.setAttribute('class', this.data.cl);\n    }\n  };\n\n  ISolidElement.prototype.renderFrame = IImageElement.prototype.renderFrame;\n  ISolidElement.prototype.destroy = IImageElement.prototype.destroy;\n\n  var animationManager = function () {\n    var moduleOb = {};\n    var registeredAnimations = [];\n    var initTime = 0;\n    var len = 0;\n    var idled = true;\n    var playingAnimationsNum = 0;\n\n    function removeElement(ev) {\n      var i = 0;\n      var animItem = ev.target;\n\n      while (i < len) {\n        if (registeredAnimations[i].animation === animItem) {\n          registeredAnimations.splice(i, 1);\n          i -= 1;\n          len -= 1;\n\n          if (!animItem.isPaused) {\n            subtractPlayingCount();\n          }\n        }\n\n        i += 1;\n      }\n    }\n\n    function registerAnimation(element, animationData) {\n      if (!element) {\n        return null;\n      }\n\n      var i = 0;\n\n      while (i < len) {\n        if (registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null) {\n          return registeredAnimations[i].animation;\n        }\n\n        i += 1;\n      }\n\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, element);\n      animItem.setData(element, animationData);\n      return animItem;\n    }\n\n    function addPlayingCount() {\n      playingAnimationsNum += 1;\n      activate();\n    }\n\n    function subtractPlayingCount() {\n      playingAnimationsNum -= 1;\n\n      if (playingAnimationsNum === 0) {\n        idled = true;\n      }\n    }\n\n    function setupAnimation(animItem, element) {\n      animItem.addEventListener('destroy', removeElement);\n      animItem.addEventListener('_active', addPlayingCount);\n      animItem.addEventListener('_idle', subtractPlayingCount);\n      registeredAnimations.push({\n        elem: element,\n        animation: animItem\n      });\n      len += 1;\n    }\n\n    function loadAnimation(params) {\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, null);\n      animItem.setParams(params);\n      return animItem;\n    }\n\n    function setSpeed(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setSpeed(val, animation);\n      }\n    }\n\n    function setDirection(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setDirection(val, animation);\n      }\n    }\n\n    function play(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.play(animation);\n      }\n    }\n\n    function moveFrame(value, animation) {\n      initTime = Date.now();\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.moveFrame(value, animation);\n      }\n    }\n\n    function resume(nowTime) {\n      var elapsedTime = nowTime - initTime;\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.advanceTime(elapsedTime);\n      }\n\n      initTime = nowTime;\n\n      if (!idled) {\n        window.requestAnimationFrame(resume);\n      }\n    }\n\n    function first(nowTime) {\n      initTime = nowTime;\n      window.requestAnimationFrame(resume);\n    }\n\n    function pause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.pause(animation);\n      }\n    }\n\n    function goToAndStop(value, isFrame, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);\n      }\n    }\n\n    function stop(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.stop(animation);\n      }\n    }\n\n    function togglePause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.togglePause(animation);\n      }\n    }\n\n    function destroy(animation) {\n      var i;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        registeredAnimations[i].animation.destroy(animation);\n      }\n    }\n\n    function searchAnimations(animationData, standalone, renderer) {\n      var animElements = document.getElementsByClassName('bodymovin');\n      var i,\n          len = animElements.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (renderer) {\n          animElements[i].setAttribute('data-bm-type', renderer);\n        }\n\n        registerAnimation(animElements[i], animationData);\n      }\n\n      if (standalone && len === 0) {\n        if (!renderer) {\n          renderer = 'svg';\n        }\n\n        var body = document.getElementsByTagName('body')[0];\n        body.innerHTML = '';\n        var div = document.createElement('div');\n        div.style.width = '100%';\n        div.style.height = '100%';\n        div.setAttribute('data-bm-type', renderer);\n        body.appendChild(div);\n        registerAnimation(div, animationData);\n      }\n    }\n\n    function resize() {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.resize();\n      }\n    }\n\n    function start() {\n      window.requestAnimationFrame(first);\n    }\n\n    function activate() {\n      if (idled) {\n        idled = false;\n        window.requestAnimationFrame(first);\n      }\n    } //start();\n\n\n    setTimeout(start, 0);\n    moduleOb.registerAnimation = registerAnimation;\n    moduleOb.loadAnimation = loadAnimation;\n    moduleOb.setSpeed = setSpeed;\n    moduleOb.setDirection = setDirection;\n    moduleOb.play = play;\n    moduleOb.moveFrame = moveFrame;\n    moduleOb.pause = pause;\n    moduleOb.stop = stop;\n    moduleOb.togglePause = togglePause;\n    moduleOb.searchAnimations = searchAnimations;\n    moduleOb.resize = resize;\n    moduleOb.start = start;\n    moduleOb.goToAndStop = goToAndStop;\n    moduleOb.destroy = destroy;\n    return moduleOb;\n  }();\n\n  var AnimationItem = function AnimationItem() {\n    this._cbs = [];\n    this.name = '';\n    this.path = '';\n    this.isLoaded = false;\n    this.currentFrame = 0;\n    this.currentRawFrame = 0;\n    this.totalFrames = 0;\n    this.frameRate = 0;\n    this.frameMult = 0;\n    this.playSpeed = 1;\n    this.playDirection = 1;\n    this.pendingElements = 0;\n    this.playCount = 0;\n    this.prerenderFramesFlag = true;\n    this.animationData = {};\n    this.layers = [];\n    this.assets = [];\n    this.isPaused = true;\n    this.autoplay = false;\n    this.loop = true;\n    this.renderer = null;\n    this.animationID = randomString(10);\n    this.scaleMode = 'fit';\n    this.assetsPath = '';\n    this.timeCompleted = 0;\n    this.segmentPos = 0;\n    this.subframeEnabled = subframeEnabled;\n    this.segments = [];\n    this.pendingSegment = false;\n    this._idle = true;\n    this.projectInterface = ProjectInterface();\n  };\n\n  AnimationItem.prototype.setParams = function (params) {\n    var self = this;\n\n    if (params.context) {\n      this.context = params.context;\n    }\n\n    if (params.wrapper || params.container) {\n      this.wrapper = params.wrapper || params.container;\n    }\n\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\n\n    switch (animType) {\n      case 'canvas':\n        this.renderer = new CanvasRenderer(this, params.rendererSettings);\n        break;\n\n      case 'svg':\n        this.renderer = new SVGRenderer(this, params.rendererSettings);\n        break;\n\n      case 'hybrid':\n      case 'html':\n      default:\n        this.renderer = new HybridRenderer(this, params.rendererSettings);\n        break;\n    }\n\n    this.renderer.setProjectInterface(this.projectInterface);\n    this.animType = animType;\n\n    if (params.loop === '' || params.loop === null) {} else if (params.loop === false) {\n      this.loop = false;\n    } else if (params.loop === true) {\n      this.loop = true;\n    } else {\n      this.loop = parseInt(params.loop);\n    }\n\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\n    this.name = params.name ? params.name : '';\n    this.prerenderFramesFlag = 'prerender' in params ? params.prerender : true;\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments : true;\n\n    if (params.animationData) {\n      self.configAnimation(params.animationData);\n    } else if (params.path) {\n      if (params.path.substr(-4) != 'json') {\n        if (params.path.substr(-1, 1) != '/') {\n          params.path += '/';\n        }\n\n        params.path += 'data.json';\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      if (params.path.lastIndexOf('\\\\') != -1) {\n        this.path = params.path.substr(0, params.path.lastIndexOf('\\\\') + 1);\n      } else {\n        this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1);\n      }\n\n      this.assetsPath = params.assetsPath;\n      this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1);\n      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'));\n      xhr.open('GET', params.path, true);\n      xhr.send();\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n          if (xhr.status == 200) {\n            self.configAnimation(JSON.parse(xhr.responseText));\n          } else {\n            try {\n              var response = JSON.parse(xhr.responseText);\n              self.configAnimation(response);\n            } catch (err) {}\n          }\n        }\n      };\n    }\n  };\n\n  AnimationItem.prototype.setData = function (wrapper, animationData) {\n    var params = {\n      wrapper: wrapper,\n      animationData: animationData ? typeof animationData === \"object\" ? animationData : JSON.parse(animationData) : null\n    };\n    var wrapperAttributes = wrapper.attributes;\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value : wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value : wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value : wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value : wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\n\n    if (loop === '') {} else if (loop === 'false') {\n      params.loop = false;\n    } else if (loop === 'true') {\n      params.loop = true;\n    } else {\n      params.loop = parseInt(loop);\n    }\n\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value : wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value : wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\n    params.autoplay = autoplay !== \"false\";\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value : wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value : '';\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value : wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value : wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\n\n    if (prerender === 'false') {\n      params.prerender = false;\n    }\n\n    this.setParams(params);\n  };\n\n  AnimationItem.prototype.includeLayers = function (data) {\n    if (data.op > this.animationData.op) {\n      this.animationData.op = data.op;\n      this.totalFrames = Math.floor(data.op - this.animationData.ip);\n      this.animationData.tf = this.totalFrames;\n    }\n\n    var layers = this.animationData.layers;\n    var i,\n        len = layers.length;\n    var newLayers = data.layers;\n    var j,\n        jLen = newLayers.length;\n\n    for (j = 0; j < jLen; j += 1) {\n      i = 0;\n\n      while (i < len) {\n        if (layers[i].id == newLayers[j].id) {\n          layers[i] = newLayers[j];\n          break;\n        }\n\n        i += 1;\n      }\n    }\n\n    if (data.chars || data.fonts) {\n      this.renderer.globalData.fontManager.addChars(data.chars);\n      this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\n    }\n\n    if (data.assets) {\n      len = data.assets.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.animationData.assets.push(data.assets[i]);\n      }\n    } //this.totalFrames = 50;\n    //this.animationData.tf = 50;\n\n\n    this.animationData.__complete = false;\n    dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\n    this.renderer.includeLayers(data.layers);\n\n    if (expressionsPlugin) {\n      expressionsPlugin.initExpressions(this);\n    }\n\n    this.renderer.renderFrame(null);\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.loadNextSegment = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments || segments.length === 0 || !this.autoloadSegments) {\n      this.trigger('data_ready');\n      this.timeCompleted = this.animationData.tf;\n      return;\n    }\n\n    var segment = segments.shift();\n    this.timeCompleted = segment.time * this.frameRate;\n    var xhr = new XMLHttpRequest();\n    var self = this;\n    var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json';\n    this.segmentPos += 1;\n    xhr.open('GET', segmentPath, true);\n    xhr.send();\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4) {\n        if (xhr.status == 200) {\n          self.includeLayers(JSON.parse(xhr.responseText));\n        } else {\n          try {\n            var response = JSON.parse(xhr.responseText);\n            self.includeLayers(response);\n          } catch (err) {}\n        }\n      }\n    };\n  };\n\n  AnimationItem.prototype.loadSegments = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments) {\n      this.timeCompleted = this.animationData.tf;\n    }\n\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.configAnimation = function (animData) {\n    var _this = this;\n\n    if (this.renderer && this.renderer.destroyed) {\n      return;\n    } //console.log(JSON.parse(JSON.stringify(animData)));\n    //animData.w = Math.round(animData.w/blitter);\n    //animData.h = Math.round(animData.h/blitter);\n\n\n    this.animationData = animData;\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\n    this.animationData.tf = this.totalFrames;\n    this.renderer.configAnimation(animData);\n\n    if (!animData.assets) {\n      animData.assets = [];\n    }\n\n    if (animData.comps) {\n      animData.assets = animData.assets.concat(animData.comps);\n      animData.comps = null;\n    }\n\n    this.renderer.searchExtraCompositions(animData.assets);\n    this.layers = this.animationData.layers;\n    this.assets = this.animationData.assets;\n    this.frameRate = this.animationData.fr;\n    this.firstFrame = Math.round(this.animationData.ip);\n    this.frameMult = this.animationData.fr / 1000;\n    this.trigger('config_ready');\n    this.imagePreloader = new ImagePreloader();\n    this.imagePreloader.setAssetsPath(this.assetsPath);\n    this.imagePreloader.setPath(this.path);\n    this.imagePreloader.loadAssets(animData.assets, function (err) {\n      if (!err) {\n        _this.trigger('loaded_images');\n      }\n    });\n    this.loadSegments();\n    this.updaFrameModifier();\n\n    if (this.renderer.globalData.fontManager) {\n      this.waitForFontsLoaded();\n    } else {\n      dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\n      this.checkLoaded();\n    }\n  };\n\n  AnimationItem.prototype.waitForFontsLoaded = function () {\n    function checkFontsLoaded() {\n      if (this.renderer.globalData.fontManager.loaded) {\n        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager); //this.renderer.buildItems(this.animationData.layers);\n\n        this.checkLoaded();\n      } else {\n        setTimeout(checkFontsLoaded.bind(this), 20);\n      }\n    }\n\n    return function () {\n      checkFontsLoaded.bind(this)();\n    };\n  }();\n\n  AnimationItem.prototype.addPendingElement = function () {\n    this.pendingElements += 1;\n  };\n\n  AnimationItem.prototype.elementLoaded = function () {\n    this.pendingElements--;\n    this.checkLoaded();\n  };\n\n  AnimationItem.prototype.checkLoaded = function () {\n    if (this.pendingElements === 0) {\n      if (expressionsPlugin) {\n        expressionsPlugin.initExpressions(this);\n      }\n\n      this.renderer.initItems();\n      setTimeout(function () {\n        this.trigger('DOMLoaded');\n      }.bind(this), 0);\n      this.isLoaded = true;\n      this.gotoFrame();\n\n      if (this.autoplay) {\n        this.play();\n      }\n    }\n  };\n\n  AnimationItem.prototype.resize = function () {\n    this.renderer.updateContainerSize();\n  };\n\n  AnimationItem.prototype.setSubframe = function (flag) {\n    this.subframeEnabled = flag ? true : false;\n  };\n\n  AnimationItem.prototype.gotoFrame = function () {\n    if (this.subframeEnabled) {\n      this.currentFrame = this.currentRawFrame;\n    } else {\n      this.currentFrame = Math.floor(this.currentRawFrame);\n    }\n\n    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\n      this.currentFrame = this.timeCompleted;\n    }\n\n    this.trigger('enterFrame');\n    this.renderFrame();\n  };\n\n  AnimationItem.prototype.renderFrame = function () {\n    if (this.isLoaded === false) {\n      return;\n    } //console.log('this.currentFrame:',this.currentFrame + this.firstFrame);\n\n\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\n  };\n\n  AnimationItem.prototype.play = function (name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.isPaused = false;\n\n      if (this._idle) {\n        this._idle = false;\n        this.trigger('_active');\n      }\n    }\n  };\n\n  AnimationItem.prototype.pause = function (name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    if (this.isPaused === false) {\n      this.isPaused = true;\n\n      if (!this.pendingSegment) {\n        this._idle = true;\n        this.trigger('_idle');\n      }\n    }\n  };\n\n  AnimationItem.prototype.togglePause = function (name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n\n  AnimationItem.prototype.stop = function (name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    this.pause();\n    this.currentFrame = this.currentRawFrame = 0;\n    this.playCount = 0;\n    this.gotoFrame();\n  };\n\n  AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    if (isFrame) {\n      this.setCurrentRawFrameValue(value);\n    } else {\n      this.setCurrentRawFrameValue(value * this.frameModifier);\n    }\n\n    this.pause();\n  };\n\n  AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\n    this.goToAndStop(value, isFrame, name);\n    this.play();\n  };\n\n  AnimationItem.prototype.advanceTime = function (value) {\n    if (this.pendingSegment) {\n      this.pendingSegment = false;\n      this.adjustSegment(this.segments.shift());\n\n      if (this.isPaused) {\n        this.play();\n      }\n\n      return;\n    }\n\n    if (this.isPaused === true || this.isLoaded === false) {\n      return;\n    }\n\n    this.setCurrentRawFrameValue(this.currentRawFrame + value * this.frameModifier);\n  };\n\n  AnimationItem.prototype.updateAnimation = function (perc) {\n    this.setCurrentRawFrameValue(this.totalFrames * perc);\n  };\n\n  AnimationItem.prototype.moveFrame = function (value, name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    this.setCurrentRawFrameValue(this.currentRawFrame + value);\n  };\n\n  AnimationItem.prototype.adjustSegment = function (arr) {\n    this.playCount = 0;\n\n    if (arr[1] < arr[0]) {\n      if (this.frameModifier > 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(-1);\n        }\n      }\n\n      this.totalFrames = arr[0] - arr[1];\n      this.firstFrame = arr[1];\n      this.setCurrentRawFrameValue(this.totalFrames - 0.01);\n    } else if (arr[1] > arr[0]) {\n      if (this.frameModifier < 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(1);\n        }\n      }\n\n      this.totalFrames = arr[1] - arr[0];\n      this.firstFrame = arr[0];\n      this.setCurrentRawFrameValue(0);\n    }\n\n    this.trigger('segmentStart');\n  };\n\n  AnimationItem.prototype.setSegment = function (init, end) {\n    var pendingFrame = -1;\n\n    if (this.isPaused) {\n      if (this.currentRawFrame + this.firstFrame < init) {\n        pendingFrame = init;\n      } else if (this.currentRawFrame + this.firstFrame > end) {\n        pendingFrame = end - init - 0.01;\n      }\n    }\n\n    this.firstFrame = init;\n    this.totalFrames = end - init;\n\n    if (pendingFrame !== -1) {\n      this.goToAndStop(pendingFrame, true);\n    }\n  };\n\n  AnimationItem.prototype.playSegments = function (arr, forceFlag) {\n    if (typeof arr[0] === 'object') {\n      var i,\n          len = arr.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.segments.push(arr[i]);\n      }\n    } else {\n      this.segments.push(arr);\n    }\n\n    if (forceFlag) {\n      this.adjustSegment(this.segments.shift());\n    }\n\n    if (this.isPaused) {\n      this.play();\n    }\n  };\n\n  AnimationItem.prototype.resetSegments = function (forceFlag) {\n    this.segments.length = 0;\n    this.segments.push([this.animationData.ip * this.frameRate, Math.floor(this.animationData.op - this.animationData.ip + this.animationData.ip * this.frameRate)]);\n\n    if (forceFlag) {\n      this.adjustSegment(this.segments.shift());\n    }\n  };\n\n  AnimationItem.prototype.checkSegments = function () {\n    if (this.segments.length) {\n      this.pendingSegment = true;\n    }\n  };\n\n  AnimationItem.prototype.remove = function (name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    this.renderer.destroy();\n  };\n\n  AnimationItem.prototype.destroy = function (name) {\n    if (name && this.name != name || this.renderer && this.renderer.destroyed) {\n      return;\n    }\n\n    this.renderer.destroy();\n    this.trigger('destroy');\n    this._cbs = null;\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\n  };\n\n  AnimationItem.prototype.setCurrentRawFrameValue = function (value) {\n    this.currentRawFrame = value; //console.log(this.totalFrames);\n\n    if (this.currentRawFrame >= this.totalFrames) {\n      this.checkSegments();\n\n      if (this.loop === false) {\n        this.currentRawFrame = this.totalFrames - 0.01;\n        this.gotoFrame();\n        this.pause();\n        this.trigger('complete');\n        return;\n      } else {\n        this.trigger('loopComplete');\n        this.playCount += 1;\n\n        if (this.loop !== true && this.playCount == this.loop || this.pendingSegment) {\n          this.currentRawFrame = this.totalFrames - 0.01;\n          this.gotoFrame();\n          this.pause();\n          this.trigger('complete');\n          return;\n        } else {\n          this.currentRawFrame = this.currentRawFrame % this.totalFrames;\n        }\n      }\n    } else if (this.currentRawFrame < 0) {\n      this.checkSegments();\n      this.playCount -= 1;\n\n      if (this.playCount < 0) {\n        this.playCount = 0;\n      }\n\n      if (this.loop === false || this.pendingSegment) {\n        this.currentRawFrame = 0;\n        this.gotoFrame();\n        this.pause();\n        this.trigger('complete');\n        return;\n      } else {\n        this.trigger('loopComplete');\n        this.currentRawFrame = (this.totalFrames + this.currentRawFrame) % this.totalFrames;\n        this.gotoFrame();\n        return;\n      }\n    }\n\n    this.gotoFrame();\n  };\n\n  AnimationItem.prototype.setSpeed = function (val) {\n    this.playSpeed = val;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.setDirection = function (val) {\n    this.playDirection = val < 0 ? -1 : 1;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.updaFrameModifier = function () {\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\n  };\n\n  AnimationItem.prototype.getPath = function () {\n    return this.path;\n  };\n\n  AnimationItem.prototype.getAssetsPath = function (assetData) {\n    var path = '';\n\n    if (this.assetsPath) {\n      var imagePath = assetData.p;\n\n      if (imagePath.indexOf('images/') !== -1) {\n        imagePath = imagePath.split('/')[1];\n      }\n\n      path = this.assetsPath + imagePath;\n    } else {\n      path = this.path;\n      path += assetData.u ? assetData.u : '';\n      path += assetData.p;\n    }\n\n    return path;\n  };\n\n  AnimationItem.prototype.getAssetData = function (id) {\n    var i = 0,\n        len = this.assets.length;\n\n    while (i < len) {\n      if (id == this.assets[i].id) {\n        return this.assets[i];\n      }\n\n      i += 1;\n    }\n  };\n\n  AnimationItem.prototype.hide = function () {\n    this.renderer.hide();\n  };\n\n  AnimationItem.prototype.show = function () {\n    this.renderer.show();\n  };\n\n  AnimationItem.prototype.getAssets = function () {\n    return this.assets;\n  };\n\n  AnimationItem.prototype.trigger = function (name) {\n    if (this._cbs && this._cbs[name]) {\n      switch (name) {\n        case 'enterFrame':\n          this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));\n          break;\n\n        case 'loopComplete':\n          this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n          break;\n\n        case 'complete':\n          this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));\n          break;\n\n        case 'segmentStart':\n          this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n          break;\n\n        case 'destroy':\n          this.triggerEvent(name, new BMDestroyEvent(name, this));\n          break;\n\n        default:\n          this.triggerEvent(name);\n      }\n    }\n\n    if (name === 'enterFrame' && this.onEnterFrame) {\n      this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));\n    }\n\n    if (name === 'loopComplete' && this.onLoopComplete) {\n      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n    }\n\n    if (name === 'complete' && this.onComplete) {\n      this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));\n    }\n\n    if (name === 'segmentStart' && this.onSegmentStart) {\n      this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n    }\n\n    if (name === 'destroy' && this.onDestroy) {\n      this.onDestroy.call(this, new BMDestroyEvent(name, this));\n    }\n  };\n\n  AnimationItem.prototype.addEventListener = _addEventListener;\n  AnimationItem.prototype.removeEventListener = _removeEventListener;\n  AnimationItem.prototype.triggerEvent = _triggerEvent;\n\n  function CanvasRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      className: config && config.className || ''\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1\n    };\n    this.contextData = {\n      saved: Array.apply(null, {\n        length: 15\n      }),\n      savedOp: Array.apply(null, {\n        length: 15\n      }),\n      cArrPos: 0,\n      cTr: new Matrix(),\n      cO: 1\n    };\n    var i,\n        len = 15;\n\n    for (i = 0; i < len; i += 1) {\n      this.contextData.saved[i] = Array.apply(null, {\n        length: 16\n      });\n    }\n\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n  }\n\n  extendPrototype(BaseRenderer, CanvasRenderer);\n\n  CanvasRenderer.prototype.createBase = function (data) {\n    return new CVBaseElement(data, this, this.globalData);\n  };\n\n  CanvasRenderer.prototype.createShape = function (data) {\n    return new CVShapeElement(data, this, this.globalData);\n  };\n\n  CanvasRenderer.prototype.createText = function (data) {\n    return new CVTextElement(data, this, this.globalData);\n  };\n\n  CanvasRenderer.prototype.createImage = function (data) {\n    return new CVImageElement(data, this, this.globalData);\n  };\n\n  CanvasRenderer.prototype.createComp = function (data) {\n    return new CVCompElement(data, this, this.globalData);\n  };\n\n  CanvasRenderer.prototype.createSolid = function (data) {\n    return new CVSolidElement(data, this, this.globalData);\n  };\n\n  CanvasRenderer.prototype.ctxTransform = function (props) {\n    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\n      return;\n    }\n\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);\n      return;\n    }\n\n    this.transformMat.cloneFromProps(props);\n    this.transformMat.transform(this.contextData.cTr.props[0], this.contextData.cTr.props[1], this.contextData.cTr.props[2], this.contextData.cTr.props[3], this.contextData.cTr.props[4], this.contextData.cTr.props[5], this.contextData.cTr.props[6], this.contextData.cTr.props[7], this.contextData.cTr.props[8], this.contextData.cTr.props[9], this.contextData.cTr.props[10], this.contextData.cTr.props[11], this.contextData.cTr.props[12], this.contextData.cTr.props[13], this.contextData.cTr.props[14], this.contextData.cTr.props[15]); //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\n\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\n    var trProps = this.contextData.cTr.props;\n    this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);\n  };\n\n  CanvasRenderer.prototype.ctxOpacity = function (op) {\n    if (op === 1) {\n      return;\n    }\n\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\n      return;\n    }\n\n    this.contextData.cO *= op < 0 ? 0 : op;\n    this.canvasContext.globalAlpha = this.contextData.cO;\n  };\n\n  CanvasRenderer.prototype.reset = function () {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    this.contextData.cArrPos = 0;\n    this.contextData.cTr.reset();\n    this.contextData.cO = 1;\n  };\n\n  CanvasRenderer.prototype.save = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.save();\n      return;\n    }\n\n    if (actionFlag) {\n      this.canvasContext.save();\n    }\n\n    var props = this.contextData.cTr.props;\n\n    if (this.contextData.saved[this.contextData.cArrPos] === null || this.contextData.saved[this.contextData.cArrPos] === undefined) {\n      this.contextData.saved[this.contextData.cArrPos] = new Array(16);\n    }\n\n    var i,\n        arr = this.contextData.saved[this.contextData.cArrPos];\n\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = props[i];\n    }\n\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\n    this.contextData.cArrPos += 1;\n  };\n\n  CanvasRenderer.prototype.restore = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    if (actionFlag) {\n      this.canvasContext.restore();\n    }\n\n    this.contextData.cArrPos -= 1;\n    var popped = this.contextData.saved[this.contextData.cArrPos];\n    var i,\n        arr = this.contextData.cTr.props;\n\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = popped[i];\n    }\n\n    this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13]);\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\n    this.contextData.cO = popped;\n    this.canvasContext.globalAlpha = popped;\n  };\n\n  CanvasRenderer.prototype.configAnimation = function (animData) {\n    if (this.animationItem.wrapper) {\n      this.animationItem.container = document.createElement('canvas');\n      this.animationItem.container.style.width = '100%';\n      this.animationItem.container.style.height = '100%'; //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\n      //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\n\n      this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\n      this.animationItem.wrapper.appendChild(this.animationItem.container);\n      this.canvasContext = this.animationItem.container.getContext('2d');\n\n      if (this.renderConfig.className) {\n        this.animationItem.container.setAttribute('class', this.renderConfig.className);\n      }\n    } else {\n      this.canvasContext = this.renderConfig.context;\n    }\n\n    this.data = animData;\n    this.globalData.canvasContext = this.canvasContext;\n    this.globalData.renderer = this;\n    this.globalData.isDashed = false;\n    this.globalData.totalFrames = Math.floor(animData.tf);\n    this.globalData.compWidth = animData.w;\n    this.globalData.compHeight = animData.h;\n    this.globalData.frameRate = animData.fr;\n    this.globalData.frameId = 0;\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h\n    };\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.layers = animData.layers;\n    this.transformCanvas = {};\n    this.transformCanvas.w = animData.w;\n    this.transformCanvas.h = animData.h;\n    this.globalData.fontManager = new FontManager();\n    this.globalData.fontManager.addChars(animData.chars);\n    this.globalData.fontManager.addFonts(animData.fonts, document.body);\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\n    this.globalData.elementLoaded = this.animationItem.elementLoaded.bind(this.animationItem);\n    this.globalData.addPendingElement = this.animationItem.addPendingElement.bind(this.animationItem);\n    this.globalData.transformCanvas = this.transformCanvas;\n    this.elements = Array.apply(null, {\n      length: animData.layers.length\n    });\n    this.updateContainerSize();\n  };\n\n  CanvasRenderer.prototype.updateContainerSize = function () {\n    var elementWidth, elementHeight;\n\n    if (this.animationItem.wrapper && this.animationItem.container) {\n      elementWidth = this.animationItem.wrapper.offsetWidth;\n      elementHeight = this.animationItem.wrapper.offsetHeight;\n      this.animationItem.container.setAttribute('width', elementWidth * this.renderConfig.dpr);\n      this.animationItem.container.setAttribute('height', elementHeight * this.renderConfig.dpr);\n    } else {\n      elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\n      elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\n    }\n\n    var elementRel, animationRel;\n\n    if (this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1) {\n      var par = this.renderConfig.preserveAspectRatio.split(' ');\n      var fillType = par[1] || 'meet';\n      var pos = par[0] || 'xMidYMid';\n      var xPos = pos.substr(0, 4);\n      var yPos = pos.substr(4);\n      elementRel = elementWidth / elementHeight;\n      animationRel = this.transformCanvas.w / this.transformCanvas.h;\n\n      if (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice') {\n        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      } else {\n        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      }\n\n      if (xPos === 'xMid' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2 * this.renderConfig.dpr;\n      } else if (xPos === 'xMax' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.tx = 0;\n      }\n\n      if (yPos === 'YMid' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2 * this.renderConfig.dpr;\n      } else if (yPos === 'YMax' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.ty = 0;\n      }\n    } else if (this.renderConfig.preserveAspectRatio == 'none') {\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    } else {\n      this.transformCanvas.sx = this.renderConfig.dpr;\n      this.transformCanvas.sy = this.renderConfig.dpr;\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    }\n\n    this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];\n    var i,\n        len = this.elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i] && this.elements[i].data.ty === 0) {\n        this.elements[i].resize(this.globalData.transformCanvas);\n      }\n    }\n  };\n\n  CanvasRenderer.prototype.destroy = function () {\n    if (this.renderConfig.clearCanvas) {\n      this.animationItem.wrapper.innerHTML = '';\n    }\n\n    var i,\n        len = this.layers ? this.layers.length : 0;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.globalData.canvasContext = null;\n    this.animationItem.container = null;\n    this.destroyed = true;\n  };\n\n  CanvasRenderer.prototype.renderFrame = function (num) {\n    if (this.renderedFrame == num && this.renderConfig.clearCanvas === true || this.destroyed || num === null) {\n      return;\n    }\n\n    this.renderedFrame = num;\n    this.globalData.frameNum = num - this.animationItem.firstFrame;\n    this.globalData.frameId += 1;\n    this.globalData.projectInterface.currentFrame = num;\n\n    if (this.renderConfig.clearCanvas === true) {\n      this.reset();\n      this.canvasContext.save(); //this.canvasContext.canvas.width = this.canvasContext.canvas.width;\n\n      this.canvasContext.clearRect(this.transformCanvas.tx, this.transformCanvas.ty, this.transformCanvas.w * this.transformCanvas.sx, this.transformCanvas.h * this.transformCanvas.sy);\n    } else {\n      this.save();\n    }\n\n    this.ctxTransform(this.transformCanvas.props);\n    this.canvasContext.beginPath();\n    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n    this.canvasContext.closePath();\n    this.canvasContext.clip(); //console.log('--------');\n    //console.log('NEW: ',num);\n\n    var i,\n        len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = 0; i < len; i++) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n\n    if (this.renderConfig.clearCanvas !== true) {\n      this.restore();\n    } else {\n      this.canvasContext.restore();\n    }\n  };\n\n  CanvasRenderer.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty == 99) {\n      return;\n    }\n\n    var element = this.createItem(this.layers[pos], this, this.globalData);\n    elements[pos] = element;\n    element.initExpressions();\n\n    if (this.layers[pos].ty === 0) {\n      element.resize(this.globalData.transformCanvas);\n    }\n  };\n\n  CanvasRenderer.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  CanvasRenderer.prototype.hide = function () {\n    this.animationItem.container.style.display = 'none';\n  };\n\n  CanvasRenderer.prototype.show = function () {\n    this.animationItem.container.style.display = 'block';\n  };\n\n  CanvasRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i,\n        len = assets.length;\n    var floatingContainer = document.createElementNS(svgNS, 'g');\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i], this.globalData.comp, this.globalData);\n        comp.initExpressions(); //comp.compInterface = CompExpressionInterface(comp);\n        //Expressions.addLayersInterface(comp.elements, this.globalData.projectInterface);\n\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  function HybridRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1\n    };\n    this.renderConfig = {\n      className: config && config.className || ''\n    };\n    this.pendingElements = [];\n    this.elements = [];\n    this.threeDElements = [];\n    this.destroyed = false;\n    this.camera = null;\n    this.supports3d = true;\n  }\n\n  extendPrototype(BaseRenderer, HybridRenderer);\n  HybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\n\n  HybridRenderer.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  HybridRenderer.prototype.appendElementInPos = function (element, pos) {\n    var newDOMElement = element.getBaseElement();\n\n    if (!newDOMElement) {\n      return;\n    }\n\n    var layer = this.layers[pos];\n\n    if (!layer.ddd || !this.supports3d) {\n      var i = 0;\n      var nextDOMElement, nextLayer;\n\n      while (i < pos) {\n        if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement) {\n          nextLayer = this.elements[i];\n          nextDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\n        }\n\n        i += 1;\n      }\n\n      if (nextDOMElement) {\n        if (!layer.ddd || !this.supports3d) {\n          this.layerElement.insertBefore(newDOMElement, nextDOMElement);\n        }\n      } else {\n        if (!layer.ddd || !this.supports3d) {\n          this.layerElement.appendChild(newDOMElement);\n        }\n      }\n    } else {\n      this.addTo3dContainer(newDOMElement, pos);\n    }\n  };\n\n  HybridRenderer.prototype.createBase = function (data) {\n    return new SVGBaseElement(data, this.layerElement, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createShape = function (data) {\n    if (!this.supports3d) {\n      return new IShapeElement(data, this.layerElement, this.globalData, this);\n    }\n\n    return new HShapeElement(data, this.layerElement, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createText = function (data) {\n    if (!this.supports3d) {\n      return new SVGTextElement(data, this.layerElement, this.globalData, this);\n    }\n\n    return new HTextElement(data, this.layerElement, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createCamera = function (data) {\n    this.camera = new HCameraElement(data, this.layerElement, this.globalData, this);\n    return this.camera;\n  };\n\n  HybridRenderer.prototype.createImage = function (data) {\n    if (!this.supports3d) {\n      return new IImageElement(data, this.layerElement, this.globalData, this);\n    }\n\n    return new HImageElement(data, this.layerElement, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createComp = function (data) {\n    if (!this.supports3d) {\n      return new ICompElement(data, this.layerElement, this.globalData, this);\n    }\n\n    return new HCompElement(data, this.layerElement, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createSolid = function (data) {\n    if (!this.supports3d) {\n      return new ISolidElement(data, this.layerElement, this.globalData, this);\n    }\n\n    return new HSolidElement(data, this.layerElement, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.getThreeDContainerByPos = function (pos) {\n    var i = 0,\n        len = this.threeDElements.length;\n\n    while (i < len) {\n      if (this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\n        return this.threeDElements[i].perspectiveElem;\n      }\n\n      i += 1;\n    }\n  };\n\n  HybridRenderer.prototype.createThreeDContainer = function (pos) {\n    var perspectiveElem = document.createElement('div');\n    styleDiv(perspectiveElem);\n    perspectiveElem.style.width = this.globalData.compSize.w + 'px';\n    perspectiveElem.style.height = this.globalData.compSize.h + 'px';\n    perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\n    var container = document.createElement('div');\n    styleDiv(container);\n    container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n    perspectiveElem.appendChild(container);\n    this.resizerElem.appendChild(perspectiveElem);\n    var threeDContainerData = {\n      container: container,\n      perspectiveElem: perspectiveElem,\n      startPos: pos,\n      endPos: pos\n    };\n    this.threeDElements.push(threeDContainerData);\n    return threeDContainerData;\n  };\n\n  HybridRenderer.prototype.build3dContainers = function () {\n    var i,\n        len = this.layers.length;\n    var lastThreeDContainerData;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.layers[i].ddd) {\n        if (!lastThreeDContainerData) {\n          lastThreeDContainerData = this.createThreeDContainer(i);\n        }\n\n        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\n      } else {\n        lastThreeDContainerData = null;\n      }\n    }\n  };\n\n  HybridRenderer.prototype.addTo3dContainer = function (elem, pos) {\n    var i = 0,\n        len = this.threeDElements.length;\n\n    while (i < len) {\n      if (pos <= this.threeDElements[i].endPos) {\n        var j = this.threeDElements[i].startPos;\n        var nextElement;\n\n        while (j < pos) {\n          if (this.elements[j] && this.elements[j].getBaseElement) {\n            nextElement = this.elements[j].getBaseElement();\n          }\n\n          j += 1;\n        }\n\n        if (nextElement) {\n          this.threeDElements[i].container.insertBefore(elem, nextElement);\n        } else {\n          this.threeDElements[i].container.appendChild(elem);\n        }\n\n        break;\n      }\n\n      i += 1;\n    }\n  };\n\n  HybridRenderer.prototype.configAnimation = function (animData) {\n    var resizerElem = document.createElement('div');\n    var wrapper = this.animationItem.wrapper;\n    resizerElem.style.width = animData.w + 'px';\n    resizerElem.style.height = animData.h + 'px';\n    this.resizerElem = resizerElem;\n    styleDiv(resizerElem);\n    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\n\n    if (this.renderConfig.className) {\n      wrapper.setAttribute('class', this.renderConfig.className);\n    }\n\n    wrapper.appendChild(resizerElem);\n    resizerElem.style.overflow = 'hidden';\n    var svg = document.createElementNS(svgNS, 'svg');\n    svg.setAttribute('width', '1');\n    svg.setAttribute('height', '1');\n    styleDiv(svg);\n    this.resizerElem.appendChild(svg);\n    var defs = document.createElementNS(svgNS, 'defs');\n    svg.appendChild(defs);\n    this.globalData.defs = defs;\n    this.data = animData; //Mask animation\n\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\n    this.globalData.elementLoaded = this.animationItem.elementLoaded.bind(this.animationItem);\n    this.globalData.frameId = 0;\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h\n    };\n    this.globalData.frameRate = animData.fr;\n    this.layers = animData.layers;\n    this.globalData.fontManager = new FontManager();\n    this.globalData.fontManager.addChars(animData.chars);\n    this.globalData.fontManager.addFonts(animData.fonts, svg);\n    this.layerElement = this.resizerElem;\n    this.build3dContainers();\n    this.updateContainerSize();\n  };\n\n  HybridRenderer.prototype.destroy = function () {\n    this.animationItem.wrapper.innerHTML = '';\n    this.animationItem.container = null;\n    this.globalData.defs = null;\n    var i,\n        len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i++) {\n      this.elements[i].destroy();\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  HybridRenderer.prototype.updateContainerSize = function () {\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\n    var elementRel = elementWidth / elementHeight;\n    var animationRel = this.globalData.compSize.w / this.globalData.compSize.h;\n    var sx, sy, tx, ty;\n\n    if (animationRel > elementRel) {\n      sx = elementWidth / this.globalData.compSize.w;\n      sy = elementWidth / this.globalData.compSize.w;\n      tx = 0;\n      ty = (elementHeight - this.globalData.compSize.h * (elementWidth / this.globalData.compSize.w)) / 2;\n    } else {\n      sx = elementHeight / this.globalData.compSize.h;\n      sy = elementHeight / this.globalData.compSize.h;\n      tx = (elementWidth - this.globalData.compSize.w * (elementHeight / this.globalData.compSize.h)) / 2;\n      ty = 0;\n    }\n\n    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,' + sy + ',0,0,0,0,1,0,' + tx + ',' + ty + ',0,1)';\n  };\n\n  HybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\n\n  HybridRenderer.prototype.hide = function () {\n    this.resizerElem.style.display = 'none';\n  };\n\n  HybridRenderer.prototype.show = function () {\n    this.resizerElem.style.display = 'block';\n  };\n\n  HybridRenderer.prototype.initItems = function () {\n    this.buildAllItems();\n\n    if (this.camera) {\n      this.camera.setup();\n    } else {\n      var cWidth = this.globalData.compSize.w;\n      var cHeight = this.globalData.compSize.h;\n      var i,\n          len = this.threeDElements.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth, 2) + Math.pow(cHeight, 2)) + 'px';\n      }\n    }\n  };\n\n  HybridRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i,\n        len = assets.length;\n    var floatingContainer = document.createElement('div');\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i], floatingContainer, this.globalData.comp, null);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  function CVBaseElement(data, comp, globalData) {\n    this.globalData = globalData;\n    this.data = data;\n    this.comp = comp;\n    this.canvasContext = globalData.canvasContext;\n    this.init();\n  }\n\n  createElement(BaseElement, CVBaseElement);\n\n  CVBaseElement.prototype.createElements = function () {\n    this.checkParenting();\n  };\n\n  CVBaseElement.prototype.checkBlendMode = function (globalData) {\n    if (globalData.blendMode !== this.data.bm) {\n      globalData.blendMode = this.data.bm;\n      var blendModeValue = '';\n\n      switch (this.data.bm) {\n        case 0:\n          blendModeValue = 'normal';\n          break;\n\n        case 1:\n          blendModeValue = 'multiply';\n          break;\n\n        case 2:\n          blendModeValue = 'screen';\n          break;\n\n        case 3:\n          blendModeValue = 'overlay';\n          break;\n\n        case 4:\n          blendModeValue = 'darken';\n          break;\n\n        case 5:\n          blendModeValue = 'lighten';\n          break;\n\n        case 6:\n          blendModeValue = 'color-dodge';\n          break;\n\n        case 7:\n          blendModeValue = 'color-burn';\n          break;\n\n        case 8:\n          blendModeValue = 'hard-light';\n          break;\n\n        case 9:\n          blendModeValue = 'soft-light';\n          break;\n\n        case 10:\n          blendModeValue = 'difference';\n          break;\n\n        case 11:\n          blendModeValue = 'exclusion';\n          break;\n\n        case 12:\n          blendModeValue = 'hue';\n          break;\n\n        case 13:\n          blendModeValue = 'saturation';\n          break;\n\n        case 14:\n          blendModeValue = 'color';\n          break;\n\n        case 15:\n          blendModeValue = 'luminosity';\n          break;\n      }\n\n      globalData.canvasContext.globalCompositeOperation = blendModeValue;\n    }\n  };\n\n  CVBaseElement.prototype.renderFrame = function (parentTransform) {\n    if (this.data.ty === 3) {\n      return false;\n    }\n\n    this.checkBlendMode(this.data.ty === 0 ? this.parentGlobalData : this.globalData);\n\n    if (!this.isVisible) {\n      return this.isVisible;\n    }\n\n    this.finalTransform.opMdf = this.finalTransform.op.mdf;\n    this.finalTransform.matMdf = this.finalTransform.mProp.mdf;\n    this.finalTransform.opacity = this.finalTransform.op.v;\n    var mat;\n    var finalMat = this.finalTransform.mat;\n\n    if (this.hierarchy) {\n      var i,\n          len = this.hierarchy.length;\n      mat = this.finalTransform.mProp.v.props;\n      finalMat.cloneFromProps(mat);\n\n      for (i = 0; i < len; i += 1) {\n        this.finalTransform.matMdf = this.hierarchy[i].finalTransform.mProp.mdf ? true : this.finalTransform.matMdf;\n        mat = this.hierarchy[i].finalTransform.mProp.v.props;\n        finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\n      }\n    } else {\n      if (!parentTransform) {\n        finalMat.cloneFromProps(this.finalTransform.mProp.v.props);\n      } else {\n        mat = this.finalTransform.mProp.v.props;\n        finalMat.cloneFromProps(mat);\n      }\n    }\n\n    if (parentTransform) {\n      mat = parentTransform.mat.props;\n      finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\n      this.finalTransform.opacity *= parentTransform.opacity;\n      this.finalTransform.opMdf = parentTransform.opMdf ? true : this.finalTransform.opMdf;\n      this.finalTransform.matMdf = parentTransform.matMdf ? true : this.finalTransform.matMdf;\n    }\n\n    if (this.data.hasMask) {\n      this.globalData.renderer.save(true);\n      this.maskManager.renderFrame(this.data.ty === 0 ? null : finalMat);\n    }\n\n    if (this.data.hd) {\n      this.isVisible = false;\n    }\n\n    return this.isVisible;\n  };\n\n  CVBaseElement.prototype.addMasks = function (data) {\n    this.maskManager = new CVMaskElement(data, this, this.globalData);\n  };\n\n  CVBaseElement.prototype.destroy = function () {\n    this.canvasContext = null;\n    this.data = null;\n    this.globalData = null;\n\n    if (this.maskManager) {\n      this.maskManager.destroy();\n    }\n  };\n\n  CVBaseElement.prototype.mHelper = new Matrix();\n\n  function CVCompElement(data, comp, globalData) {\n    this._parent.constructor.call(this, data, comp, globalData);\n\n    var compGlobalData = {};\n\n    for (var s in globalData) {\n      if (globalData.hasOwnProperty(s)) {\n        compGlobalData[s] = globalData[s];\n      }\n    }\n\n    compGlobalData.renderer = this;\n    compGlobalData.compHeight = this.data.h;\n    compGlobalData.compWidth = this.data.w;\n    this.renderConfig = {\n      clearCanvas: true\n    };\n    this.contextData = {\n      saved: Array.apply(null, {\n        length: 15\n      }),\n      savedOp: Array.apply(null, {\n        length: 15\n      }),\n      cArrPos: 0,\n      cTr: new Matrix(),\n      cO: 1\n    };\n    this.completeLayers = false;\n    var i,\n        len = 15;\n\n    for (i = 0; i < len; i += 1) {\n      this.contextData.saved[i] = Array.apply(null, {\n        length: 16\n      });\n    }\n\n    this.transformMat = new Matrix();\n    this.parentGlobalData = this.globalData;\n    var cv = document.createElement('canvas'); //document.body.appendChild(cv);\n\n    compGlobalData.canvasContext = cv.getContext('2d');\n    this.canvasContext = compGlobalData.canvasContext;\n    cv.width = this.data.w;\n    cv.height = this.data.h;\n    this.canvas = cv;\n    this.globalData = compGlobalData;\n    this.layers = data.layers;\n    this.pendingElements = [];\n    this.elements = Array.apply(null, {\n      length: this.layers.length\n    });\n\n    if (this.data.tm) {\n      this.tm = PropertyFactory.getProp(this, this.data.tm, 0, globalData.frameRate, this.dynamicProperties);\n    }\n\n    if (this.data.xt || !globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n  }\n\n  createElement(CVBaseElement, CVCompElement);\n  CVCompElement.prototype.ctxTransform = CanvasRenderer.prototype.ctxTransform;\n  CVCompElement.prototype.ctxOpacity = CanvasRenderer.prototype.ctxOpacity;\n  CVCompElement.prototype.save = CanvasRenderer.prototype.save;\n  CVCompElement.prototype.restore = CanvasRenderer.prototype.restore;\n\n  CVCompElement.prototype.reset = function () {\n    this.contextData.cArrPos = 0;\n    this.contextData.cTr.reset();\n    this.contextData.cO = 1;\n  };\n\n  CVCompElement.prototype.resize = function (transformCanvas) {\n    var maxScale = Math.max(transformCanvas.sx, transformCanvas.sy);\n    this.canvas.width = this.data.w * maxScale;\n    this.canvas.height = this.data.h * maxScale;\n    this.transformCanvas = {\n      sc: maxScale,\n      w: this.data.w * maxScale,\n      h: this.data.h * maxScale,\n      props: [maxScale, 0, 0, 0, 0, maxScale, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\n    };\n    var i,\n        len = this.elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i] && this.elements[i].data.ty === 0) {\n        this.elements[i].resize(transformCanvas);\n      }\n    }\n  };\n\n  CVCompElement.prototype.prepareFrame = function (num) {\n    this.globalData.frameId = this.parentGlobalData.frameId;\n    this.globalData.mdf = false;\n\n    this._parent.prepareFrame.call(this, num);\n\n    if (this.isVisible === false && !this.data.xt) {\n      return;\n    }\n\n    var timeRemapped = num;\n\n    if (this.tm) {\n      timeRemapped = this.tm.v;\n\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1;\n      }\n    }\n\n    this.renderedFrame = timeRemapped / this.data.sr;\n    var i,\n        len = this.elements.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(timeRemapped / this.data.sr - this.layers[i].st);\n\n        if (this.elements[i].data.ty === 0 && this.elements[i].globalData.mdf) {\n          this.globalData.mdf = true;\n        }\n      }\n    }\n\n    if (this.globalData.mdf && !this.data.xt) {\n      this.canvasContext.clearRect(0, 0, this.data.w, this.data.h);\n      this.ctxTransform(this.transformCanvas.props);\n    }\n  };\n\n  CVCompElement.prototype.renderFrame = function (parentMatrix) {\n    if (this._parent.renderFrame.call(this, parentMatrix) === false) {\n      return;\n    }\n\n    if (this.globalData.mdf) {\n      var i,\n          len = this.layers.length;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n    }\n\n    if (this.data.hasMask) {\n      this.globalData.renderer.restore(true);\n    }\n\n    if (this.firstFrame) {\n      this.firstFrame = false;\n    }\n\n    this.parentGlobalData.renderer.save();\n    this.parentGlobalData.renderer.ctxTransform(this.finalTransform.mat.props);\n    this.parentGlobalData.renderer.ctxOpacity(this.finalTransform.opacity);\n    this.parentGlobalData.renderer.canvasContext.drawImage(this.canvas, 0, 0, this.data.w, this.data.h);\n    this.parentGlobalData.renderer.restore();\n\n    if (this.globalData.mdf) {\n      this.reset();\n    }\n  };\n\n  CVCompElement.prototype.setElements = function (elems) {\n    this.elements = elems;\n  };\n\n  CVCompElement.prototype.getElements = function () {\n    return this.elements;\n  };\n\n  CVCompElement.prototype.destroy = function () {\n    var i,\n        len = this.layers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      this.elements[i].destroy();\n    }\n\n    this.layers = null;\n    this.elements = null;\n\n    this._parent.destroy.call(this._parent);\n  };\n\n  CVCompElement.prototype.checkLayers = CanvasRenderer.prototype.checkLayers;\n  CVCompElement.prototype.buildItem = CanvasRenderer.prototype.buildItem;\n  CVCompElement.prototype.checkPendingElements = CanvasRenderer.prototype.checkPendingElements;\n  CVCompElement.prototype.addPendingElement = CanvasRenderer.prototype.addPendingElement;\n  CVCompElement.prototype.buildAllItems = CanvasRenderer.prototype.buildAllItems;\n  CVCompElement.prototype.createItem = CanvasRenderer.prototype.createItem;\n  CVCompElement.prototype.createImage = CanvasRenderer.prototype.createImage;\n  CVCompElement.prototype.createComp = CanvasRenderer.prototype.createComp;\n  CVCompElement.prototype.createSolid = CanvasRenderer.prototype.createSolid;\n  CVCompElement.prototype.createShape = CanvasRenderer.prototype.createShape;\n  CVCompElement.prototype.createText = CanvasRenderer.prototype.createText;\n  CVCompElement.prototype.createBase = CanvasRenderer.prototype.createBase;\n  CVCompElement.prototype.buildElementParenting = CanvasRenderer.prototype.buildElementParenting;\n\n  function CVImageElement(data, comp, globalData) {\n    this.assetData = globalData.getAssetData(data.refId);\n\n    this._parent.constructor.call(this, data, comp, globalData);\n\n    this.globalData.addPendingElement();\n  }\n\n  createElement(CVBaseElement, CVImageElement);\n\n  CVImageElement.prototype.createElements = function () {\n    var imageLoaded = function () {\n      this.globalData.elementLoaded();\n\n      if (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = this.assetData.w;\n        canvas.height = this.assetData.h;\n        var ctx = canvas.getContext('2d');\n        var imgW = this.img.width;\n        var imgH = this.img.height;\n        var imgRel = imgW / imgH;\n        var canvasRel = this.assetData.w / this.assetData.h;\n        var widthCrop, heightCrop;\n\n        if (imgRel > canvasRel) {\n          heightCrop = imgH;\n          widthCrop = heightCrop * canvasRel;\n        } else {\n          widthCrop = imgW;\n          heightCrop = widthCrop / canvasRel;\n        }\n\n        ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);\n        this.img = canvas;\n      }\n    }.bind(this);\n\n    var imageFailed = function () {\n      this.failed = true;\n      this.globalData.elementLoaded();\n    }.bind(this);\n\n    this.img = new Image();\n    this.img.addEventListener('load', imageLoaded, false);\n    this.img.addEventListener('error', imageFailed, false);\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.img.src = assetPath;\n\n    this._parent.createElements.call(this);\n  };\n\n  CVImageElement.prototype.renderFrame = function (parentMatrix) {\n    if (this.failed) {\n      return;\n    }\n\n    if (this._parent.renderFrame.call(this, parentMatrix) === false) {\n      return;\n    }\n\n    var ctx = this.canvasContext;\n    this.globalData.renderer.save();\n    var finalMat = this.finalTransform.mat.props;\n    this.globalData.renderer.ctxTransform(finalMat);\n    this.globalData.renderer.ctxOpacity(this.finalTransform.opacity);\n    ctx.drawImage(this.img, 0, 0);\n    this.globalData.renderer.restore(this.data.hasMask);\n\n    if (this.firstFrame) {\n      this.firstFrame = false;\n    }\n  };\n\n  CVImageElement.prototype.destroy = function () {\n    this.img = null;\n\n    this._parent.destroy.call(this._parent);\n  };\n\n  function CVMaskElement(data, element) {\n    this.data = data;\n    this.element = element;\n    this.dynamicProperties = [];\n    this.masksProperties = this.data.masksProperties;\n    this.viewData = Array.apply(null, {\n      length: this.masksProperties.length\n    });\n    var i,\n        len = this.masksProperties.length;\n\n    for (i = 0; i < len; i++) {\n      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3, this.dynamicProperties, null);\n    }\n  }\n\n  CVMaskElement.prototype.prepareFrame = function (num) {\n    var i,\n        len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue(num);\n\n      if (this.dynamicProperties[i].mdf) {\n        this.element.globalData.mdf = true;\n      }\n    }\n  };\n\n  CVMaskElement.prototype.renderFrame = function (transform) {\n    var ctx = this.element.canvasContext;\n    var i,\n        len = this.data.masksProperties.length;\n    var pt,\n        pt2,\n        pt3,\n        data,\n        hasMasks = false;\n\n    for (i = 0; i < len; i++) {\n      if (this.masksProperties[i].mode === 'n') {\n        continue;\n      }\n\n      if (hasMasks === false) {\n        ctx.beginPath();\n        hasMasks = true;\n      }\n\n      if (this.masksProperties[i].inv) {\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.element.globalData.compWidth, 0);\n        ctx.lineTo(this.element.globalData.compWidth, this.element.globalData.compHeight);\n        ctx.lineTo(0, this.element.globalData.compHeight);\n        ctx.lineTo(0, 0);\n      }\n\n      data = this.viewData[i].v;\n      pt = transform ? transform.applyToPointArray(data.v[0][0], data.v[0][1], 0) : data.v[0];\n      ctx.moveTo(pt[0], pt[1]);\n      var j,\n          jLen = data._length;\n\n      for (j = 1; j < jLen; j++) {\n        pt = transform ? transform.applyToPointArray(data.o[j - 1][0], data.o[j - 1][1], 0) : data.o[j - 1];\n        pt2 = transform ? transform.applyToPointArray(data.i[j][0], data.i[j][1], 0) : data.i[j];\n        pt3 = transform ? transform.applyToPointArray(data.v[j][0], data.v[j][1], 0) : data.v[j];\n        ctx.bezierCurveTo(pt[0], pt[1], pt2[0], pt2[1], pt3[0], pt3[1]);\n      }\n\n      pt = transform ? transform.applyToPointArray(data.o[j - 1][0], data.o[j - 1][1], 0) : data.o[j - 1];\n      pt2 = transform ? transform.applyToPointArray(data.i[0][0], data.i[0][1], 0) : data.i[0];\n      pt3 = transform ? transform.applyToPointArray(data.v[0][0], data.v[0][1], 0) : data.v[0];\n      ctx.bezierCurveTo(pt[0], pt[1], pt2[0], pt2[1], pt3[0], pt3[1]);\n    }\n\n    if (hasMasks) {\n      ctx.clip();\n    }\n  };\n\n  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\n\n  CVMaskElement.prototype.destroy = function () {\n    this.element = null;\n  };\n\n  function CVShapeElement(data, comp, globalData) {\n    this.shapes = [];\n    this.shapesData = data.shapes;\n    this.stylesList = [];\n    this.itemsData = [];\n    this.prevViewData = [];\n    this.shapeModifiers = [];\n    this.processedElements = [];\n\n    this._parent.constructor.call(this, data, comp, globalData);\n  }\n\n  createElement(CVBaseElement, CVShapeElement);\n  CVShapeElement.prototype.transformHelper = {\n    opacity: 1,\n    mat: new Matrix(),\n    matMdf: false,\n    opMdf: false\n  };\n  CVShapeElement.prototype.dashResetter = [];\n\n  CVShapeElement.prototype.createElements = function () {\n    this._parent.createElements.call(this);\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.dynamicProperties, true);\n  };\n\n  CVShapeElement.prototype.createStyleElement = function (data, dynamicProperties) {\n    var styleElem = {\n      data: data,\n      type: data.ty,\n      elements: []\n    };\n    var elementData = {};\n\n    if (data.ty == 'fl' || data.ty == 'st') {\n      elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, dynamicProperties);\n\n      if (!elementData.c.k) {\n        styleElem.co = 'rgb(' + bm_floor(elementData.c.v[0]) + ',' + bm_floor(elementData.c.v[1]) + ',' + bm_floor(elementData.c.v[2]) + ')';\n      }\n    }\n\n    elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, dynamicProperties);\n\n    if (data.ty == 'st') {\n      styleElem.lc = this.lcEnum[data.lc] || 'round';\n      styleElem.lj = this.ljEnum[data.lj] || 'round';\n\n      if (data.lj == 1) {\n        styleElem.ml = data.ml;\n      }\n\n      elementData.w = PropertyFactory.getProp(this, data.w, 0, null, dynamicProperties);\n\n      if (!elementData.w.k) {\n        styleElem.wi = elementData.w.v;\n      }\n\n      if (data.d) {\n        var d = PropertyFactory.getDashProp(this, data.d, 'canvas', dynamicProperties);\n        elementData.d = d;\n\n        if (!elementData.d.k) {\n          styleElem.da = elementData.d.dasharray;\n          styleElem.do = elementData.d.dashoffset;\n        }\n      }\n    } else {\n      styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\n    }\n\n    this.stylesList.push(styleElem);\n    elementData.style = styleElem;\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = {\n      it: [],\n      prevViewData: []\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createTransformElement = function (data, dynamicProperties) {\n    var elementData = {\n      transform: {\n        mat: new Matrix(),\n        opacity: 1,\n        matMdf: false,\n        opMdf: false,\n        op: PropertyFactory.getProp(this, data.o, 0, 0.01, dynamicProperties),\n        mProps: PropertyFactory.getProp(this, data, 2, null, dynamicProperties)\n      },\n      elements: []\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createShapeElement = function (data, dynamicProperties) {\n    var elementData = {\n      nodes: [],\n      trNodes: [],\n      tr: [0, 0, 0, 0, 0, 0]\n    };\n    var ty = 4;\n\n    if (data.ty == 'rc') {\n      ty = 5;\n    } else if (data.ty == 'el') {\n      ty = 6;\n    } else if (data.ty == 'sr') {\n      ty = 7;\n    }\n\n    elementData.sh = ShapePropertyFactory.getShapeProp(this, data, ty, dynamicProperties);\n    this.shapes.push(elementData.sh);\n    this.addShapeToModifiers(elementData);\n    jLen = this.stylesList.length;\n    var hasStrokes = false,\n        hasFills = false;\n\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        this.stylesList[j].elements.push(elementData);\n\n        if (this.stylesList[j].type === 'st') {\n          hasStrokes = true;\n        } else {\n          hasFills = true;\n        }\n      }\n    }\n\n    elementData.st = hasStrokes;\n    elementData.fl = hasFills;\n    return elementData;\n  };\n\n  CVShapeElement.prototype.reloadShapes = function () {\n    this.firstFrame = true;\n    var i,\n        len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.dynamicProperties, true);\n    var i,\n        len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n  };\n\n  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, dynamicProperties, render) {\n    var i,\n        len = arr.length - 1;\n    var j, jLen;\n    var ownArrays = [],\n        ownModifiers = [],\n        processedPos;\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._render = render;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty == 'fl' || arr[i].ty == 'st') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], dynamicProperties);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        ownArrays.push(itemsData[i].style);\n      } else if (arr[i].ty == 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, dynamicProperties, render);\n      } else if (arr[i].ty == 'tr') {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], dynamicProperties);\n        }\n      } else if (arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], dynamicProperties);\n        }\n      } else if (arr[i].ty == 'tm' || arr[i].ty == 'rd') {\n        if (!processedPos) {\n          var modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i], dynamicProperties);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty == 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData, dynamicProperties);\n          this.shapeModifiers.push(modifier);\n          render = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    len = ownArrays.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownArrays[i].closed = true;\n    }\n\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  CVShapeElement.prototype.addShapeToModifiers = IShapeElement.prototype.addShapeToModifiers;\n  CVShapeElement.prototype.renderModifiers = IShapeElement.prototype.renderModifiers;\n  CVShapeElement.prototype.lcEnum = IShapeElement.prototype.lcEnum;\n  CVShapeElement.prototype.ljEnum = IShapeElement.prototype.ljEnum;\n  CVShapeElement.prototype.searchProcessedElement = IShapeElement.prototype.searchProcessedElement;\n  CVShapeElement.prototype.addProcessedElement = IShapeElement.prototype.addProcessedElement;\n\n  CVShapeElement.prototype.renderFrame = function (parentMatrix) {\n    if (this._parent.renderFrame.call(this, parentMatrix) === false) {\n      return;\n    }\n\n    this.transformHelper.mat.reset();\n    this.transformHelper.opacity = this.finalTransform.opacity;\n    this.transformHelper.matMdf = false;\n    this.transformHelper.opMdf = this.finalTransform.opMdf;\n    this.renderModifiers();\n    this.renderShape(this.transformHelper, null, null, true);\n\n    if (this.data.hasMask) {\n      this.globalData.renderer.restore(true);\n    }\n  };\n\n  CVShapeElement.prototype.renderShape = function (parentTransform, items, data, isMain) {\n    var i, len;\n\n    if (!items) {\n      items = this.shapesData;\n      len = this.stylesList.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.stylesList[i].d = '';\n        this.stylesList[i].mdf = false;\n      }\n    }\n\n    if (!data) {\n      data = this.itemsData;\n    } ///\n    ///\n\n\n    len = items.length - 1;\n    var groupTransform, groupMatrix;\n    groupTransform = parentTransform;\n\n    for (i = len; i >= 0; i -= 1) {\n      if (items[i].ty == 'tr') {\n        groupTransform = data[i].transform;\n        var mtArr = data[i].transform.mProps.v.props;\n        groupTransform.matMdf = groupTransform.mProps.mdf;\n        groupTransform.opMdf = groupTransform.op.mdf;\n        groupMatrix = groupTransform.mat;\n        groupMatrix.cloneFromProps(mtArr);\n\n        if (parentTransform) {\n          var props = parentTransform.mat.props;\n          groupTransform.opacity = parentTransform.opacity;\n          groupTransform.opacity *= data[i].transform.op.v;\n          groupTransform.matMdf = parentTransform.matMdf ? true : groupTransform.matMdf;\n          groupTransform.opMdf = parentTransform.opMdf ? true : groupTransform.opMdf;\n          groupMatrix.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n        } else {\n          groupTransform.opacity = groupTransform.op.o;\n        }\n      } else if (items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr') {\n        this.renderPath(items[i], data[i], groupTransform);\n      } else if (items[i].ty == 'fl') {\n        this.renderFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty == 'st') {\n        this.renderStroke(items[i], data[i], groupTransform);\n      } else if (items[i].ty == 'gr') {\n        this.renderShape(groupTransform, items[i].it, data[i].it);\n      } else if (items[i].ty == 'tm') {//\n      }\n    }\n\n    if (!isMain) {\n      return;\n    }\n\n    len = this.stylesList.length;\n    var j,\n        jLen,\n        k,\n        kLen,\n        elems,\n        nodes,\n        renderer = this.globalData.renderer,\n        ctx = this.globalData.canvasContext,\n        type;\n    renderer.save();\n    renderer.ctxTransform(this.finalTransform.mat.props);\n\n    for (i = 0; i < len; i += 1) {\n      type = this.stylesList[i].type;\n\n      if (type === 'st' && this.stylesList[i].wi === 0 || !this.stylesList[i].data._render) {\n        continue;\n      }\n\n      renderer.save();\n      elems = this.stylesList[i].elements;\n\n      if (type === 'st') {\n        ctx.strokeStyle = this.stylesList[i].co;\n        ctx.lineWidth = this.stylesList[i].wi;\n        ctx.lineCap = this.stylesList[i].lc;\n        ctx.lineJoin = this.stylesList[i].lj;\n        ctx.miterLimit = this.stylesList[i].ml || 0;\n      } else {\n        ctx.fillStyle = this.stylesList[i].co;\n      }\n\n      renderer.ctxOpacity(this.stylesList[i].coOp);\n\n      if (type !== 'st') {\n        ctx.beginPath();\n      }\n\n      jLen = elems.length;\n\n      for (j = 0; j < jLen; j += 1) {\n        if (type === 'st') {\n          ctx.beginPath();\n\n          if (this.stylesList[i].da) {\n            ctx.setLineDash(this.stylesList[i].da);\n            ctx.lineDashOffset = this.stylesList[i].do;\n            this.globalData.isDashed = true;\n          } else if (this.globalData.isDashed) {\n            ctx.setLineDash(this.dashResetter);\n            this.globalData.isDashed = false;\n          }\n        }\n\n        nodes = elems[j].trNodes;\n        kLen = nodes.length;\n\n        for (k = 0; k < kLen; k += 1) {\n          if (nodes[k].t == 'm') {\n            ctx.moveTo(nodes[k].p[0], nodes[k].p[1]);\n          } else if (nodes[k].t == 'c') {\n            ctx.bezierCurveTo(nodes[k].p1[0], nodes[k].p1[1], nodes[k].p2[0], nodes[k].p2[1], nodes[k].p3[0], nodes[k].p3[1]);\n          } else {\n            ctx.closePath();\n          }\n        }\n\n        if (type === 'st') {\n          ctx.stroke();\n        }\n      }\n\n      if (type !== 'st') {\n        ctx.fill(this.stylesList[i].r);\n      }\n\n      renderer.restore();\n    }\n\n    renderer.restore();\n\n    if (this.firstFrame) {\n      this.firstFrame = false;\n    }\n  };\n\n  CVShapeElement.prototype.renderPath = function (pathData, itemData, groupTransform) {\n    var len, i, j, jLen;\n    var redraw = groupTransform.matMdf || itemData.sh.mdf || this.firstFrame;\n\n    if (redraw) {\n      var paths = itemData.sh.paths,\n          groupTransformMat = groupTransform.mat;\n      jLen = paths._length;\n      var pathStringTransformed = itemData.trNodes;\n      pathStringTransformed.length = 0;\n\n      for (j = 0; j < jLen; j += 1) {\n        var pathNodes = paths.shapes[j];\n\n        if (pathNodes && pathNodes.v) {\n          len = pathNodes._length;\n\n          for (i = 1; i < len; i += 1) {\n            if (i == 1) {\n              pathStringTransformed.push({\n                t: 'm',\n                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n              });\n            }\n\n            pathStringTransformed.push({\n              t: 'c',\n              p1: groupTransformMat.applyToPointArray(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1], 0),\n              p2: groupTransformMat.applyToPointArray(pathNodes.i[i][0], pathNodes.i[i][1], 0),\n              p3: groupTransformMat.applyToPointArray(pathNodes.v[i][0], pathNodes.v[i][1], 0)\n            });\n          }\n\n          if (len == 1) {\n            pathStringTransformed.push({\n              t: 'm',\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n            });\n          }\n\n          if (pathNodes.c && len) {\n            pathStringTransformed.push({\n              t: 'c',\n              p1: groupTransformMat.applyToPointArray(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1], 0),\n              p2: groupTransformMat.applyToPointArray(pathNodes.i[0][0], pathNodes.i[0][1], 0),\n              p3: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n            });\n            pathStringTransformed.push({\n              t: 'z'\n            });\n          }\n\n          itemData.lStr = pathStringTransformed;\n        }\n      }\n\n      if (itemData.st) {\n        for (i = 0; i < 16; i += 1) {\n          itemData.tr[i] = groupTransform.mat.props[i];\n        }\n      }\n\n      itemData.trNodes = pathStringTransformed;\n    }\n  };\n\n  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n\n    if (itemData.c.mdf || this.firstFrame) {\n      styleElem.co = 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o.mdf || groupTransform.opMdf || this.firstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n  };\n\n  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style; //TODO fix dashes\n\n    var d = itemData.d;\n    var dasharray, dashoffset;\n\n    if (d && (d.mdf || this.firstFrame)) {\n      styleElem.da = d.dasharray;\n      styleElem.do = d.dashoffset;\n    }\n\n    if (itemData.c.mdf || this.firstFrame) {\n      styleElem.co = 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o.mdf || groupTransform.opMdf || this.firstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n\n    if (itemData.w.mdf || this.firstFrame) {\n      styleElem.wi = itemData.w.v;\n    }\n  };\n\n  CVShapeElement.prototype.destroy = function () {\n    this.shapesData = null;\n    this.globalData = null;\n    this.canvasContext = null;\n    this.stylesList.length = 0;\n    this.itemData.length = 0;\n\n    this._parent.destroy.call(this._parent);\n  };\n\n  function CVSolidElement(data, comp, globalData) {\n    this._parent.constructor.call(this, data, comp, globalData);\n  }\n\n  createElement(CVBaseElement, CVSolidElement);\n\n  CVSolidElement.prototype.renderFrame = function (parentMatrix) {\n    if (this._parent.renderFrame.call(this, parentMatrix) === false) {\n      return;\n    }\n\n    var ctx = this.canvasContext;\n    this.globalData.renderer.save();\n    this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\n    this.globalData.renderer.ctxOpacity(this.finalTransform.opacity);\n    ctx.fillStyle = this.data.sc;\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\n    this.globalData.renderer.restore(this.data.hasMask);\n\n    if (this.firstFrame) {\n      this.firstFrame = false;\n    }\n  };\n\n  function CVTextElement(data, comp, globalData) {\n    this.textSpans = [];\n    this.yOffset = 0;\n    this.fillColorAnim = false;\n    this.strokeColorAnim = false;\n    this.strokeWidthAnim = false;\n    this.stroke = false;\n    this.fill = false;\n    this.justifyOffset = 0;\n    this.currentRender = null;\n    this.renderType = 'canvas';\n    this.values = {\n      fill: 'rgba(0,0,0,0)',\n      stroke: 'rgba(0,0,0,0)',\n      sWidth: 0,\n      fValue: ''\n    };\n\n    this._parent.constructor.call(this, data, comp, globalData);\n  }\n\n  createElement(CVBaseElement, CVTextElement);\n  extendPrototype(ITextElement, CVTextElement);\n  CVTextElement.prototype.tHelper = document.createElement('canvas').getContext('2d');\n\n  CVTextElement.prototype.createElements = function () {\n    this._parent.createElements.call(this); //console.log('this.data: ',this.data);\n\n  };\n\n  CVTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = Array.apply(null, {\n      length: documentData.l ? documentData.l.length : 0\n    });\n    var hasFill = false;\n\n    if (documentData.fc) {\n      hasFill = true;\n      this.values.fill = this.buildColor(documentData.fc);\n    } else {\n      this.values.fill = 'rgba(0,0,0,0)';\n    }\n\n    this.fill = hasFill;\n    var hasStroke = false;\n\n    if (documentData.sc) {\n      hasStroke = true;\n      this.values.stroke = this.buildColor(documentData.sc);\n      this.values.sWidth = documentData.sw;\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n    var i, len;\n    var letters = documentData.l;\n    var matrixHelper = this.mHelper;\n    this.stroke = hasStroke;\n    this.values.fValue = documentData.s + 'px ' + this.globalData.fontManager.getFontByName(documentData.f).fFamily;\n    len = documentData.t.length; //this.tHelper.font = this.values.fValue;\n\n    var charData,\n        shapeData,\n        k,\n        kLen,\n        shapes,\n        j,\n        jLen,\n        pathNodes,\n        commands,\n        pathArr,\n        singleShape = this.data.singleShape;\n    var trackingOffset = documentData.tr / 1000 * documentData.s;\n    var xPos = 0,\n        yPos = 0,\n        firstLine = true;\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      charData = this.globalData.fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n      shapeData = charData && charData.data || {};\n      matrixHelper.reset();\n\n      if (singleShape && letters[i].n) {\n        xPos = -trackingOffset;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        firstLine = false;\n      }\n\n      shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\n      jLen = shapes.length;\n      matrixHelper.scale(documentData.s / 100, documentData.s / 100);\n\n      if (singleShape) {\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n      }\n\n      commands = Array.apply(null, {\n        length: jLen\n      });\n\n      for (j = 0; j < jLen; j += 1) {\n        kLen = shapes[j].ks.k.i.length;\n        pathNodes = shapes[j].ks.k;\n        pathArr = [];\n\n        for (k = 1; k < kLen; k += 1) {\n          if (k == 1) {\n            pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n          }\n\n          pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0), matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0));\n        }\n\n        pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n        commands[j] = pathArr;\n      }\n\n      if (singleShape) {\n        xPos += letters[i].l;\n        xPos += trackingOffset;\n      }\n\n      if (this.textSpans[cnt]) {\n        this.textSpans[cnt].elem = commands;\n      } else {\n        this.textSpans[cnt] = {\n          elem: commands\n        };\n      }\n\n      cnt += 1;\n    }\n  };\n\n  CVTextElement.prototype.renderFrame = function (parentMatrix) {\n    if (this._parent.renderFrame.call(this, parentMatrix) === false) {\n      return;\n    }\n\n    var ctx = this.canvasContext;\n    var finalMat = this.finalTransform.mat.props;\n    this.globalData.renderer.save();\n    this.globalData.renderer.ctxTransform(finalMat);\n    this.globalData.renderer.ctxOpacity(this.finalTransform.opacity);\n    ctx.font = this.values.fValue;\n    ctx.lineCap = 'butt';\n    ctx.lineJoin = 'miter';\n    ctx.miterLimit = 4;\n\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n    }\n\n    var i, len, j, jLen, k, kLen;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var lastFill = null,\n        lastStroke = null,\n        lastStrokeW = null,\n        commands,\n        pathArr;\n\n    for (i = 0; i < len; i += 1) {\n      if (letters[i].n) {\n        continue;\n      }\n\n      renderedLetter = renderedLetters[i];\n\n      if (renderedLetter) {\n        this.globalData.renderer.save();\n        this.globalData.renderer.ctxTransform(renderedLetter.p);\n        this.globalData.renderer.ctxOpacity(renderedLetter.o);\n      }\n\n      if (this.fill) {\n        if (renderedLetter && renderedLetter.fc) {\n          if (lastFill !== renderedLetter.fc) {\n            lastFill = renderedLetter.fc;\n            ctx.fillStyle = renderedLetter.fc;\n          }\n        } else if (lastFill !== this.values.fill) {\n          lastFill = this.values.fill;\n          ctx.fillStyle = this.values.fill;\n        }\n\n        commands = this.textSpans[i].elem;\n        jLen = commands.length;\n        this.globalData.canvasContext.beginPath();\n\n        for (j = 0; j < jLen; j += 1) {\n          pathArr = commands[j];\n          kLen = pathArr.length;\n          this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n          for (k = 2; k < kLen; k += 6) {\n            this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n          }\n        }\n\n        this.globalData.canvasContext.closePath();\n        this.globalData.canvasContext.fill(); ///ctx.fillText(this.textSpans[i].val,0,0);\n      }\n\n      if (this.stroke) {\n        if (renderedLetter && renderedLetter.sw) {\n          if (lastStrokeW !== renderedLetter.sw) {\n            lastStrokeW = renderedLetter.sw;\n            ctx.lineWidth = renderedLetter.sw;\n          }\n        } else if (lastStrokeW !== this.values.sWidth) {\n          lastStrokeW = this.values.sWidth;\n          ctx.lineWidth = this.values.sWidth;\n        }\n\n        if (renderedLetter && renderedLetter.sc) {\n          if (lastStroke !== renderedLetter.sc) {\n            lastStroke = renderedLetter.sc;\n            ctx.strokeStyle = renderedLetter.sc;\n          }\n        } else if (lastStroke !== this.values.stroke) {\n          lastStroke = this.values.stroke;\n          ctx.strokeStyle = this.values.stroke;\n        }\n\n        commands = this.textSpans[i].elem;\n        jLen = commands.length;\n        this.globalData.canvasContext.beginPath();\n\n        for (j = 0; j < jLen; j += 1) {\n          pathArr = commands[j];\n          kLen = pathArr.length;\n          this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n          for (k = 2; k < kLen; k += 6) {\n            this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n          }\n        }\n\n        this.globalData.canvasContext.closePath();\n        this.globalData.canvasContext.stroke(); ///ctx.strokeText(letters[i].val,0,0);\n      }\n\n      if (renderedLetter) {\n        this.globalData.renderer.restore();\n      }\n    }\n    /*if(this.data.hasMask){\r\n     this.globalData.renderer.restore(true);\r\n     }*/\n\n\n    this.globalData.renderer.restore(this.data.hasMask);\n\n    if (this.firstFrame) {\n      this.firstFrame = false;\n    }\n  };\n\n  function HBaseElement(data, parentContainer, globalData, comp, placeholder) {\n    this.globalData = globalData;\n    this.comp = comp;\n    this.data = data;\n    this.matteElement = null;\n    this.parentContainer = parentContainer;\n    this.layerId = placeholder ? placeholder.layerId : 'ly_' + randomString(10);\n    this.placeholder = placeholder;\n    this.init();\n  }\n\n  ;\n  createElement(BaseElement, HBaseElement);\n\n  HBaseElement.prototype.checkBlendMode = function () {};\n\n  HBaseElement.prototype.setBlendMode = BaseElement.prototype.setBlendMode;\n  /*HBaseElement.prototype.appendNodeToParent = function(node) {\r\n      if(this.data.hd){\r\n          return;\r\n      }\r\n      if(this.placeholder){\r\n          var g = this.placeholder.phElement;\r\n          g.parentNode.insertBefore(node, g);\r\n          //g.parentNode.removeChild(g);\r\n      }else{\r\n          this.parentContainer.appendChild(node);\r\n      }\r\n  };*/\n\n  HBaseElement.prototype.getBaseElement = function () {\n    return this.baseElement;\n  };\n\n  HBaseElement.prototype.createElements = function () {\n    if (this.data.hasMask) {\n      this.layerElement = document.createElementNS(svgNS, 'svg');\n      styleDiv(this.layerElement); //this.appendNodeToParent(this.layerElement);\n\n      this.baseElement = this.layerElement;\n      this.maskedElement = this.layerElement;\n    } else {\n      this.layerElement = this.parentContainer;\n    }\n\n    this.transformedElement = this.layerElement;\n\n    if (this.data.ln && (this.data.ty === 4 || this.data.ty === 0)) {\n      if (this.layerElement === this.parentContainer) {\n        this.layerElement = document.createElementNS(svgNS, 'g'); //this.appendNodeToParent(this.layerElement);\n\n        this.baseElement = this.layerElement;\n      }\n\n      this.layerElement.setAttribute('id', this.data.ln);\n    }\n\n    this.setBlendMode();\n\n    if (this.layerElement !== this.parentContainer) {\n      this.placeholder = null;\n    }\n\n    this.checkParenting();\n  };\n\n  HBaseElement.prototype.renderFrame = function (parentTransform) {\n    if (this.data.ty === 3) {\n      return false;\n    }\n\n    if (this.currentFrameNum === this.lastNum || !this.isVisible) {\n      return this.isVisible;\n    }\n\n    this.lastNum = this.currentFrameNum;\n    this.finalTransform.opMdf = this.finalTransform.op.mdf;\n    this.finalTransform.matMdf = this.finalTransform.mProp.mdf;\n    this.finalTransform.opacity = this.finalTransform.op.v;\n\n    if (this.firstFrame) {\n      this.finalTransform.opMdf = true;\n      this.finalTransform.matMdf = true;\n    }\n\n    var mat;\n    var finalMat = this.finalTransform.mat;\n\n    if (this.hierarchy) {\n      var i,\n          len = this.hierarchy.length;\n      mat = this.finalTransform.mProp.v.props;\n      finalMat.cloneFromProps(mat);\n\n      for (i = 0; i < len; i += 1) {\n        this.finalTransform.matMdf = this.hierarchy[i].finalTransform.mProp.mdf ? true : this.finalTransform.matMdf;\n        mat = this.hierarchy[i].finalTransform.mProp.v.props;\n        finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\n      }\n    } else {\n      if (this.isVisible && this.finalTransform.matMdf) {\n        if (!parentTransform) {\n          finalMat.cloneFromProps(this.finalTransform.mProp.v.props);\n        } else {\n          mat = this.finalTransform.mProp.v.props;\n          finalMat.cloneFromProps(mat);\n        }\n      }\n    }\n\n    if (this.data.hasMask) {\n      this.maskManager.renderFrame(finalMat);\n    }\n\n    if (parentTransform) {\n      mat = parentTransform.mat.props;\n      finalMat.cloneFromProps(mat);\n      this.finalTransform.opacity *= parentTransform.opacity;\n      this.finalTransform.opMdf = parentTransform.opMdf ? true : this.finalTransform.opMdf;\n      this.finalTransform.matMdf = parentTransform.matMdf ? true : this.finalTransform.matMdf;\n    }\n\n    if (this.finalTransform.matMdf) {\n      this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = finalMat.toCSS();\n      this.finalMat = finalMat;\n    }\n\n    if (this.finalTransform.opMdf) {\n      this.transformedElement.style.opacity = this.finalTransform.opacity;\n    }\n\n    return this.isVisible;\n  };\n\n  HBaseElement.prototype.destroy = function () {\n    this.layerElement = null;\n    this.transformedElement = null;\n    this.parentContainer = null;\n\n    if (this.matteElement) {\n      this.matteElement = null;\n    }\n\n    if (this.maskManager) {\n      this.maskManager.destroy();\n      this.maskManager = null;\n    }\n  };\n\n  HBaseElement.prototype.getDomElement = function () {\n    return this.layerElement;\n  };\n\n  HBaseElement.prototype.addMasks = function (data) {\n    this.maskManager = new MaskElement(data, this, this.globalData);\n  };\n\n  HBaseElement.prototype.hide = function () {};\n\n  HBaseElement.prototype.setMatte = function () {};\n\n  HBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\n\n  function HSolidElement(data, parentContainer, globalData, comp, placeholder) {\n    this._parent.constructor.call(this, data, parentContainer, globalData, comp, placeholder);\n  }\n\n  createElement(HBaseElement, HSolidElement);\n\n  HSolidElement.prototype.createElements = function () {\n    var parent = document.createElement('div');\n    styleDiv(parent);\n    var cont = document.createElementNS(svgNS, 'svg');\n    styleDiv(cont);\n    cont.setAttribute('width', this.data.sw);\n    cont.setAttribute('height', this.data.sh);\n    parent.appendChild(cont);\n    this.layerElement = parent;\n    this.transformedElement = parent; //this.appendNodeToParent(parent);\n\n    this.baseElement = parent;\n    this.innerElem = parent;\n\n    if (this.data.ln) {\n      this.innerElem.setAttribute('id', this.data.ln);\n    }\n\n    if (this.data.bm !== 0) {\n      this.setBlendMode();\n    }\n\n    var rect = document.createElementNS(svgNS, 'rect');\n    rect.setAttribute('width', this.data.sw);\n    rect.setAttribute('height', this.data.sh);\n    rect.setAttribute('fill', this.data.sc);\n    cont.appendChild(rect);\n\n    if (this.data.hasMask) {\n      this.maskedElement = rect;\n    }\n\n    this.checkParenting();\n  };\n\n  HSolidElement.prototype.hide = SVGBaseElement.prototype.hide;\n  HSolidElement.prototype.show = SVGBaseElement.prototype.show;\n  HSolidElement.prototype.renderFrame = IImageElement.prototype.renderFrame;\n  HSolidElement.prototype.destroy = IImageElement.prototype.destroy;\n\n  function HCompElement(data, parentContainer, globalData, comp, placeholder) {\n    this._parent.constructor.call(this, data, parentContainer, globalData, comp, placeholder);\n\n    this.layers = data.layers;\n    this.supports3d = true;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = Array.apply(null, {\n      length: this.layers.length\n    });\n\n    if (this.data.tm) {\n      this.tm = PropertyFactory.getProp(this, this.data.tm, 0, globalData.frameRate, this.dynamicProperties);\n    }\n\n    if (this.data.hasMask) {\n      this.supports3d = false;\n    }\n\n    if (this.data.xt) {\n      this.layerElement = document.createElement('div');\n    }\n\n    this.buildAllItems();\n  }\n\n  createElement(HBaseElement, HCompElement);\n\n  HCompElement.prototype.createElements = function () {\n    var divElement = document.createElement('div');\n    styleDiv(divElement);\n\n    if (this.data.ln) {\n      divElement.setAttribute('id', this.data.ln);\n    }\n\n    divElement.style.clip = 'rect(0px, ' + this.data.w + 'px, ' + this.data.h + 'px, 0px)';\n\n    if (this.data.hasMask) {\n      var compSvg = document.createElementNS(svgNS, 'svg');\n      styleDiv(compSvg);\n      compSvg.setAttribute('width', this.data.w);\n      compSvg.setAttribute('height', this.data.h);\n      var g = document.createElementNS(svgNS, 'g');\n      compSvg.appendChild(g);\n      divElement.appendChild(compSvg);\n      this.maskedElement = g;\n      this.baseElement = divElement;\n      this.layerElement = g;\n      this.transformedElement = divElement;\n    } else {\n      this.layerElement = divElement;\n      this.baseElement = this.layerElement;\n      this.transformedElement = divElement;\n    } //this.appendNodeToParent(this.layerElement);\n\n\n    this.checkParenting();\n  };\n\n  HCompElement.prototype.hide = ICompElement.prototype.hide;\n  HCompElement.prototype.prepareFrame = ICompElement.prototype.prepareFrame;\n  HCompElement.prototype.setElements = ICompElement.prototype.setElements;\n  HCompElement.prototype.getElements = ICompElement.prototype.getElements;\n  HCompElement.prototype.destroy = ICompElement.prototype.destroy;\n\n  HCompElement.prototype.renderFrame = function (parentMatrix) {\n    var renderParent = this._parent.renderFrame.call(this, parentMatrix);\n\n    var i,\n        len = this.layers.length;\n\n    if (renderParent === false) {\n      this.hide();\n      return;\n    }\n\n    this.hidden = false;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n\n    if (this.firstFrame) {\n      this.firstFrame = false;\n    }\n  };\n\n  HCompElement.prototype.checkLayers = BaseRenderer.prototype.checkLayers;\n  HCompElement.prototype.buildItem = HybridRenderer.prototype.buildItem;\n  HCompElement.prototype.checkPendingElements = HybridRenderer.prototype.checkPendingElements;\n  HCompElement.prototype.addPendingElement = HybridRenderer.prototype.addPendingElement;\n  HCompElement.prototype.buildAllItems = BaseRenderer.prototype.buildAllItems;\n  HCompElement.prototype.createItem = HybridRenderer.prototype.createItem;\n  HCompElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\n  HCompElement.prototype.createImage = HybridRenderer.prototype.createImage;\n  HCompElement.prototype.createComp = HybridRenderer.prototype.createComp;\n  HCompElement.prototype.createSolid = HybridRenderer.prototype.createSolid;\n  HCompElement.prototype.createShape = HybridRenderer.prototype.createShape;\n  HCompElement.prototype.createText = HybridRenderer.prototype.createText;\n  HCompElement.prototype.createBase = HybridRenderer.prototype.createBase;\n  HCompElement.prototype.appendElementInPos = HybridRenderer.prototype.appendElementInPos;\n\n  function HShapeElement(data, parentContainer, globalData, comp, placeholder) {\n    this.shapes = [];\n    this.shapesData = data.shapes;\n    this.stylesList = [];\n    this.itemsData = [];\n    this.prevViewData = [];\n    this.shapeModifiers = [];\n    this.processedElements = [];\n\n    this._parent.constructor.call(this, data, parentContainer, globalData, comp, placeholder);\n\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n  }\n\n  createElement(HBaseElement, HShapeElement);\n  var parent = HShapeElement.prototype._parent;\n  extendPrototype(IShapeElement, HShapeElement);\n  HShapeElement.prototype._parent = parent;\n  HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderFrame;\n\n  HShapeElement.prototype.createElements = function () {\n    var parent = document.createElement('div');\n    styleDiv(parent);\n    var cont = document.createElementNS(svgNS, 'svg');\n    styleDiv(cont);\n    var size = this.comp.data ? this.comp.data : this.globalData.compSize;\n    cont.setAttribute('width', size.w);\n    cont.setAttribute('height', size.h);\n\n    if (this.data.hasMask) {\n      var g = document.createElementNS(svgNS, 'g');\n      parent.appendChild(cont);\n      cont.appendChild(g);\n      this.maskedElement = g;\n      this.layerElement = g;\n      this.shapesContainer = g;\n    } else {\n      parent.appendChild(cont);\n      this.layerElement = cont;\n      this.shapesContainer = document.createElementNS(svgNS, 'g');\n      this.layerElement.appendChild(this.shapesContainer);\n    }\n\n    if (!this.data.hd) {\n      //this.parentContainer.appendChild(parent);\n      this.baseElement = parent;\n    }\n\n    this.innerElem = parent;\n\n    if (this.data.ln) {\n      this.innerElem.setAttribute('id', this.data.ln);\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, this.dynamicProperties, 0, [], true);\n    this.buildExpressionInterface();\n    this.layerElement = parent;\n    this.transformedElement = parent;\n    this.shapeCont = cont;\n\n    if (this.data.bm !== 0) {\n      this.setBlendMode();\n    }\n\n    this.checkParenting();\n  };\n\n  HShapeElement.prototype.renderFrame = function (parentMatrix) {\n    var firstFrame = this.firstFrame;\n\n    this._renderShapeFrame();\n\n    if (this.isVisible && (this.elemMdf || firstFrame)) {\n      var boundingBox = this.shapeCont.getBBox();\n      var changed = false;\n\n      if (this.currentBBox.w !== boundingBox.width) {\n        this.currentBBox.w = boundingBox.width;\n        this.shapeCont.setAttribute('width', boundingBox.width);\n        changed = true;\n      }\n\n      if (this.currentBBox.h !== boundingBox.height) {\n        this.currentBBox.h = boundingBox.height;\n        this.shapeCont.setAttribute('height', boundingBox.height);\n        changed = true;\n      }\n\n      if (changed || this.currentBBox.x !== boundingBox.x || this.currentBBox.y !== boundingBox.y) {\n        this.currentBBox.w = boundingBox.width;\n        this.currentBBox.h = boundingBox.height;\n        this.currentBBox.x = boundingBox.x;\n        this.currentBBox.y = boundingBox.y;\n        this.shapeCont.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n        this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n      }\n    }\n  };\n\n  function HTextElement(data, parentContainer, globalData, comp, placeholder) {\n    this.textSpans = [];\n    this.textPaths = [];\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n    this.renderType = 'svg';\n    this.isMasked = false;\n\n    this._parent.constructor.call(this, data, parentContainer, globalData, comp, placeholder);\n  }\n\n  createElement(HBaseElement, HTextElement);\n  extendPrototype(ITextElement, HTextElement);\n\n  HTextElement.prototype.createElements = function () {\n    this.isMasked = this.checkMasks();\n    var parent = document.createElement('div');\n    styleDiv(parent);\n    this.layerElement = parent;\n    this.transformedElement = parent;\n\n    if (this.isMasked) {\n      this.renderType = 'svg';\n      var cont = document.createElementNS(svgNS, 'svg');\n      styleDiv(cont);\n      this.cont = cont;\n      this.compW = this.comp.data.w;\n      this.compH = this.comp.data.h;\n      cont.setAttribute('width', this.compW);\n      cont.setAttribute('height', this.compH);\n      var g = document.createElementNS(svgNS, 'g');\n      cont.appendChild(g);\n      parent.appendChild(cont);\n      this.maskedElement = g;\n      this.innerElem = g;\n    } else {\n      this.renderType = 'html';\n      this.innerElem = parent;\n    }\n\n    this.baseElement = parent;\n    this.checkParenting();\n  };\n\n  HTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = Array.apply(null, {\n      length: this.textProperty.currentData.l ? this.textProperty.currentData.l.length : 0\n    });\n    var innerElemStyle = this.innerElem.style;\n    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\n\n    if (documentData.sc) {\n      innerElemStyle.stroke = this.buildColor(documentData.sc);\n      innerElemStyle.strokeWidth = documentData.sw + 'px';\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (!this.globalData.fontManager.chars) {\n      innerElemStyle.fontSize = documentData.s + 'px';\n      innerElemStyle.lineHeight = documentData.s + 'px';\n\n      if (fontData.fClass) {\n        this.innerElem.className = fontData.fClass;\n      } else {\n        innerElemStyle.fontFamily = fontData.fFamily;\n        var fWeight = documentData.fWeight,\n            fStyle = documentData.fStyle;\n        innerElemStyle.fontStyle = fStyle;\n        innerElemStyle.fontWeight = fWeight;\n      }\n    }\n\n    var i, len;\n    var letters = documentData.l;\n    len = letters.length;\n    var tSpan, tParent, tCont;\n    var matrixHelper = this.mHelper;\n    var shapes,\n        shapeStr = '';\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.globalData.fontManager.chars) {\n        if (!this.textPaths[cnt]) {\n          tSpan = document.createElementNS(svgNS, 'path');\n          tSpan.setAttribute('stroke-linecap', 'butt');\n          tSpan.setAttribute('stroke-linejoin', 'round');\n          tSpan.setAttribute('stroke-miterlimit', '4');\n        } else {\n          tSpan = this.textPaths[cnt];\n        }\n\n        if (!this.isMasked) {\n          if (this.textSpans[cnt]) {\n            tParent = this.textSpans[cnt];\n            tCont = tParent.children[0];\n          } else {\n            tParent = document.createElement('div');\n            tCont = document.createElementNS(svgNS, 'svg');\n            tCont.appendChild(tSpan);\n            styleDiv(tParent);\n          }\n        }\n      } else {\n        if (!this.isMasked) {\n          if (this.textSpans[cnt]) {\n            tParent = this.textSpans[cnt];\n            tSpan = this.textPaths[cnt];\n          } else {\n            tParent = document.createElement('span');\n            styleDiv(tParent);\n            tSpan = document.createElement('span');\n            styleDiv(tSpan);\n            tParent.appendChild(tSpan);\n          }\n        } else {\n          tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : document.createElementNS(svgNS, 'text');\n        }\n      } //tSpan.setAttribute('visibility', 'hidden');\n\n\n      if (this.globalData.fontManager.chars) {\n        var charData = this.globalData.fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n        var shapeData;\n\n        if (charData) {\n          shapeData = charData.data;\n        } else {\n          shapeData = null;\n        }\n\n        matrixHelper.reset();\n\n        if (shapeData && shapeData.shapes) {\n          shapes = shapeData.shapes[0].it;\n          matrixHelper.scale(documentData.s / 100, documentData.s / 100);\n          shapeStr = this.createPathShape(matrixHelper, shapes);\n          tSpan.setAttribute('d', shapeStr);\n        }\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent);\n\n          if (shapeData && shapeData.shapes) {\n            document.body.appendChild(tCont);\n            var boundingBox = tCont.getBBox();\n            tCont.setAttribute('width', boundingBox.width + 2);\n            tCont.setAttribute('height', boundingBox.height + 2);\n            tCont.setAttribute('viewBox', boundingBox.x - 1 + ' ' + (boundingBox.y - 1) + ' ' + (boundingBox.width + 2) + ' ' + (boundingBox.height + 2));\n            tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x - 1) + 'px,' + (boundingBox.y - 1) + 'px)';\n            letters[i].yOffset = boundingBox.y - 1;\n            tParent.appendChild(tCont);\n          } else {\n            tCont.setAttribute('width', 1);\n            tCont.setAttribute('height', 1);\n          }\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } else {\n        tSpan.textContent = letters[i].val;\n        tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent); //\n\n          tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,' + -documentData.s / 1.2 + 'px,0)';\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } //\n\n\n      if (!this.isMasked) {\n        this.textSpans[cnt] = tParent;\n      } else {\n        this.textSpans[cnt] = tSpan;\n      }\n\n      this.textSpans[cnt].style.display = 'block';\n      this.textPaths[cnt] = tSpan;\n      cnt += 1;\n    }\n\n    while (cnt < this.textSpans.length) {\n      this.textSpans[cnt].style.display = 'none';\n      cnt += 1;\n    }\n  };\n\n  HTextElement.prototype.hide = SVGTextElement.prototype.hide;\n\n  HTextElement.prototype.renderFrame = function (parentMatrix) {\n    var renderParent = this._parent.renderFrame.call(this, parentMatrix);\n\n    if (renderParent === false) {\n      this.hide();\n      return;\n    }\n\n    if (this.hidden) {\n      this.hidden = false;\n      this.innerElem.style.display = 'block';\n      this.layerElement.style.display = 'block';\n    }\n\n    if (this.data.singleShape) {\n      if (!this.firstFrame && !this.lettersChangedFlag) {\n        return;\n      } else {\n        // Todo Benchmark if using this is better than getBBox\n        if (this.isMasked && this.finalTransform.matMdf) {\n          this.cont.setAttribute('viewBox', -this.finalTransform.mProp.p.v[0] + ' ' + -this.finalTransform.mProp.p.v[1] + ' ' + this.compW + ' ' + this.compH);\n          this.cont.style.transform = this.cont.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\n        }\n      }\n    }\n\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n    if (!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag) {\n      return;\n    }\n\n    var i,\n        len,\n        count = 0;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter, textSpan, textPath;\n\n    for (i = 0; i < len; i += 1) {\n      if (letters[i].n) {\n        count += 1;\n        continue;\n      }\n\n      textSpan = this.textSpans[i];\n      textPath = this.textPaths[i];\n      renderedLetter = renderedLetters[count];\n      count += 1;\n\n      if (!this.isMasked) {\n        textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\n      } else {\n        textSpan.setAttribute('transform', renderedLetter.m);\n      } ////textSpan.setAttribute('opacity',renderedLetter.o);\n\n\n      textSpan.style.opacity = renderedLetter.o;\n\n      if (renderedLetter.sw) {\n        textPath.setAttribute('stroke-width', renderedLetter.sw);\n      }\n\n      if (renderedLetter.sc) {\n        textPath.setAttribute('stroke', renderedLetter.sc);\n      }\n\n      if (renderedLetter.fc) {\n        textPath.setAttribute('fill', renderedLetter.fc);\n        textPath.style.color = renderedLetter.fc;\n      }\n    }\n\n    if (this.isVisible && (this.elemMdf || this.firstFrame)) {\n      if (this.innerElem.getBBox) {\n        var boundingBox = this.innerElem.getBBox();\n\n        if (this.currentBBox.w !== boundingBox.width) {\n          this.currentBBox.w = boundingBox.width;\n          this.cont.setAttribute('width', boundingBox.width);\n        }\n\n        if (this.currentBBox.h !== boundingBox.height) {\n          this.currentBBox.h = boundingBox.height;\n          this.cont.setAttribute('height', boundingBox.height);\n        }\n\n        var margin = 1;\n\n        if (this.currentBBox.w !== boundingBox.width + margin * 2 || this.currentBBox.h !== boundingBox.height + margin * 2 || this.currentBBox.x !== boundingBox.x - margin || this.currentBBox.y !== boundingBox.y - margin) {\n          this.currentBBox.w = boundingBox.width + margin * 2;\n          this.currentBBox.h = boundingBox.height + margin * 2;\n          this.currentBBox.x = boundingBox.x - margin;\n          this.currentBBox.y = boundingBox.y - margin;\n          this.cont.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n          this.cont.style.transform = this.cont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n        }\n      }\n    }\n\n    if (this.firstFrame) {\n      this.firstFrame = false;\n    }\n  };\n\n  function HImageElement(data, parentContainer, globalData, comp, placeholder) {\n    this.assetData = globalData.getAssetData(data.refId);\n\n    this._parent.constructor.call(this, data, parentContainer, globalData, comp, placeholder);\n  }\n\n  createElement(HBaseElement, HImageElement);\n\n  HImageElement.prototype.createElements = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    var img = new Image();\n\n    if (this.data.hasMask) {\n      var parent = document.createElement('div');\n      styleDiv(parent);\n      var cont = document.createElementNS(svgNS, 'svg');\n      styleDiv(cont);\n      cont.setAttribute('width', this.assetData.w);\n      cont.setAttribute('height', this.assetData.h);\n      parent.appendChild(cont);\n      this.imageElem = document.createElementNS(svgNS, 'image');\n      this.imageElem.setAttribute('width', this.assetData.w + \"px\");\n      this.imageElem.setAttribute('height', this.assetData.h + \"px\");\n      this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n      cont.appendChild(this.imageElem);\n      this.layerElement = parent;\n      this.transformedElement = parent;\n      this.baseElement = parent;\n      this.innerElem = parent;\n      this.maskedElement = this.imageElem;\n    } else {\n      styleDiv(img);\n      this.layerElement = img;\n      this.baseElement = img;\n      this.innerElem = img;\n      this.transformedElement = img;\n    }\n\n    img.src = assetPath;\n\n    if (this.data.ln) {\n      this.innerElem.setAttribute('id', this.data.ln);\n    }\n\n    this.checkParenting();\n  };\n\n  HImageElement.prototype.show = HSolidElement.prototype.show;\n  HImageElement.prototype.hide = HSolidElement.prototype.hide;\n  HImageElement.prototype.renderFrame = HSolidElement.prototype.renderFrame;\n  HImageElement.prototype.destroy = HSolidElement.prototype.destroy;\n\n  function HCameraElement(data, parentContainer, globalData, comp, placeholder) {\n    this._parent.constructor.call(this, data, parentContainer, globalData, comp, placeholder);\n\n    var getProp = PropertyFactory.getProp;\n    this.pe = getProp(this, data.pe, 0, 0, this.dynamicProperties);\n\n    if (data.ks.p.s) {\n      this.px = getProp(this, data.ks.p.x, 1, 0, this.dynamicProperties);\n      this.py = getProp(this, data.ks.p.y, 1, 0, this.dynamicProperties);\n      this.pz = getProp(this, data.ks.p.z, 1, 0, this.dynamicProperties);\n    } else {\n      this.p = getProp(this, data.ks.p, 1, 0, this.dynamicProperties);\n    }\n\n    if (data.ks.a) {\n      this.a = getProp(this, data.ks.a, 1, 0, this.dynamicProperties);\n    }\n\n    if (data.ks.or.k.length && data.ks.or.k[0].to) {\n      var i,\n          len = data.ks.or.k.length;\n\n      for (i = 0; i < len; i += 1) {\n        data.ks.or.k[i].to = null;\n        data.ks.or.k[i].ti = null;\n      }\n    }\n\n    this.or = getProp(this, data.ks.or, 1, degToRads, this.dynamicProperties);\n    this.or.sh = true;\n    this.rx = getProp(this, data.ks.rx, 0, degToRads, this.dynamicProperties);\n    this.ry = getProp(this, data.ks.ry, 0, degToRads, this.dynamicProperties);\n    this.rz = getProp(this, data.ks.rz, 0, degToRads, this.dynamicProperties);\n    this.mat = new Matrix();\n  }\n\n  createElement(HBaseElement, HCameraElement);\n\n  HCameraElement.prototype.setup = function () {\n    var i,\n        len = this.comp.threeDElements.length,\n        comp;\n\n    for (i = 0; i < len; i += 1) {\n      //[perspectiveElem,container]\n      comp = this.comp.threeDElements[i];\n      comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v + 'px';\n      comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\n      comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n    }\n  };\n\n  HCameraElement.prototype.createElements = function () {};\n\n  HCameraElement.prototype.hide = function () {};\n\n  HCameraElement.prototype.renderFrame = function () {\n    var mdf = this.firstFrame;\n    var i, len;\n\n    if (this.hierarchy) {\n      len = this.hierarchy.length;\n\n      for (i = 0; i < len; i += 1) {\n        mdf = this.hierarchy[i].finalTransform.mProp.mdf ? true : mdf;\n      }\n    }\n\n    if (mdf || this.p && this.p.mdf || this.px && (this.px.mdf || this.py.mdf || this.pz.mdf) || this.rx.mdf || this.ry.mdf || this.rz.mdf || this.or.mdf || this.a && this.a.mdf) {\n      this.mat.reset();\n\n      if (this.p) {\n        this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]);\n      } else {\n        this.mat.translate(-this.px.v, -this.py.v, this.pz.v);\n      }\n\n      if (this.a) {\n        var diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];\n        var mag = Math.sqrt(Math.pow(diffVector[0], 2) + Math.pow(diffVector[1], 2) + Math.pow(diffVector[2], 2)); //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\n\n        var lookDir = [diffVector[0] / mag, diffVector[1] / mag, diffVector[2] / mag];\n        var lookLengthOnXZ = Math.sqrt(lookDir[2] * lookDir[2] + lookDir[0] * lookDir[0]);\n        var m_rotationX = Math.atan2(lookDir[1], lookLengthOnXZ);\n        var m_rotationY = Math.atan2(lookDir[0], -lookDir[2]);\n        this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\n      }\n\n      this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\n      this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\n      this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0);\n      this.mat.translate(0, 0, this.pe.v);\n\n      if (this.hierarchy) {\n        var mat;\n        len = this.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          mat = this.hierarchy[i].finalTransform.mProp.iv.props;\n          this.mat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], -mat[12], -mat[13], mat[14], mat[15]);\n        }\n      }\n\n      len = this.comp.threeDElements.length;\n      var comp;\n\n      for (i = 0; i < len; i += 1) {\n        comp = this.comp.threeDElements[i];\n        comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\n      }\n    }\n\n    this.firstFrame = false;\n  };\n\n  HCameraElement.prototype.destroy = function () {};\n\n  var Expressions = function () {\n    var ob = {};\n    ob.initExpressions = initExpressions;\n\n    function initExpressions(animation) {\n      animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\n      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\n    }\n\n    return ob;\n  }();\n\n  expressionsPlugin = Expressions;\n\n  (function addPropertyDecorator() {\n    function getStaticValueAtTime() {\n      return this.pv;\n    }\n\n    function loopOut(type, duration, durationFlag) {\n      if (!this.k || !this.keyframes) {\n        return this.pv;\n      }\n\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var lastKeyFrame = keyframes[keyframes.length - 1].t;\n\n      if (currentFrame <= lastKeyFrame) {\n        return this.pv;\n      } else {\n        var cycleDuration, firstKeyFrame;\n\n        if (!durationFlag) {\n          if (!duration || duration > keyframes.length - 1) {\n            duration = keyframes.length - 1;\n          }\n\n          firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\n          cycleDuration = lastKeyFrame - firstKeyFrame;\n        } else {\n          if (!duration) {\n            cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);\n          } else {\n            cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate * duration);\n          }\n\n          firstKeyFrame = lastKeyFrame - cycleDuration;\n        }\n\n        var offsetTime = this.offsetTime || 0;\n        var i, len, ret;\n\n        if (type.toLowerCase() === 'pingpong') {\n          var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n          if (iterations % 2 !== 0) {\n            return this.getValueAtTime((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame - offsetTime) / this.comp.globalData.frameRate, 0);\n          }\n        } else if (type === 'offset') {\n          var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n          var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n          var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n          var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n          if (this.pv.length) {\n            ret = new Array(initV.length);\n            len = ret.length;\n\n            for (i = 0; i < len; i += 1) {\n              ret[i] = (endV[i] - initV[i]) * repeats + current[i];\n            }\n\n            return ret;\n          }\n\n          return (endV - initV) * repeats + current;\n        } else if (type === 'continue') {\n          var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n          var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\n\n          if (this.pv.length) {\n            ret = new Array(lastValue.length);\n            len = ret.length;\n\n            for (i = 0; i < len; i += 1) {\n              ret[i] = lastValue[i] + (lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 0.0005;\n            }\n\n            return ret;\n          }\n\n          return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 0.001);\n        }\n\n        return this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame - offsetTime) / this.comp.globalData.frameRate, 0);\n      }\n    }\n\n    function loopIn(type, duration, durationFlag) {\n      if (!this.k) {\n        return this.pv;\n      }\n\n      var currentFrame = time * elem.comp.globalData.frameRate;\n      var keyframes = this.keyframes;\n      var firstKeyFrame = keyframes[0].t;\n      var offsetTime = this.offsetTime || 0;\n\n      if (currentFrame >= firstKeyFrame) {\n        return this.pv;\n      } else {\n        var cycleDuration, lastKeyFrame;\n\n        if (!durationFlag) {\n          if (!duration || duration > keyframes.length - 1) {\n            duration = keyframes.length - 1;\n          }\n\n          lastKeyFrame = keyframes[duration].t;\n          cycleDuration = lastKeyFrame - firstKeyFrame;\n        } else {\n          if (!duration) {\n            cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);\n          } else {\n            cycleDuration = Math.abs(elem.comp.globalData.frameRate * duration);\n          }\n\n          lastKeyFrame = firstKeyFrame + cycleDuration;\n        }\n\n        var i, len, ret;\n\n        if (type === 'pingpong') {\n          var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);\n\n          if (iterations % 2 === 0) {\n            return this.getValueAtTime(((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame - offsetTime) / this.comp.globalData.frameRate, 0);\n          }\n        } else if (type === 'offset') {\n          var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n          var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n          var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n          var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;\n\n          if (this.pv.length) {\n            ret = new Array(initV.length);\n            len = ret.length;\n\n            for (i = 0; i < len; i += 1) {\n              ret[i] = current[i] - (endV[i] - initV[i]) * repeats;\n            }\n\n            return ret;\n          }\n\n          return current - (endV - initV) * repeats;\n        } else if (type === 'continue') {\n          var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n          var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\n\n          if (this.pv.length) {\n            ret = new Array(firstValue.length);\n            len = ret.length;\n\n            for (i = 0; i < len; i += 1) {\n              ret[i] = firstValue[i] + (firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame) / 0.001;\n            }\n\n            return ret;\n          }\n\n          return firstValue + (firstValue - nextFirstValue) * (firstKeyFrame - currentFrame) / 0.001;\n        }\n\n        return this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame - offsetTime) / this.comp.globalData.frameRate, 0);\n      }\n    }\n\n    function getValueAtTime(frameNum) {\n      if (!this._cachingAtTime) {\n        this._cachingAtTime = {\n          lastValue: -99999,\n          lastIndex: 0\n        };\n      } //console.log('this._cachingAtTime', JSON.parse(JSON.stringify(this._cachingAtTime)))\n\n\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        frameNum *= this.elem.globalData.frameRate;\n        frameNum -= this.offsetTime;\n        var i = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\n        var interpolationResult = this.interpolateValue(frameNum, i, this.pv, this._cachingAtTime);\n        this._cachingAtTime.lastIndex = interpolationResult.iterationIndex;\n        this._cachingAtTime.value = interpolationResult.value;\n        this._cachingAtTime.lastFrame = frameNum;\n      }\n\n      return this._cachingAtTime.value;\n    }\n\n    function getVelocityAtTime(frameNum) {\n      if (this.vel !== undefined) {\n        return this.vel;\n      }\n\n      var delta = -0.01; //frameNum += this.elem.data.st;\n\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var velocity;\n\n      if (v1.length) {\n        velocity = Array.apply(null, {\n          length: v1.length\n        });\n        var i;\n\n        for (i = 0; i < v1.length; i += 1) {\n          //removing frameRate\n          //if needed, don't add it here\n          //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\n          velocity[i] = (v2[i] - v1[i]) / delta;\n        }\n      } else {\n        velocity = (v2 - v1) / delta;\n      }\n\n      return velocity;\n    }\n\n    ;\n\n    function setGroupProperty(propertyGroup) {\n      this.propertyGroup = propertyGroup;\n    }\n\n    function searchExpressions(elem, data, prop) {\n      if (data.x) {\n        prop.k = true;\n        prop.x = true;\n\n        if (prop.getValue) {\n          prop.getPreValue = prop.getValue;\n        }\n\n        prop.getValue = ExpressionManager.initiateExpression.bind(prop)(elem, data, prop);\n      }\n    }\n\n    function getTransformValueAtTime(time) {\n      console.log('time:', time);\n    }\n\n    function getTransformStaticValueAtTime(time) {}\n\n    var TextExpressionSelectorProp = function () {\n      function getValueProxy(index, total) {\n        this.textIndex = index + 1;\n        this.textTotal = total;\n        this.getValue();\n        return this.v;\n      }\n\n      return function TextExpressionSelectorProp(elem, data) {\n        this.pv = 1;\n        this.comp = elem.comp;\n        this.elem = elem;\n        this.mult = .01;\n        this.type = 'textSelector';\n        this.textTotal = data.totalChars;\n        this.selectorValue = 100;\n        this.lastValue = [1, 1, 1];\n        searchExpressions.bind(this)(elem, data, this);\n        this.getMult = getValueProxy;\n        this.getVelocityAtTime = getVelocityAtTime;\n\n        if (this.kf) {\n          this.getValueAtTime = getValueAtTime.bind(this);\n        } else {\n          this.getValueAtTime = getStaticValueAtTime.bind(this);\n        }\n\n        this.setGroupProperty = setGroupProperty;\n      };\n    }();\n\n    var propertyGetProp = PropertyFactory.getProp;\n\n    PropertyFactory.getProp = function (elem, data, type, mult, arr) {\n      var prop = propertyGetProp(elem, data, type, mult, arr); //prop.getVelocityAtTime = getVelocityAtTime;\n      //prop.loopOut = loopOut;\n      //prop.loopIn = loopIn;\n\n      if (type === 2) {\n        if (prop.dynamicProperties.length) {\n          prop.getValueAtTime = getTransformValueAtTime.bind(prop);\n        } else {\n          prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\n        }\n      } else {\n        if (prop.kf) {\n          prop.getValueAtTime = getValueAtTime.bind(prop);\n        } else {\n          prop.getValueAtTime = getStaticValueAtTime.bind(prop);\n        }\n      }\n\n      prop.setGroupProperty = setGroupProperty;\n      prop.loopOut = loopOut;\n      prop.loopIn = loopIn;\n      prop.getVelocityAtTime = getVelocityAtTime;\n      prop.numKeys = data.a === 1 ? data.k.length : 0;\n      var isAdded = prop.k;\n\n      if (data.ix !== undefined) {\n        Object.defineProperty(prop, 'propertyIndex', {\n          get: function get() {\n            return data.ix;\n          }\n        });\n      }\n\n      searchExpressions(elem, data, prop);\n\n      if (!isAdded && prop.x) {\n        arr.push(prop);\n      }\n\n      return prop;\n    };\n\n    function getShapeValueAtTime(frameNum) {\n      if (!this._shapeValueAtTime) {\n        this._lastIndexAtTime = 0;\n        this._lastTimeAtTime = -999999;\n        this._shapeValueAtTime = shape_pool.clone(this.pv);\n      }\n\n      if (frameNum !== this._lastTimeAtTime) {\n        this._lastTimeAtTime = frameNum;\n        frameNum *= this.elem.globalData.frameRate;\n        var interpolationResult = this.interpolateShape(frameNum, this._lastIndexAtTime, this._shapeValueAtTime, false);\n        this._lastIndexAtTime = interpolationResult.iterationIndex;\n      }\n\n      return this._shapeValueAtTime;\n    }\n\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\n\n    ShapePropertyConstructorFunction.prototype.vertices = function (prop, time) {\n      var shapePath = this.v;\n\n      if (time !== undefined) {\n        shapePath = this.getValueAtTime(time, 0);\n      }\n\n      var i,\n          len = shapePath._length;\n      var vertices = shapePath[prop];\n      var points = shapePath.v;\n      var arr = Array.apply(null, {\n        length: len\n      });\n\n      for (i = 0; i < len; i += 1) {\n        if (prop === 'i' || prop === 'o') {\n          arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\n        } else {\n          arr[i] = [vertices[i][0], vertices[i][1]];\n        }\n      }\n\n      return arr;\n    };\n\n    ShapePropertyConstructorFunction.prototype.points = function (time) {\n      return this.vertices('v', time);\n    };\n\n    ShapePropertyConstructorFunction.prototype.inTangents = function (time) {\n      return this.vertices('i', time);\n    };\n\n    ShapePropertyConstructorFunction.prototype.outTangents = function (time) {\n      return this.vertices('o', time);\n    };\n\n    ShapePropertyConstructorFunction.prototype.isClosed = function () {\n      return this.v.c;\n    };\n\n    ShapePropertyConstructorFunction.prototype.pointOnPath = function (perc, time) {\n      var shapePath = this.v;\n\n      if (time !== undefined) {\n        shapePath = this.getValueAtTime(time, 0);\n      }\n\n      if (!this._segmentsLength) {\n        this._segmentsLength = bez.getSegmentsLength(shapePath);\n      }\n\n      var segmentsLength = this._segmentsLength;\n      var lengths = segmentsLength.lengths;\n      var lengthPos = segmentsLength.totalLength * perc;\n      var i = 0,\n          len = lengths.length;\n      var j = 0,\n          jLen;\n      var accumulatedLength = 0;\n      var segments;\n\n      while (i < len) {\n        if (accumulatedLength + lengths[i].addedLength > lengthPos) {\n          segments = lengths[i].segments;\n          var initIndex = i;\n          var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1;\n          var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength;\n          var pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\n          break;\n        } else {\n          accumulatedLength += lengths[i].addedLength;\n        }\n\n        i += 1;\n      }\n\n      if (!pt) {\n        pt = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];\n      }\n\n      return pt;\n    };\n\n    ShapePropertyConstructorFunction.prototype.vectorOnPath = function (perc, time, vectorType) {\n      //perc doesn't use triple equality because can be a Number object, not a primitive.\n      perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\n      var pt1 = this.pointOnPath(perc, time);\n      var pt2 = this.pointOnPath(perc + 0.001, time);\n      var xLength = pt2[0] - pt1[0];\n      var yLength = pt2[1] - pt1[1];\n      var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));\n      var unitVector = vectorType === 'tangent' ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];\n      return unitVector;\n    };\n\n    ShapePropertyConstructorFunction.prototype.tangentOnPath = function (perc, time) {\n      return this.vectorOnPath(perc, time, 'tangent');\n    };\n\n    ShapePropertyConstructorFunction.prototype.normalOnPath = function (perc, time) {\n      return this.vectorOnPath(perc, time, 'normal');\n    };\n\n    ShapePropertyConstructorFunction.prototype.setGroupProperty = setGroupProperty;\n    ShapePropertyConstructorFunction.prototype.getValueAtTime = getStaticValueAtTime;\n    KeyframedShapePropertyConstructorFunction.prototype.vertices = ShapePropertyConstructorFunction.prototype.vertices;\n    KeyframedShapePropertyConstructorFunction.prototype.points = ShapePropertyConstructorFunction.prototype.points;\n    KeyframedShapePropertyConstructorFunction.prototype.inTangents = ShapePropertyConstructorFunction.prototype.inTangents;\n    KeyframedShapePropertyConstructorFunction.prototype.outTangents = ShapePropertyConstructorFunction.prototype.outTangents;\n    KeyframedShapePropertyConstructorFunction.prototype.isClosed = ShapePropertyConstructorFunction.prototype.isClosed;\n    KeyframedShapePropertyConstructorFunction.prototype.pointOnPath = ShapePropertyConstructorFunction.prototype.pointOnPath;\n    KeyframedShapePropertyConstructorFunction.prototype.vectorOnPath = ShapePropertyConstructorFunction.prototype.vectorOnPath;\n    KeyframedShapePropertyConstructorFunction.prototype.tangentOnPath = ShapePropertyConstructorFunction.prototype.tangentOnPath;\n    KeyframedShapePropertyConstructorFunction.prototype.normalOnPath = ShapePropertyConstructorFunction.prototype.normalOnPath;\n    KeyframedShapePropertyConstructorFunction.prototype.setGroupProperty = ShapePropertyConstructorFunction.prototype.setGroupProperty;\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\n\n    ShapePropertyFactory.getShapeProp = function (elem, data, type, arr, trims) {\n      var prop = propertyGetShapeProp(elem, data, type, arr, trims);\n      var isAdded = prop.k;\n\n      if (data.ix !== undefined) {\n        Object.defineProperty(prop, 'propertyIndex', {\n          get: function get() {\n            return data.ix;\n          }\n        });\n      }\n\n      if (type === 3) {\n        searchExpressions(elem, data.pt, prop);\n      } else if (type === 4) {\n        searchExpressions(elem, data.ks, prop);\n      }\n\n      if (!isAdded && prop.x) {\n        arr.push(prop);\n      }\n\n      return prop;\n    };\n\n    var propertyGetTextProp = PropertyFactory.getTextSelectorProp;\n\n    PropertyFactory.getTextSelectorProp = function (elem, data, arr) {\n      if (data.t === 1) {\n        return new TextExpressionSelectorProp(elem, data, arr);\n      } else {\n        return propertyGetTextProp(elem, data, arr);\n      }\n    };\n  })();\n\n  (function addTextPropertyDecorator() {\n    function searchExpressions() {\n      if (this.data.d.x) {\n        this.comp = this.elem.comp;\n\n        if (this.getValue) {\n          this.getPreValue = this.getValue;\n        }\n\n        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);\n        this.getValue = this.getExpressionValue;\n        return true;\n      }\n\n      return false;\n    }\n\n    TextProperty.prototype.searchProperty = function () {\n      this.kf = this.searchExpressions() || this.data.d.k.length > 1;\n      return this.kf;\n    };\n\n    TextProperty.prototype.getExpressionValue = function (num) {\n      this.calculateExpression();\n\n      if (this.mdf) {\n        this.currentData.t = this.v.toString();\n        this.completeTextData(this.currentData);\n      }\n    };\n\n    TextProperty.prototype.searchExpressions = searchExpressions;\n  })();\n\n  var ExpressionManager = function () {\n    var ob = {};\n    var Math = BMMath;\n    var window = null;\n    var document = null;\n\n    function duplicatePropertyValue(value, mult) {\n      mult = mult || 1;\n\n      if (typeof value === 'number' || value instanceof Number) {\n        return value * mult;\n      } else if (value.i) {\n        return JSON.parse(JSON.stringify(value));\n      } else {\n        var arr = Array.apply(null, {\n          length: value.length\n        });\n        var i,\n            len = value.length;\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = value[i] * mult;\n        }\n\n        return arr;\n      }\n    }\n\n    function shapesEqual(shape1, shape2) {\n      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\n        return false;\n      }\n\n      var i,\n          len = shape1._length;\n\n      for (i = 0; i < len; i += 1) {\n        if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function $bm_neg(a) {\n      var tOfA = typeof a;\n\n      if (tOfA === 'number' || tOfA === 'boolean' || a instanceof Number) {\n        return -a;\n      }\n\n      if (a.constructor === Array) {\n        var i,\n            lenA = a.length;\n        var retArr = [];\n\n        for (i = 0; i < lenA; i += 1) {\n          retArr[i] = -a[i];\n        }\n\n        return retArr;\n      }\n    }\n\n    function sum(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n\n      if (tOfA === 'string' || tOfB === 'string') {\n        return a + b;\n      }\n\n      if ((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number)) {\n        return a + b;\n      }\n\n      if (a.constructor === Array && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number)) {\n        a[0] = a[0] + b;\n        return a;\n      }\n\n      if ((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number) && b.constructor === Array) {\n        b[0] = a + b[0];\n        return b;\n      }\n\n      if (a.constructor === Array && b.constructor === Array) {\n        var i = 0,\n            lenA = a.length,\n            lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] + b[i];\n          } else {\n            retArr[i] = b[i] == undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    var add = sum;\n\n    function sub(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n\n      if ((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number)) {\n        if (tOfA === 'string') {\n          a = parseInt(a);\n        }\n\n        if (tOfB === 'string') {\n          b = parseInt(b);\n        }\n\n        return a - b;\n      }\n\n      if (a.constructor === Array && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number)) {\n        a[0] = a[0] - b;\n        return a;\n      }\n\n      if ((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number) && b.constructor === Array) {\n        b[0] = a - b[0];\n        return b;\n      }\n\n      if (a.constructor === Array && b.constructor === Array) {\n        var i = 0,\n            lenA = a.length,\n            lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && typeof (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] - b[i];\n          } else {\n            retArr[i] = b[i] == undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    function mul(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      var arr;\n\n      if ((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number)) {\n        return a * b;\n      }\n\n      var i, len;\n\n      if (a.constructor === Array && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number)) {\n        len = a.length;\n        arr = Array.apply(null, {\n          length: len\n        });\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] * b;\n        }\n\n        return arr;\n      }\n\n      if ((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number) && b.constructor === Array) {\n        len = b.length;\n        arr = Array.apply(null, {\n          length: len\n        });\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a * b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function div(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      var arr;\n\n      if ((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number)) {\n        return a / b;\n      }\n\n      var i, len;\n\n      if (a.constructor === Array && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number)) {\n        len = a.length;\n        arr = Array.apply(null, {\n          length: len\n        });\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] / b;\n        }\n\n        return arr;\n      }\n\n      if ((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number) && b.constructor === Array) {\n        len = b.length;\n        arr = Array.apply(null, {\n          length: len\n        });\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a / b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function mod(a, b) {\n      if (typeof a === 'string') {\n        a = parseInt(a);\n      }\n\n      if (typeof b === 'string') {\n        b = parseInt(b);\n      }\n\n      return a % b;\n    }\n\n    function clamp(num, min, max) {\n      if (min > max) {\n        var mm = max;\n        max = min;\n        min = mm;\n      }\n\n      return Math.min(Math.max(num, min), max);\n    }\n\n    function radiansToDegrees(val) {\n      return val / degToRads;\n    }\n\n    var radians_to_degrees = radiansToDegrees;\n\n    function degreesToRadians(val) {\n      return val * degToRads;\n    }\n\n    var degrees_to_radians = radiansToDegrees;\n    var helperLengthArray = [0, 0, 0, 0, 0, 0];\n\n    function length(arr1, arr2) {\n      if (typeof arr1 === 'number' || arr1 instanceof Number) {\n        arr2 = arr2 || 0;\n        return Math.abs(arr1 - arr2);\n      }\n\n      if (!arr2) {\n        arr2 = helperLengthArray;\n      }\n\n      var i,\n          len = Math.min(arr1.length, arr2.length);\n      var addedLength = 0;\n\n      for (i = 0; i < len; i += 1) {\n        addedLength += Math.pow(arr2[i] - arr1[i], 2);\n      }\n\n      return Math.sqrt(addedLength);\n    }\n\n    function normalize(vec) {\n      return div(vec, length(vec));\n    }\n\n    function rgbToHsl(val) {\n      var r = val[0];\n      var g = val[1];\n      var b = val[2];\n      var max = Math.max(r, g, b),\n          min = Math.min(r, g, b);\n      var h,\n          s,\n          l = (max + min) / 2;\n\n      if (max == min) {\n        h = s = 0; // achromatic\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            h = (b - r) / d + 2;\n            break;\n\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n\n        h /= 6;\n      }\n\n      return [h, s, l, val[3]];\n    }\n\n    function hslToRgb(val) {\n      var h = val[0];\n      var s = val[1];\n      var l = val[2];\n      var r, g, b;\n\n      if (s == 0) {\n        r = g = b = l; // achromatic\n      } else {\n        var hue2rgb = function hue2rgb(p, q, t) {\n          if (t < 0) t += 1;\n          if (t > 1) t -= 1;\n          if (t < 1 / 6) return p + (q - p) * 6 * t;\n          if (t < 1 / 2) return q;\n          if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n          return p;\n        };\n\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n      }\n\n      return [r, g, b, val[3]];\n    }\n\n    function linear(t, tMin, tMax, value1, value2) {\n      if (value1 === undefined || value2 === undefined) {\n        return linear(t, 0, 1, tMin, tMax);\n      }\n\n      if (t <= tMin) {\n        return value1;\n      } else if (t >= tMax) {\n        return value2;\n      }\n\n      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin);\n\n      if (!value1.length) {\n        return value1 + (value2 - value1) * perc;\n      }\n\n      var i,\n          len = value1.length;\n      var arr = Array.apply(null, {\n        length: len\n      });\n\n      for (i = 0; i < len; i += 1) {\n        arr[i] = value1[i] + (value2[i] - value1[i]) * perc;\n      }\n\n      return arr;\n    }\n\n    function random(min, max) {\n      if (max === undefined) {\n        if (min === undefined) {\n          min = 0;\n          max = 1;\n        } else {\n          max = min;\n          min = undefined;\n        }\n      }\n\n      if (max.length) {\n        var i,\n            len = max.length;\n\n        if (!min) {\n          min = Array.apply(null, {\n            length: len\n          });\n        }\n\n        var arr = Array.apply(null, {\n          length: len\n        });\n        var rnd = BMMath.random();\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = min[i] + rnd * (max[i] - min[i]);\n        }\n\n        return arr;\n      }\n\n      if (min === undefined) {\n        min = 0;\n      }\n\n      var rndm = BMMath.random();\n      return min + rndm * (max - min);\n    }\n\n    function createPath(points, inTangents, outTangents, closed) {\n      inTangents = inTangents && inTangents.length ? inTangents : points;\n      outTangents = outTangents && outTangents.length ? outTangents : points;\n      var path = shape_pool.newShape();\n      var len = points.length;\n      path.setPathData(closed, len);\n\n      for (i = 0; i < len; i += 1) {\n        path.setTripleAt(points[i][0], points[i][1], outTangents[i][0] + points[i][0], outTangents[i][1] + points[i][1], inTangents[i][0] + points[i][0], inTangents[i][1] + points[i][1], i, true);\n      }\n\n      return path;\n    }\n\n    function initiateExpression(elem, data, property) {\n      var val = data.x;\n      var needsVelocity = /velocity(?![\\w\\d])/.test(val);\n\n      var _needsRandom = val.indexOf('random') !== -1;\n\n      var elemType = elem.data.ty;\n      var transform, content, effect;\n      var thisComp = elem.comp;\n      var thisProperty = property;\n      elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;\n      var inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      var outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      var width = elem.data.sw ? elem.data.sw : 0;\n      var height = elem.data.sh ? elem.data.sh : 0;\n      var loopIn, loop_in, loopOut, loop_out;\n      var toWorld, fromWorld, fromComp, fromCompToSurface, anchorPoint, thisLayer, thisComp, mask, valueAtTime, velocityAtTime;\n      var fn = new Function(); //var fnStr = 'var fn = function(){'+val+';this.v = $bm_rt;}';\n      //eval(fnStr);\n\n      var fn = eval('[function(){' + val + ';if($bm_rt.__shapeObject){this.v=shape_pool.clone($bm_rt.v);}else{this.v=$bm_rt;}}' + ']')[0];\n      var bindedFn = fn.bind(this);\n      var numKeys = property.kf ? data.k.length : 0;\n\n      var wiggle = function wiggle(freq, amp) {\n        var i,\n            j,\n            len = this.pv.length ? this.pv.length : 1;\n        var addedAmps = Array.apply(null, {\n          len: len\n        });\n\n        for (j = 0; j < len; j += 1) {\n          addedAmps[j] = 0;\n        }\n\n        freq = 5;\n        var iterations = Math.floor(time * freq);\n        i = 0;\n        j = 0;\n\n        while (i < iterations) {\n          //var rnd = BMMath.random();\n          for (j = 0; j < len; j += 1) {\n            addedAmps[j] += -amp + amp * 2 * BMMath.random(); //addedAmps[j] += -amp + amp*2*rnd;\n          }\n\n          i += 1;\n        } //var rnd2 = BMMath.random();\n\n\n        var periods = time * freq;\n        var perc = periods - Math.floor(periods);\n        var arr = Array.apply({\n          length: len\n        });\n\n        if (len > 1) {\n          for (j = 0; j < len; j += 1) {\n            arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc; //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\n            //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\n          }\n\n          return arr;\n        } else {\n          return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc;\n        }\n      }.bind(this);\n\n      if (thisProperty.loopIn) {\n        loopIn = thisProperty.loopIn.bind(thisProperty);\n        loop_in = loopIn;\n      }\n\n      if (thisProperty.loopOut) {\n        loopOut = thisProperty.loopOut.bind(thisProperty);\n        loop_out = loopOut;\n      }\n\n      var loopInDuration = function loopInDuration(type, duration) {\n        return loopIn(type, duration, true);\n      }.bind(this);\n\n      var loopOutDuration = function loopOutDuration(type, duration) {\n        return loopOut(type, duration, true);\n      }.bind(this);\n\n      if (this.getValueAtTime) {\n        valueAtTime = this.getValueAtTime.bind(this);\n      }\n\n      if (this.getVelocityAtTime) {\n        velocityAtTime = this.getVelocityAtTime.bind(this);\n      }\n\n      var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\n\n      function lookAt(elem1, elem2) {\n        var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]];\n        var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads;\n        var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads;\n        return [yaw, pitch, 0];\n      }\n\n      ;\n\n      function easeOut(t, val1, val2) {\n        return -(val2 - val1) * t * (t - 2) + val1;\n      }\n\n      ;\n\n      function nearestKey(time) {\n        var i,\n            len = data.k.length,\n            index,\n            keyTime;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          index = 0;\n          keyTime = 0;\n        } else {\n          index = -1;\n          time *= elem.comp.globalData.frameRate;\n\n          if (time < data.k[0].t) {\n            index = 1;\n            keyTime = data.k[0].t;\n          } else {\n            for (i = 0; i < len - 1; i += 1) {\n              if (time === data.k[i].t) {\n                index = i + 1;\n                keyTime = data.k[i].t;\n                break;\n              } else if (time > data.k[i].t && time < data.k[i + 1].t) {\n                if (time - data.k[i].t > data.k[i + 1].t - time) {\n                  index = i + 2;\n                  keyTime = data.k[i + 1].t;\n                } else {\n                  index = i + 1;\n                  keyTime = data.k[i].t;\n                }\n\n                break;\n              }\n            }\n\n            if (index === -1) {\n              index = i + 1;\n              keyTime = data.k[i].t;\n            }\n          }\n        }\n\n        var ob = {};\n        ob.index = index;\n        ob.time = keyTime / elem.comp.globalData.frameRate;\n        return ob;\n      }\n\n      ;\n\n      function key(ind) {\n        var ob, i, len;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          throw new Error('The property has no keyframe at index ' + ind);\n        }\n\n        ind -= 1;\n        ob = {\n          time: data.k[ind].t / elem.comp.globalData.frameRate\n        };\n        var arr;\n\n        if (ind === data.k.length - 1 && !data.k[ind].h) {\n          arr = data.k[ind - 1].e;\n        } else {\n          arr = data.k[ind].s;\n        }\n\n        len = arr.length;\n\n        for (i = 0; i < len; i += 1) {\n          ob[i] = arr[i];\n        }\n\n        return ob;\n      }\n\n      ;\n\n      function framesToTime(frames, fps) {\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return frames / fps;\n      }\n\n      ;\n\n      function timeToFrames(t, fps) {\n        if (!t && t !== 0) {\n          t = time;\n        }\n\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return t * fps;\n      }\n\n      ;\n\n      function seedRandom(seed) {\n        BMMath.seedrandom(randSeed + seed);\n      }\n\n      ;\n\n      function sourceRectAtTime() {\n        return elem.sourceRectAtTime();\n      }\n\n      var time, velocity, value, textIndex, textTotal, selectorValue;\n      var index = elem.data.ind;\n      var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n      var parent;\n      var randSeed = Math.floor(Math.random() * 1000000);\n\n      function executeExpression() {\n        if (_needsRandom) {\n          seedRandom(randSeed);\n        }\n\n        if (this.frameExpressionId === elem.globalData.frameId && this.type !== 'textSelector') {\n          return;\n        }\n\n        if (this.lock) {\n          this.v = duplicatePropertyValue(this.pv, this.mult);\n          return true;\n        }\n\n        if (this.type === 'textSelector') {\n          textIndex = this.textIndex;\n          textTotal = this.textTotal;\n          selectorValue = this.selectorValue;\n        }\n\n        if (!thisLayer) {\n          thisLayer = elem.layerInterface;\n          thisComp = elem.comp.compInterface;\n          toWorld = thisLayer.toWorld.bind(thisLayer);\n          fromWorld = thisLayer.fromWorld.bind(thisLayer);\n          fromComp = thisLayer.fromComp.bind(thisLayer);\n          mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\n          fromCompToSurface = fromComp;\n        }\n\n        if (!transform) {\n          transform = elem.layerInterface(\"ADBE Transform Group\");\n          anchorPoint = transform.anchorPoint;\n        }\n\n        if (elemType === 4 && !content) {\n          content = thisLayer(\"ADBE Root Vectors Group\");\n        }\n\n        if (!effect) {\n          effect = thisLayer(4);\n        }\n\n        hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n\n        if (hasParent && !parent) {\n          parent = elem.hierarchy[0].layerInterface;\n        }\n\n        this.lock = true;\n\n        if (this.getPreValue) {\n          this.getPreValue();\n        }\n\n        value = this.pv;\n        time = this.comp.renderedFrame / this.comp.globalData.frameRate;\n\n        if (needsVelocity) {\n          velocity = velocityAtTime(time);\n        }\n\n        bindedFn();\n        this.frameExpressionId = elem.globalData.frameId;\n        var i, len;\n\n        if (this.mult) {\n          if (typeof this.v === 'number' || this.v instanceof Number || this.v instanceof String || typeof this.v === 'string') {\n            this.v *= this.mult;\n          } else if (this.v.length === 1) {\n            this.v = this.v[0] * this.mult;\n          } else {\n            len = this.v.length;\n\n            if (value === this.v) {\n              this.v = len === 2 ? [value[0], value[1]] : [value[0], value[1], value[2]];\n            }\n\n            for (i = 0; i < len; i += 1) {\n              this.v[i] *= this.mult;\n            }\n          }\n        }\n\n        if (this.v.length === 1) {\n          this.v = this.v[0];\n        }\n\n        if (typeof this.v === 'number' || this.v instanceof Number || this.v instanceof String || typeof this.v === 'string') {\n          if (this.lastValue !== this.v) {\n            this.lastValue = this.v;\n            this.mdf = true;\n          }\n        } else if (this.v._length) {\n          if (!shapesEqual(this.v, this.localShapeCollection.shapes[0])) {\n            this.mdf = true;\n            this.localShapeCollection.releaseShapes();\n            this.localShapeCollection.addShape(shape_pool.clone(this.v));\n          }\n        } else {\n          len = this.v.length;\n\n          for (i = 0; i < len; i += 1) {\n            if (this.v[i] !== this.lastValue[i]) {\n              this.lastValue[i] = this.v[i];\n              this.mdf = true;\n            }\n          }\n        }\n\n        this.lock = false;\n      }\n\n      return executeExpression;\n    }\n\n    ;\n    ob.initiateExpression = initiateExpression;\n    return ob;\n  }();\n\n  var ShapeExpressionInterface = function () {\n    var ob = {\n      createShapeInterface: createShapeInterface,\n      createGroupInterface: createGroupInterface,\n      createTrimInterface: createTrimInterface,\n      createStrokeInterface: createStrokeInterface,\n      createTransformInterface: createTransformInterface,\n      createEllipseInterface: createEllipseInterface,\n      createStarInterface: createStarInterface,\n      createRectInterface: createRectInterface,\n      createRoundedInterface: createRoundedInterface,\n      createRepatearInterface: createRepatearInterface,\n      createPathInterface: createPathInterface,\n      createFillInterface: createFillInterface\n    };\n\n    function createShapeInterface(shapes, view, propertyGroup) {\n      return shapeInterfaceFactory(shapes, view, propertyGroup);\n    }\n\n    function createGroupInterface(shapes, view, propertyGroup) {\n      return groupInterfaceFactory(shapes, view, propertyGroup);\n    }\n\n    function createFillInterface(shape, view, propertyGroup) {\n      return fillInterfaceFactory(shape, view, propertyGroup);\n    }\n\n    function createStrokeInterface(shape, view, propertyGroup) {\n      return strokeInterfaceFactory(shape, view, propertyGroup);\n    }\n\n    function createTrimInterface(shape, view, propertyGroup) {\n      return trimInterfaceFactory(shape, view, propertyGroup);\n    }\n\n    function createTransformInterface(shape, view, propertyGroup) {\n      return transformInterfaceFactory(shape, view, propertyGroup);\n    }\n\n    function createEllipseInterface(shape, view, propertyGroup) {\n      return ellipseInterfaceFactory(shape, view, propertyGroup);\n    }\n\n    function createStarInterface(shape, view, propertyGroup) {\n      return starInterfaceFactory(shape, view, propertyGroup);\n    }\n\n    function createRectInterface(shape, view, propertyGroup) {\n      return rectInterfaceFactory(shape, view, propertyGroup);\n    }\n\n    function createRoundedInterface(shape, view, propertyGroup) {\n      return roundedInterfaceFactory(shape, view, propertyGroup);\n    }\n\n    function createRepatearInterface(shape, view, propertyGroup) {\n      return repeaterInterfaceFactory(shape, view, propertyGroup);\n    }\n\n    function createPathInterface(shape, view, propertyGroup) {\n      return pathInterfaceFactory(shape, view, propertyGroup);\n    }\n\n    function iterateElements(shapes, view, propertyGroup) {\n      var arr = [];\n      var i,\n          len = shapes ? shapes.length : 0;\n\n      for (i = 0; i < len; i += 1) {\n        if (shapes[i].ty == 'gr') {\n          arr.push(ShapeExpressionInterface.createGroupInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'fl') {\n          arr.push(ShapeExpressionInterface.createFillInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'st') {\n          arr.push(ShapeExpressionInterface.createStrokeInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'tm') {\n          arr.push(ShapeExpressionInterface.createTrimInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'tr') {//arr.push(ShapeExpressionInterface.createTransformInterface(shapes[i],view[i],propertyGroup));\n        } else if (shapes[i].ty == 'el') {\n          arr.push(ShapeExpressionInterface.createEllipseInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'sr') {\n          arr.push(ShapeExpressionInterface.createStarInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'sh') {\n          arr.push(ShapeExpressionInterface.createPathInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'rc') {\n          arr.push(ShapeExpressionInterface.createRectInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'rd') {\n          arr.push(ShapeExpressionInterface.createRoundedInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'rp') {\n          arr.push(ShapeExpressionInterface.createRepatearInterface(shapes[i], view[i], propertyGroup));\n        } else {//console.log(shapes[i].ty);\n        }\n      }\n\n      return arr;\n    }\n\n    var shapeInterfaceFactory = function () {\n      return function (shapes, view, propertyGroup) {\n        var interfaces;\n\n        function _interfaceFunction(value) {\n          if (typeof value === 'number') {\n            return interfaces[value - 1];\n          } else {\n            var i = 0,\n                len = interfaces.length;\n\n            while (i < len) {\n              if (interfaces[i]._name === value) {\n                return interfaces[i];\n              }\n\n              i += 1;\n            }\n          }\n        }\n\n        _interfaceFunction.propertyGroup = propertyGroup;\n        interfaces = iterateElements(shapes, view, _interfaceFunction);\n        return _interfaceFunction;\n      };\n    }();\n\n    var contentsInterfaceFactory = function () {\n      return function (shape, view, propertyGroup) {\n        var interfaces;\n\n        var interfaceFunction = function _interfaceFunction(value) {\n          var i = 0,\n              len = interfaces.length;\n\n          while (i < len) {\n            if (interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value) {\n              return interfaces[i];\n            }\n\n            i += 1;\n          }\n\n          if (typeof value === 'number') {\n            return interfaces[value - 1];\n          }\n        };\n\n        interfaceFunction.propertyGroup = function (val) {\n          if (val === 1) {\n            return interfaceFunction;\n          } else {\n            return propertyGroup(val - 1);\n          }\n        };\n\n        interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\n        interfaceFunction.numProperties = interfaces.length;\n        interfaceFunction.propertyIndex = shape.cix;\n        return interfaceFunction;\n      };\n    }();\n\n    var groupInterfaceFactory = function () {\n      return function (shape, view, propertyGroup) {\n        var interfaceFunction = function _interfaceFunction(value) {\n          switch (value) {\n            case 'ADBE Vectors Group':\n            case 'Contents':\n            case 2:\n              return interfaceFunction.content;\n\n            case 'ADBE Vector Transform Group':\n            case 3:\n            default:\n              return interfaceFunction.transform;\n          }\n        };\n\n        interfaceFunction.propertyGroup = function (val) {\n          if (val === 1) {\n            return interfaceFunction;\n          } else {\n            return propertyGroup(val - 1);\n          }\n        };\n\n        var content = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);\n        var transformInterface = ShapeExpressionInterface.createTransformInterface(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n        interfaceFunction.content = content;\n        interfaceFunction.transform = transformInterface;\n        Object.defineProperty(interfaceFunction, '_name', {\n          get: function get() {\n            return shape.nm;\n          }\n        }); //interfaceFunction.content = interfaceFunction;\n\n        interfaceFunction.numProperties = shape.np;\n        interfaceFunction.propertyIndex = shape.ix;\n        interfaceFunction.nm = shape.nm;\n        interfaceFunction.mn = shape.mn;\n        return interfaceFunction;\n      };\n    }();\n\n    var fillInterfaceFactory = function () {\n      return function (shape, view, propertyGroup) {\n        function interfaceFunction(val) {\n          if (val === 'Color' || val === 'color') {\n            return interfaceFunction.color;\n          } else if (val === 'Opacity' || val === 'opacity') {\n            return interfaceFunction.opacity;\n          }\n        }\n\n        Object.defineProperty(interfaceFunction, 'color', {\n          get: function get() {\n            return ExpressionValue(view.c, 1 / view.c.mult, 'color');\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'opacity', {\n          get: function get() {\n            return ExpressionValue(view.o, 100);\n          }\n        });\n        Object.defineProperty(interfaceFunction, '_name', {\n          value: shape.nm\n        });\n        Object.defineProperty(interfaceFunction, 'mn', {\n          value: shape.mn\n        });\n        view.c.setGroupProperty(propertyGroup);\n        view.o.setGroupProperty(propertyGroup);\n        return interfaceFunction;\n      };\n    }();\n\n    var strokeInterfaceFactory = function () {\n      return function (shape, view, propertyGroup) {\n        function _propertyGroup(val) {\n          if (val === 1) {\n            return ob;\n          } else {\n            return propertyGroup(val - 1);\n          }\n        }\n\n        ;\n\n        function _dashPropertyGroup(val) {\n          if (val === 1) {\n            return dashOb;\n          } else {\n            return _propertyGroup(val - 1);\n          }\n        }\n\n        ;\n\n        function addPropertyToDashOb(i) {\n          Object.defineProperty(dashOb, shape.d[i].nm, {\n            get: function get() {\n              return ExpressionValue(view.d.dataProps[i].p);\n            }\n          });\n        }\n\n        var i,\n            len = shape.d ? shape.d.length : 0;\n        var dashOb = {};\n\n        for (i = 0; i < len; i += 1) {\n          addPropertyToDashOb(i);\n          view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\n        }\n\n        function interfaceFunction(val) {\n          if (val === 'Color' || val === 'color') {\n            return interfaceFunction.color;\n          } else if (val === 'Opacity' || val === 'opacity') {\n            return interfaceFunction.opacity;\n          } else if (val === 'Stroke Width' || val === 'stroke width') {\n            return interfaceFunction.strokeWidth;\n          }\n        }\n\n        Object.defineProperty(interfaceFunction, 'color', {\n          get: function get() {\n            return ExpressionValue(view.c, 1 / view.c.mult, 'color');\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'opacity', {\n          get: function get() {\n            return ExpressionValue(view.o, 100);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'strokeWidth', {\n          get: function get() {\n            return ExpressionValue(view.w);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'dash', {\n          get: function get() {\n            return dashOb;\n          }\n        });\n        Object.defineProperty(interfaceFunction, '_name', {\n          value: shape.nm\n        });\n        Object.defineProperty(interfaceFunction, 'mn', {\n          value: shape.mn\n        });\n        view.c.setGroupProperty(_propertyGroup);\n        view.o.setGroupProperty(_propertyGroup);\n        view.w.setGroupProperty(_propertyGroup);\n        return interfaceFunction;\n      };\n    }();\n\n    var trimInterfaceFactory = function () {\n      return function (shape, view, propertyGroup) {\n        function _propertyGroup(val) {\n          if (val == 1) {\n            return interfaceFunction;\n          } else {\n            return propertyGroup(--val);\n          }\n        }\n\n        interfaceFunction.propertyIndex = shape.ix;\n        view.s.setGroupProperty(_propertyGroup);\n        view.e.setGroupProperty(_propertyGroup);\n        view.o.setGroupProperty(_propertyGroup);\n\n        function interfaceFunction(val) {\n          if (val === shape.e.ix || val === 'End' || val === 'end') {\n            return interfaceFunction.end;\n          }\n\n          if (val === shape.s.ix) {\n            return interfaceFunction.start;\n          }\n\n          if (val === shape.o.ix) {\n            return interfaceFunction.offset;\n          }\n        }\n\n        interfaceFunction.propertyIndex = shape.ix;\n        Object.defineProperty(interfaceFunction, 'start', {\n          get: function get() {\n            return ExpressionValue(view.s, 1 / view.s.mult);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'end', {\n          get: function get() {\n            return ExpressionValue(view.e, 1 / view.e.mult);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'offset', {\n          get: function get() {\n            return ExpressionValue(view.o);\n          }\n        });\n        Object.defineProperty(interfaceFunction, '_name', {\n          get: function get() {\n            return shape.nm;\n          }\n        });\n        interfaceFunction.mn = shape.mn;\n        return interfaceFunction;\n      };\n    }();\n\n    var transformInterfaceFactory = function () {\n      return function (shape, view, propertyGroup) {\n        function _propertyGroup(val) {\n          if (val == 1) {\n            return interfaceFunction;\n          } else {\n            return propertyGroup(--val);\n          }\n        }\n\n        view.transform.mProps.o.setGroupProperty(_propertyGroup);\n        view.transform.mProps.p.setGroupProperty(_propertyGroup);\n        view.transform.mProps.a.setGroupProperty(_propertyGroup);\n        view.transform.mProps.s.setGroupProperty(_propertyGroup);\n        view.transform.mProps.r.setGroupProperty(_propertyGroup);\n\n        if (view.transform.mProps.sk) {\n          view.transform.mProps.sk.setGroupProperty(_propertyGroup);\n          view.transform.mProps.sa.setGroupProperty(_propertyGroup);\n        }\n\n        view.transform.op.setGroupProperty(_propertyGroup);\n\n        function interfaceFunction(value) {\n          if (shape.a.ix === value) {\n            return interfaceFunction.anchorPoint;\n          }\n\n          if (shape.o.ix === value) {\n            return interfaceFunction.opacity;\n          }\n\n          if (shape.p.ix === value) {\n            return interfaceFunction.position;\n          }\n\n          if (shape.r.ix === value) {\n            return interfaceFunction.rotation;\n          }\n\n          if (shape.s.ix === value) {\n            return interfaceFunction.scale;\n          }\n\n          if (shape.sk && shape.sk.ix === value) {\n            return interfaceFunction.skew;\n          }\n\n          if (shape.sa && shape.sa.ix === value) {\n            return interfaceFunction.skewAxis;\n          }\n\n          if (value === 'Opacity') {\n            return interfaceFunction.opacity;\n          }\n\n          if (value === 'Position') {\n            return interfaceFunction.position;\n          }\n\n          if (value === 'Anchor Point') {\n            return interfaceFunction.anchorPoint;\n          }\n\n          if (value === 'Scale') {\n            return interfaceFunction.scale;\n          }\n\n          if (value === 'Rotation' || value === 'ADBE Vector Rotation') {\n            return interfaceFunction.rotation;\n          }\n\n          if (value === 'Skew') {\n            return interfaceFunction.skew;\n          }\n\n          if (value === 'Skew Axis') {\n            return interfaceFunction.skewAxis;\n          }\n        }\n\n        Object.defineProperty(interfaceFunction, 'opacity', {\n          get: function get() {\n            return ExpressionValue(view.transform.mProps.o, 1 / view.transform.mProps.o.mult);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'position', {\n          get: function get() {\n            return ExpressionValue(view.transform.mProps.p);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'anchorPoint', {\n          get: function get() {\n            return ExpressionValue(view.transform.mProps.a);\n          }\n        });\n        var scaleArray = [];\n        Object.defineProperty(interfaceFunction, 'scale', {\n          get: function get() {\n            return ExpressionValue(view.transform.mProps.s, 1 / view.transform.mProps.s.mult);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'rotation', {\n          get: function get() {\n            return ExpressionValue(view.transform.mProps.r, 1 / view.transform.mProps.r.mult);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'skew', {\n          get: function get() {\n            return ExpressionValue(view.transform.mProps.sk);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'skewAxis', {\n          get: function get() {\n            return ExpressionValue(view.transform.mProps.sa);\n          }\n        });\n        Object.defineProperty(interfaceFunction, '_name', {\n          get: function get() {\n            return shape.nm;\n          }\n        });\n        interfaceFunction.ty = 'tr';\n        interfaceFunction.mn = shape.mn;\n        return interfaceFunction;\n      };\n    }();\n\n    var ellipseInterfaceFactory = function () {\n      return function (shape, view, propertyGroup) {\n        function _propertyGroup(val) {\n          if (val == 1) {\n            return interfaceFunction;\n          } else {\n            return propertyGroup(--val);\n          }\n        }\n\n        interfaceFunction.propertyIndex = shape.ix;\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n        prop.s.setGroupProperty(_propertyGroup);\n        prop.p.setGroupProperty(_propertyGroup);\n\n        function interfaceFunction(value) {\n          if (shape.p.ix === value) {\n            return interfaceFunction.position;\n          }\n\n          if (shape.s.ix === value) {\n            return interfaceFunction.size;\n          }\n        }\n\n        Object.defineProperty(interfaceFunction, 'size', {\n          get: function get() {\n            return ExpressionValue(prop.s);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'position', {\n          get: function get() {\n            return ExpressionValue(prop.p);\n          }\n        });\n        Object.defineProperty(interfaceFunction, '_name', {\n          get: function get() {\n            return shape.nm;\n          }\n        });\n        interfaceFunction.mn = shape.mn;\n        return interfaceFunction;\n      };\n    }();\n\n    var starInterfaceFactory = function () {\n      return function (shape, view, propertyGroup) {\n        function _propertyGroup(val) {\n          if (val == 1) {\n            return interfaceFunction;\n          } else {\n            return propertyGroup(--val);\n          }\n        }\n\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n        interfaceFunction.propertyIndex = shape.ix;\n        prop.or.setGroupProperty(_propertyGroup);\n        prop.os.setGroupProperty(_propertyGroup);\n        prop.pt.setGroupProperty(_propertyGroup);\n        prop.p.setGroupProperty(_propertyGroup);\n        prop.r.setGroupProperty(_propertyGroup);\n\n        if (shape.ir) {\n          prop.ir.setGroupProperty(_propertyGroup);\n          prop.is.setGroupProperty(_propertyGroup);\n        }\n\n        function interfaceFunction(value) {\n          if (shape.p.ix === value) {\n            return interfaceFunction.position;\n          }\n\n          if (shape.r.ix === value) {\n            return interfaceFunction.rotation;\n          }\n\n          if (shape.pt.ix === value) {\n            return interfaceFunction.points;\n          }\n\n          if (shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value) {\n            return interfaceFunction.outerRadius;\n          }\n\n          if (shape.os.ix === value) {\n            return interfaceFunction.outerRoundness;\n          }\n\n          if (shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)) {\n            return interfaceFunction.innerRadius;\n          }\n\n          if (shape.is && shape.is.ix === value) {\n            return interfaceFunction.innerRoundness;\n          }\n        }\n\n        Object.defineProperty(interfaceFunction, 'position', {\n          get: function get() {\n            return ExpressionValue(prop.p);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'rotation', {\n          get: function get() {\n            return ExpressionValue(prop.r, 1 / prop.r.mult);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'points', {\n          get: function get() {\n            return ExpressionValue(prop.pt);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'outerRadius', {\n          get: function get() {\n            return ExpressionValue(prop.or);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'outerRoundness', {\n          get: function get() {\n            return ExpressionValue(prop.os);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'innerRadius', {\n          get: function get() {\n            if (!prop.ir) {\n              return 0;\n            }\n\n            return ExpressionValue(prop.ir);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'innerRoundness', {\n          get: function get() {\n            if (!prop.is) {\n              return 0;\n            }\n\n            return ExpressionValue(prop.is, 1 / prop.is.mult);\n          }\n        });\n        Object.defineProperty(interfaceFunction, '_name', {\n          get: function get() {\n            return shape.nm;\n          }\n        });\n        interfaceFunction.mn = shape.mn;\n        return interfaceFunction;\n      };\n    }();\n\n    var rectInterfaceFactory = function () {\n      return function (shape, view, propertyGroup) {\n        function _propertyGroup(val) {\n          if (val == 1) {\n            return interfaceFunction;\n          } else {\n            return propertyGroup(--val);\n          }\n        }\n\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n        interfaceFunction.propertyIndex = shape.ix;\n        prop.p.setGroupProperty(_propertyGroup);\n        prop.s.setGroupProperty(_propertyGroup);\n        prop.r.setGroupProperty(_propertyGroup);\n\n        function interfaceFunction(value) {\n          if (shape.p.ix === value) {\n            return interfaceFunction.position;\n          }\n\n          if (shape.r.ix === value) {\n            return interfaceFunction.roundness;\n          }\n\n          if (shape.s.ix === value || value === 'Size') {\n            return interfaceFunction.size;\n          }\n        }\n\n        Object.defineProperty(interfaceFunction, 'position', {\n          get: function get() {\n            return ExpressionValue(prop.p);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'roundness', {\n          get: function get() {\n            return ExpressionValue(prop.r);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'size', {\n          get: function get() {\n            return ExpressionValue(prop.s);\n          }\n        });\n        Object.defineProperty(interfaceFunction, '_name', {\n          get: function get() {\n            return shape.nm;\n          }\n        });\n        interfaceFunction.mn = shape.mn;\n        return interfaceFunction;\n      };\n    }();\n\n    var roundedInterfaceFactory = function () {\n      return function (shape, view, propertyGroup) {\n        function _propertyGroup(val) {\n          if (val == 1) {\n            return interfaceFunction;\n          } else {\n            return propertyGroup(--val);\n          }\n        }\n\n        var prop = view;\n        interfaceFunction.propertyIndex = shape.ix;\n        prop.rd.setGroupProperty(_propertyGroup);\n\n        function interfaceFunction(value) {\n          if (shape.r.ix === value || 'Round Corners 1' === value) {\n            return interfaceFunction.radius;\n          }\n        }\n\n        Object.defineProperty(interfaceFunction, 'radius', {\n          get: function get() {\n            return ExpressionValue(prop.rd);\n          }\n        });\n        Object.defineProperty(interfaceFunction, '_name', {\n          get: function get() {\n            return shape.nm;\n          }\n        });\n        interfaceFunction.mn = shape.mn;\n        return interfaceFunction;\n      };\n    }();\n\n    var repeaterInterfaceFactory = function () {\n      return function (shape, view, propertyGroup) {\n        function _propertyGroup(val) {\n          if (val == 1) {\n            return interfaceFunction;\n          } else {\n            return propertyGroup(--val);\n          }\n        }\n\n        var prop = view;\n        interfaceFunction.propertyIndex = shape.ix;\n        prop.c.setGroupProperty(_propertyGroup);\n        prop.o.setGroupProperty(_propertyGroup);\n\n        function interfaceFunction(value) {\n          if (shape.c.ix === value || 'Copies' === value) {\n            return interfaceFunction.copies;\n          } else if (shape.o.ix === value || 'Offset' === value) {\n            return interfaceFunction.offset;\n          }\n        }\n\n        Object.defineProperty(interfaceFunction, 'copies', {\n          get: function get() {\n            return ExpressionValue(prop.c);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'offset', {\n          get: function get() {\n            return ExpressionValue(prop.o);\n          }\n        });\n        Object.defineProperty(interfaceFunction, '_name', {\n          get: function get() {\n            return shape.nm;\n          }\n        });\n        interfaceFunction.mn = shape.mn;\n        return interfaceFunction;\n      };\n    }();\n\n    var pathInterfaceFactory = function () {\n      return function (shape, view, propertyGroup) {\n        var prop = view.sh;\n\n        function _propertyGroup(val) {\n          if (val == 1) {\n            return interfaceFunction;\n          } else {\n            return propertyGroup(--val);\n          }\n        }\n\n        prop.setGroupProperty(_propertyGroup);\n\n        function interfaceFunction(val) {\n          if (val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2) {\n            return interfaceFunction.path;\n          }\n        }\n\n        Object.defineProperty(interfaceFunction, 'path', {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop; //return shape_pool.clone(prop.v);\n          }\n        });\n        Object.defineProperty(interfaceFunction, 'shape', {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop; //return shape_pool.clone(prop.v);\n          }\n        });\n        Object.defineProperty(interfaceFunction, '_name', {\n          value: shape.nm\n        });\n        Object.defineProperty(interfaceFunction, 'ix', {\n          value: shape.ix\n        });\n        Object.defineProperty(interfaceFunction, 'mn', {\n          value: shape.mn\n        });\n        return interfaceFunction;\n      };\n    }();\n\n    return ob;\n  }();\n\n  var TextExpressionInterface = function () {\n    return function (elem) {\n      var _prevValue, _sourceText;\n\n      function _thisLayerFunction() {}\n\n      Object.defineProperty(_thisLayerFunction, \"sourceText\", {\n        get: function get() {\n          var stringValue = elem.textProperty.currentData.t;\n\n          if (elem.textProperty.currentData.t !== _prevValue) {\n            elem.textProperty.currentData.t = _prevValue;\n            _sourceText = new String(stringValue); //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\n\n            _sourceText.value = stringValue ? stringValue : new String(stringValue);\n          }\n\n          return _sourceText;\n        }\n      });\n      return _thisLayerFunction;\n    };\n  }();\n\n  var LayerExpressionInterface = function () {\n    function toWorld(arr, time) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n      var transformMat;\n\n      if (time) {\n        //Todo implement value at time on transform properties\n        //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\n        transformMat = this._elem.finalTransform.mProp;\n      } else {\n        transformMat = this._elem.finalTransform.mProp;\n      }\n\n      transformMat.applyToMatrix(toWorldMat);\n\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i,\n            len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n\n        return toWorldMat.applyToPointArray(arr[0], arr[1], arr[2] || 0);\n      }\n\n      return toWorldMat.applyToPointArray(arr[0], arr[1], arr[2] || 0);\n    }\n\n    function fromWorld(arr, time) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n      var transformMat;\n\n      if (time) {\n        //Todo implement value at time on transform properties\n        //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\n        transformMat = this._elem.finalTransform.mProp;\n      } else {\n        transformMat = this._elem.finalTransform.mProp;\n      }\n\n      transformMat.applyToMatrix(toWorldMat);\n\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i,\n            len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n\n        return toWorldMat.inversePoint(arr);\n      }\n\n      return toWorldMat.inversePoint(arr);\n    }\n\n    function fromComp(arr) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n\n      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\n\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i,\n            len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n\n        return toWorldMat.inversePoint(arr);\n      }\n\n      return toWorldMat.inversePoint(arr);\n    }\n\n    return function (elem) {\n      var transformInterface = TransformExpressionInterface(elem.transform);\n\n      function _registerMaskInterface(maskManager) {\n        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\n      }\n\n      function _registerEffectsInterface(effects) {\n        _thisLayerFunction.effect = effects;\n      }\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case \"ADBE Root Vectors Group\":\n          case \"Contents\":\n          case 2:\n            return _thisLayerFunction.shapeInterface;\n\n          case 1:\n          case 6:\n          case \"Transform\":\n          case \"transform\":\n          case \"ADBE Transform Group\":\n            return transformInterface;\n\n          case 4:\n          case \"ADBE Effect Parade\":\n            return _thisLayerFunction.effect;\n        }\n      }\n\n      _thisLayerFunction.toWorld = toWorld;\n      _thisLayerFunction.fromWorld = fromWorld;\n      _thisLayerFunction.toComp = toWorld;\n      _thisLayerFunction.fromComp = fromComp;\n      _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\n      _thisLayerFunction._elem = elem;\n      Object.defineProperty(_thisLayerFunction, 'hasParent', {\n        get: function get() {\n          return !!elem.hierarchy;\n        }\n      });\n      Object.defineProperty(_thisLayerFunction, 'parent', {\n        get: function get() {\n          return elem.hierarchy[0].layerInterface;\n        }\n      });\n      Object.defineProperty(_thisLayerFunction, \"rotation\", {\n        get: function get() {\n          return transformInterface.rotation;\n        }\n      });\n      Object.defineProperty(_thisLayerFunction, \"scale\", {\n        get: function get() {\n          return transformInterface.scale;\n        }\n      });\n      Object.defineProperty(_thisLayerFunction, \"position\", {\n        get: function get() {\n          return transformInterface.position;\n        }\n      });\n      Object.defineProperty(_thisLayerFunction, \"anchorPoint\", {\n        get: function get() {\n          return transformInterface.anchorPoint;\n        }\n      });\n      Object.defineProperty(_thisLayerFunction, \"transform\", {\n        get: function get() {\n          return transformInterface;\n        }\n      });\n      Object.defineProperty(_thisLayerFunction, \"width\", {\n        get: function get() {\n          if (elem.data.ty === 0) {\n            return elem.data.w;\n          }\n\n          return 100;\n        }\n      });\n      Object.defineProperty(_thisLayerFunction, \"height\", {\n        get: function get() {\n          if (elem.data.ty === 0) {\n            return elem.data.h;\n          }\n\n          return 100;\n        }\n      });\n      Object.defineProperty(_thisLayerFunction, \"source\", {\n        get: function get() {\n          return elem.data.refId;\n        }\n      });\n      Object.defineProperty(_thisLayerFunction, \"index\", {\n        get: function get() {\n          return elem.data.ind;\n        }\n      });\n      Object.defineProperty(_thisLayerFunction, \"_name\", {\n        value: elem.data.nm\n      });\n      Object.defineProperty(_thisLayerFunction, \"content\", {\n        get: function get() {\n          return _thisLayerFunction.shapeInterface;\n        }\n      });\n      Object.defineProperty(_thisLayerFunction, \"active\", {\n        get: function get() {\n          return elem.isVisible;\n        }\n      });\n      Object.defineProperty(_thisLayerFunction, \"text\", {\n        get: function get() {\n          return _thisLayerFunction.textInterface;\n        }\n      });\n      _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\n      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\n      return _thisLayerFunction;\n    };\n  }();\n\n  var CompExpressionInterface = function () {\n    return function (comp) {\n      function _thisLayerFunction(name) {\n        var i = 0,\n            len = comp.layers.length;\n\n        while (i < len) {\n          if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\n            return comp.elements[i].layerInterface;\n          }\n\n          i += 1;\n        }\n\n        return {\n          active: false\n        };\n      }\n\n      Object.defineProperty(_thisLayerFunction, \"_name\", {\n        value: comp.data.nm\n      });\n      _thisLayerFunction.layer = _thisLayerFunction;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.height = comp.globalData.compSize.h;\n      _thisLayerFunction.width = comp.globalData.compSize.w;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;\n      return _thisLayerFunction;\n    };\n  }();\n\n  var TransformExpressionInterface = function () {\n    return function (transform) {\n      function _thisFunction(name) {\n        switch (name) {\n          case \"scale\":\n          case \"Scale\":\n          case \"ADBE Scale\":\n          case 6:\n            return _thisFunction.scale;\n\n          case \"rotation\":\n          case \"Rotation\":\n          case \"ADBE Rotation\":\n          case \"ADBE Rotate Z\":\n          case 10:\n            return _thisFunction.rotation;\n\n          case \"position\":\n          case \"Position\":\n          case \"ADBE Position\":\n          case 2:\n            return transform.position;\n\n          case \"anchorPoint\":\n          case \"AnchorPoint\":\n          case \"Anchor Point\":\n          case \"ADBE AnchorPoint\":\n          case 1:\n            return _thisFunction.anchorPoint;\n\n          case \"opacity\":\n          case \"Opacity\":\n          case 11:\n            return _thisFunction.opacity;\n        }\n      }\n\n      Object.defineProperty(_thisFunction, \"rotation\", {\n        get: function get() {\n          return transform.rotation;\n        }\n      });\n      Object.defineProperty(_thisFunction, \"scale\", {\n        get: function get() {\n          return transform.scale;\n        }\n      });\n      Object.defineProperty(_thisFunction, \"position\", {\n        get: function get() {\n          return transform.position;\n        }\n      });\n      Object.defineProperty(_thisFunction, \"xPosition\", {\n        get: function get() {\n          return transform.xPosition;\n        }\n      });\n      Object.defineProperty(_thisFunction, \"yPosition\", {\n        get: function get() {\n          return transform.yPosition;\n        }\n      });\n      Object.defineProperty(_thisFunction, \"anchorPoint\", {\n        get: function get() {\n          return transform.anchorPoint;\n        }\n      });\n      Object.defineProperty(_thisFunction, \"opacity\", {\n        get: function get() {\n          return transform.opacity;\n        }\n      });\n      Object.defineProperty(_thisFunction, \"skew\", {\n        get: function get() {\n          return transform.skew;\n        }\n      });\n      Object.defineProperty(_thisFunction, \"skewAxis\", {\n        get: function get() {\n          return transform.skewAxis;\n        }\n      });\n      return _thisFunction;\n    };\n  }();\n\n  var ProjectInterface = function () {\n    function registerComposition(comp) {\n      this.compositions.push(comp);\n    }\n\n    return function () {\n      function _thisProjectFunction(name) {\n        var i = 0,\n            len = this.compositions.length;\n\n        while (i < len) {\n          if (this.compositions[i].data && this.compositions[i].data.nm === name) {\n            if (this.compositions[i].prepareFrame) {\n              this.compositions[i].prepareFrame(this.currentFrame);\n            }\n\n            return this.compositions[i].compInterface;\n          }\n\n          i += 1;\n        }\n      }\n\n      _thisProjectFunction.compositions = [];\n      _thisProjectFunction.currentFrame = 0;\n      _thisProjectFunction.registerComposition = registerComposition;\n      return _thisProjectFunction;\n    };\n  }();\n\n  var EffectsExpressionInterface = function () {\n    var ob = {\n      createEffectsInterface: createEffectsInterface\n    };\n\n    function createEffectsInterface(elem, propertyGroup) {\n      if (elem.effects) {\n        var effectElements = [];\n        var effectsData = elem.data.ef;\n        var i,\n            len = elem.effects.effectElements.length;\n\n        for (i = 0; i < len; i += 1) {\n          effectElements.push(createGroupInterface(effectsData[i], elem.effects.effectElements[i], propertyGroup, elem));\n        }\n\n        return function (name) {\n          var effects = elem.data.ef,\n              i = 0,\n              len = effects.length;\n\n          while (i < len) {\n            if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n              return effectElements[i];\n            }\n\n            i += 1;\n          }\n        };\n      }\n    }\n\n    function createGroupInterface(data, elements, propertyGroup, elem) {\n      var effectElements = [];\n      var i,\n          len = data.ef.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (data.ef[i].ty === 5) {\n          effectElements.push(createGroupInterface(data.ef[i], elements.effectElements[i], elements.effectElements[i].propertyGroup, elem));\n        } else {\n          effectElements.push(createValueInterface(elements.effectElements[i], data.ef[i].ty, elem, _propertyGroup));\n        }\n      }\n\n      function _propertyGroup(val) {\n        if (val === 1) {\n          return groupInterface;\n        } else {\n          return propertyGroup(val - 1);\n        }\n      }\n\n      var groupInterface = function groupInterface(name) {\n        var effects = data.ef,\n            i = 0,\n            len = effects.length;\n\n        while (i < len) {\n          if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n            if (effects[i].ty === 5) {\n              return effectElements[i];\n            } else {\n              return effectElements[i]();\n            }\n          }\n\n          i += 1;\n        }\n\n        return effectElements[0]();\n      };\n\n      groupInterface.propertyGroup = _propertyGroup;\n\n      if (data.mn === 'ADBE Color Control') {\n        Object.defineProperty(groupInterface, 'color', {\n          get: function get() {\n            return effectElements[0]();\n          }\n        });\n      }\n\n      Object.defineProperty(groupInterface, 'numProperties', {\n        get: function get() {\n          return data.np;\n        }\n      });\n      groupInterface.active = data.en !== 0;\n      return groupInterface;\n    }\n\n    function createValueInterface(element, type, elem, propertyGroup) {\n      function interfaceFunction() {\n        if (type === 10) {\n          return elem.comp.compInterface(element.p.v);\n        }\n\n        return ExpressionValue(element.p);\n      }\n\n      if (element.p.setGroupProperty) {\n        element.p.setGroupProperty(propertyGroup);\n      }\n\n      return interfaceFunction;\n    }\n\n    return ob;\n  }();\n\n  var MaskManagerInterface = function () {\n    function MaskInterface(mask, data) {\n      this._mask = mask;\n      this._data = data;\n    }\n\n    Object.defineProperty(MaskInterface.prototype, 'maskPath', {\n      get: function get() {\n        if (this._mask.prop.k) {\n          this._mask.prop.getValue();\n        }\n\n        return this._mask.prop;\n      }\n    });\n\n    var MaskManager = function MaskManager(maskManager, elem) {\n      var _maskManager = maskManager;\n      var _elem = elem;\n\n      var _masksInterfaces = Array.apply(null, {\n        length: maskManager.viewData.length\n      });\n\n      var i,\n          len = maskManager.viewData.length;\n\n      for (i = 0; i < len; i += 1) {\n        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\n      }\n\n      var maskFunction = function maskFunction(name) {\n        i = 0;\n\n        while (i < len) {\n          if (maskManager.masksProperties[i].nm === name) {\n            return _masksInterfaces[i];\n          }\n\n          i += 1;\n        }\n      };\n\n      return maskFunction;\n    };\n\n    return MaskManager;\n  }();\n\n  var ExpressionValue = function () {\n    return function (elementProp, mult, type) {\n      var expressionValue, arrayValue;\n\n      if (elementProp.k) {\n        elementProp.getValue();\n      }\n\n      var i, len, arrValue;\n\n      if (type) {\n        if (type === 'color') {\n          len = 4;\n          expressionValue = Array.apply(null, {\n            length: len\n          });\n          arrValue = Array.apply(null, {\n            length: len\n          });\n\n          for (i = 0; i < len; i += 1) {\n            expressionValue[i] = arrValue[i] = mult && i < 3 ? elementProp.v[i] * mult : 1;\n          }\n\n          expressionValue.value = arrValue;\n        }\n      } else if (typeof elementProp.v === 'number' || elementProp.v instanceof Number) {\n        expressionValue = mult ? new Number(elementProp.v * mult) : new Number(elementProp.v);\n        expressionValue.value = mult ? elementProp.v * mult : elementProp.v;\n      } else {\n        len = elementProp.v.length;\n        expressionValue = Array.apply(null, {\n          length: len\n        });\n        arrValue = Array.apply(null, {\n          length: len\n        });\n\n        for (i = 0; i < len; i += 1) {\n          expressionValue[i] = arrValue[i] = mult ? elementProp.v[i] * mult : elementProp.v[i];\n        }\n\n        expressionValue.value = arrValue;\n      }\n\n      expressionValue.numKeys = elementProp.keyframes ? elementProp.keyframes.length : 0;\n\n      expressionValue.key = function (pos) {\n        if (!expressionValue.numKeys) {\n          return 0;\n        } else {\n          return elementProp.keyframes[pos - 1].t;\n        }\n      };\n\n      expressionValue.valueAtTime = elementProp.getValueAtTime;\n      expressionValue.propertyGroup = elementProp.propertyGroup;\n      return expressionValue;\n    };\n  }();\n\n  function SliderEffect(data, elem, dynamicProperties) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, dynamicProperties);\n  }\n\n  function AngleEffect(data, elem, dynamicProperties) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, dynamicProperties);\n  }\n\n  function ColorEffect(data, elem, dynamicProperties) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, dynamicProperties);\n  }\n\n  function PointEffect(data, elem, dynamicProperties) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, dynamicProperties);\n  }\n\n  function LayerIndexEffect(data, elem, dynamicProperties) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, dynamicProperties);\n  }\n\n  function MaskIndexEffect(data, elem, dynamicProperties) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, dynamicProperties);\n  }\n\n  function CheckboxEffect(data, elem, dynamicProperties) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, dynamicProperties);\n  }\n\n  function NoValueEffect() {\n    this.p = {};\n  }\n\n  function EffectsManager(data, element, dynamicProperties) {\n    var effects = data.ef;\n    this.effectElements = [];\n    var i,\n        len = effects.length;\n    var effectItem;\n\n    for (i = 0; i < len; i++) {\n      effectItem = new GroupEffect(effects[i], element, dynamicProperties);\n      this.effectElements.push(effectItem);\n    }\n  }\n\n  function GroupEffect(data, element, dynamicProperties) {\n    this.dynamicProperties = [];\n    this.init(data, element, this.dynamicProperties);\n\n    if (this.dynamicProperties.length) {\n      dynamicProperties.push(this);\n    }\n  }\n\n  GroupEffect.prototype.getValue = function () {\n    this.mdf = false;\n    var i,\n        len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n      this.mdf = this.dynamicProperties[i].mdf ? true : this.mdf;\n    }\n  };\n\n  GroupEffect.prototype.init = function (data, element, dynamicProperties) {\n    this.data = data;\n    this.mdf = false;\n    this.effectElements = [];\n    var i,\n        len = this.data.ef.length;\n    var eff,\n        effects = this.data.ef;\n\n    for (i = 0; i < len; i += 1) {\n      switch (effects[i].ty) {\n        case 0:\n          eff = new SliderEffect(effects[i], element, dynamicProperties);\n          this.effectElements.push(eff);\n          break;\n\n        case 1:\n          eff = new AngleEffect(effects[i], element, dynamicProperties);\n          this.effectElements.push(eff);\n          break;\n\n        case 2:\n          eff = new ColorEffect(effects[i], element, dynamicProperties);\n          this.effectElements.push(eff);\n          break;\n\n        case 3:\n          eff = new PointEffect(effects[i], element, dynamicProperties);\n          this.effectElements.push(eff);\n          break;\n\n        case 4:\n        case 7:\n          eff = new CheckboxEffect(effects[i], element, dynamicProperties);\n          this.effectElements.push(eff);\n          break;\n\n        case 10:\n          eff = new LayerIndexEffect(effects[i], element, dynamicProperties);\n          this.effectElements.push(eff);\n          break;\n\n        case 11:\n          eff = new MaskIndexEffect(effects[i], element, dynamicProperties);\n          this.effectElements.push(eff);\n          break;\n\n        case 5:\n          eff = new EffectsManager(effects[i], element, dynamicProperties);\n          this.effectElements.push(eff);\n          break;\n\n        case 6:\n          eff = new NoValueEffect(effects[i], element, dynamicProperties);\n          this.effectElements.push(eff);\n          break;\n      }\n    }\n  };\n\n  var bodymovinjs = {};\n\n  function setLocationHref(href) {\n    locationHref = href;\n  }\n\n  function play(animation) {\n    animationManager.play(animation);\n  }\n\n  function pause(animation) {\n    animationManager.pause(animation);\n  }\n\n  function togglePause(animation) {\n    animationManager.togglePause(animation);\n  }\n\n  function setSpeed(value, animation) {\n    animationManager.setSpeed(value, animation);\n  }\n\n  function setDirection(value, animation) {\n    animationManager.setDirection(value, animation);\n  }\n\n  function stop(animation) {\n    animationManager.stop(animation);\n  }\n\n  function moveFrame(value) {\n    animationManager.moveFrame(value);\n  }\n\n  function searchAnimations() {\n    if (standalone === true) {\n      animationManager.searchAnimations(animationData, standalone, renderer);\n    } else {\n      animationManager.searchAnimations();\n    }\n  }\n\n  function registerAnimation(elem) {\n    return animationManager.registerAnimation(elem);\n  }\n\n  function resize() {\n    animationManager.resize();\n  }\n\n  function start() {\n    animationManager.start();\n  }\n\n  function goToAndStop(val, isFrame, animation) {\n    animationManager.goToAndStop(val, isFrame, animation);\n  }\n\n  function setSubframeRendering(flag) {\n    subframeEnabled = flag;\n  }\n\n  function loadAnimation(params) {\n    if (standalone === true) {\n      params.animationData = JSON.parse(animationData);\n    }\n\n    return animationManager.loadAnimation(params);\n  }\n\n  function destroy(animation) {\n    return animationManager.destroy(animation);\n  }\n\n  function setQuality(value) {\n    if (typeof value === 'string') {\n      switch (value) {\n        case 'high':\n          defaultCurveSegments = 200;\n          break;\n\n        case 'medium':\n          defaultCurveSegments = 50;\n          break;\n\n        case 'low':\n          defaultCurveSegments = 10;\n          break;\n      }\n    } else if (!isNaN(value) && value > 1) {\n      defaultCurveSegments = value;\n    }\n\n    if (defaultCurveSegments >= 50) {\n      roundValues(false);\n    } else {\n      roundValues(true);\n    }\n  }\n\n  function inBrowser() {\n    return typeof navigator !== 'undefined';\n  }\n\n  function installPlugin(type, plugin) {\n    if (type === 'expressions') {\n      expressionsPlugin = plugin;\n    }\n  }\n\n  function getFactory(name) {\n    switch (name) {\n      case \"propertyFactory\":\n        return PropertyFactory;\n\n      case \"shapePropertyFactory\":\n        return ShapePropertyFactory;\n\n      case \"matrix\":\n        return Matrix;\n    }\n  }\n\n  bodymovinjs.play = play;\n  bodymovinjs.pause = pause;\n  bodymovinjs.setLocationHref = setLocationHref;\n  bodymovinjs.togglePause = togglePause;\n  bodymovinjs.setSpeed = setSpeed;\n  bodymovinjs.setDirection = setDirection;\n  bodymovinjs.stop = stop;\n  bodymovinjs.moveFrame = moveFrame;\n  bodymovinjs.searchAnimations = searchAnimations;\n  bodymovinjs.registerAnimation = registerAnimation;\n  bodymovinjs.loadAnimation = loadAnimation;\n  bodymovinjs.setSubframeRendering = setSubframeRendering;\n  bodymovinjs.resize = resize;\n  bodymovinjs.start = start;\n  bodymovinjs.goToAndStop = goToAndStop;\n  bodymovinjs.destroy = destroy;\n  bodymovinjs.setQuality = setQuality;\n  bodymovinjs.inBrowser = inBrowser;\n  bodymovinjs.installPlugin = installPlugin;\n  bodymovinjs.__getFactory = getFactory;\n  bodymovinjs.version = '4.13.0';\n\n  function checkReady() {\n    if (document.readyState === \"complete\") {\n      clearInterval(readyStateCheckInterval);\n      searchAnimations();\n    }\n  }\n\n  function getQueryVariable(variable) {\n    var vars = queryString.split('&');\n\n    for (var i = 0; i < vars.length; i++) {\n      var pair = vars[i].split('=');\n\n      if (decodeURIComponent(pair[0]) == variable) {\n        return decodeURIComponent(pair[1]);\n      }\n    }\n  }\n\n  var standalone = '__[STANDALONE]__';\n  var animationData = '__[ANIMATIONDATA]__';\n  var renderer = '';\n\n  if (standalone) {\n    var scripts = document.getElementsByTagName('script');\n    var index = scripts.length - 1;\n    var myScript = scripts[index] || {\n      src: ''\n    };\n    var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\n    renderer = getQueryVariable('renderer');\n  }\n\n  var readyStateCheckInterval = setInterval(checkReady, 100);\n  return bodymovinjs;\n});"],"sourceRoot":""}